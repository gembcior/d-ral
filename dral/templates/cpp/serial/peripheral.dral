{% include 'header.dral' %}

#ifndef DRAL_{{ device.name | upper }}_{{ peripheral.name | upper }}_H
#define DRAL_{{ device.name | upper }}_{{ peripheral.name | upper }}_H

{% include 'model.import.dral' %}

namespace dral::{{ device.name | lower }} {

/**
 * @brief {{ peripheral.name | upper}} peripheral
{%- if peripheral.description | length %}
 *
 * {{ peripheral.description | trim(" \n\r") | wordwrap(160, wrapstring="\n * ") }}
{%- endif %}
 */
struct {{ peripheral.name | lower }}
{
{%- for register in peripheral.registers %}
  /**
   * @brief {{ register.name | upper}} register
{%- if register.description | length %}
   *
   * {{ register.description | trim(" \n\r") | wordwrap(160, wrapstring="\n   * ") }}
{%- endif %}
   */
  struct {{ register.name | lower | isforbidden }}
  {
    constexpr static unsigned int Address = {{ "0x{:08X}".format(peripheral.address) }} + {{ "0x{:04X}".format(register.offset) }}; /**< Register address */
    union
    {
      uint{{ register.size }}_t value;
      {%- for field in register.fields %}
      /**
       * @brief {{ field.name | upper}} field
      {%- if field.description | length %}
       *
       * {{ field.description | trim(" \n\r") | wordwrap(160, wrapstring="\n       * ") }}
      {%- endif %}
       */
      BitFieldModel<uint{{ register.size }}_t, {{ field.position }}, {{ field.width }}> {{ field.name | lower | isforbidden }};
      {%- endfor %}
    };
  };
{% endfor %}
};

}

#endif /* DRAL_{{ device.name | upper }}_{{ peripheral.name | upper }}_H */
