{% include 'header.dral' %}

#ifndef DRAL_{{ device.name | upper }}_{{ peripheral.name | upper }}_H
#define DRAL_{{ device.name | upper }}_{{ peripheral.name | upper }}_H

{% include 'model.import.dral' %}

namespace dral::{{ device.name | lower }} {

class {{ peripheral.name | lower }}
{
public:
  static constexpr unsigned int BaseAddress = {{ "0x{:08X}".format(peripheral.address) }};

{% for register in peripheral.registers -%}
private:
  template<unsigned int address>
  class {{ register.name | title }}Reg : public RegisterModel<uint{{ register.size }}_t, address>
  {
  public:
    {%- for field in register.fields %}
    using {{ field.name | lower | isforbidden }} = FieldModel<uint{{ register.size }}_t, address, {{ field.position }}, {{ field.width }}>;
    {%- endfor %}

  public:
    union reg
    {
      uint{{ register.size }}_t value;
      {%- for field in register.fields %}
      BitFieldModel<uint{{ register.size }}_t, {{ field.position }}, {{ field.width }}> {{ field.name | lower | isforbidden }};
      {%- endfor %}
    };
  };

public:
  using {{ register.name | lower | isforbidden }} = {{ register.name | title }}Reg<BaseAddress + {{ "0x{:04X}".format(register.offset) }}>;

{% endfor -%}

{% for bank in peripheral.banks -%}
private:
  template<unsigned int address, unsigned int bankOffset>
  class {{ bank.name | title }}BankReg : public RegisterBankModel<uint{{ bank.size }}_t, address, bankOffset>
  {
  public:
    {%- for field in bank.fields %}
    using {{ field.name | lower | isforbidden }} = FieldModel<uint{{ bank.size }}_t, address, {{ field.position }}, {{ field.width }}, bankOffset>;
    {%- endfor %}

  public:
    union reg
    {
      uint{{ bank.size }}_t value;
      {%- for field in bank.fields %}
      BitFieldModel<uint{{ bank.size }}_t, {{ field.position }}, {{ field.width }}> {{ field.name | lower | isforbidden }};
      {%- endfor %}
    };
  };

public:
  using {{ bank.name | lower | isforbidden }} = {{ bank.name | title }}BankReg<BaseAddress + {{ "0x{:04X}".format(bank.offset) }}, {{ "0x{:04X}".format(bank.bank_offset) }}>;

{% endfor -%}
};

}

#endif /* DRAL_{{ device.name | upper }}_{{ peripheral.name | upper }}_H */
