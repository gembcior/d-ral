- content: "#ifndef DRAL_STM32F446_DCMI_H\n#define DRAL_STM32F446_DCMI_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass dcmi\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x50050000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using capture = FieldModel<address, 0, 0x00000001>;\n    using cm = FieldModel<address,\
    \ 1, 0x00000001>;\n    using crop = FieldModel<address, 2, 0x00000001>;\n    using\
    \ jpeg = FieldModel<address, 3, 0x00000001>;\n    using ess = FieldModel<address,\
    \ 4, 0x00000001>;\n    using pckpol = FieldModel<address, 5, 0x00000001>;\n  \
    \  using hspol = FieldModel<address, 6, 0x00000001>;\n    using vspol = FieldModel<address,\
    \ 7, 0x00000001>;\n    using edm = FieldModel<address, 10, 0x00000003>;\n    using\
    \ enable = FieldModel<address, 14, 0x00000001>;\n    using bsm = FieldModel<address,\
    \ 16, 0x00000003>;\n    using oebs = FieldModel<address, 18, 0x00000001>;\n  \
    \  using lsm = FieldModel<address, 19, 0x00000001>;\n    using oels = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fcrc = FieldModel<address, 8, 0x00000003>;\n  };\n\
    \npublic:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n   \
    \ using fne = FieldModel<address, 2, 0x00000001>;\n    using vsync = FieldModel<address,\
    \ 1, 0x00000001>;\n    using hsync = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class RisReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using line_ris = FieldModel<address, 4, 0x00000001>;\n    using vsync_ris =\
    \ FieldModel<address, 3, 0x00000001>;\n    using err_ris = FieldModel<address,\
    \ 2, 0x00000001>;\n    using ovr_ris = FieldModel<address, 1, 0x00000001>;\n \
    \   using frame_ris = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n \
    \ using ris = RisReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class IerReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using line_ie = FieldModel<address, 4, 0x00000001>;\n    using vsync_ie = FieldModel<address,\
    \ 3, 0x00000001>;\n    using err_ie = FieldModel<address, 2, 0x00000001>;\n  \
    \  using ovr_ie = FieldModel<address, 1, 0x00000001>;\n    using frame_ie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ier = IerReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class MisReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using line_mis = FieldModel<address, 4, 0x00000001>;\n  \
    \  using vsync_mis = FieldModel<address, 3, 0x00000001>;\n    using err_mis =\
    \ FieldModel<address, 2, 0x00000001>;\n    using ovr_mis = FieldModel<address,\
    \ 1, 0x00000001>;\n    using frame_mis = FieldModel<address, 0, 0x00000001>;\n\
    \  };\n\npublic:\n  using mis = MisReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class IcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using line_isc = FieldModel<address, 4, 0x00000001>;\n    using vsync_isc\
    \ = FieldModel<address, 3, 0x00000001>;\n    using err_isc = FieldModel<address,\
    \ 2, 0x00000001>;\n    using ovr_isc = FieldModel<address, 1, 0x00000001>;\n \
    \   using frame_isc = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n \
    \ using icr = IcrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EscrReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using fec = FieldModel<address, 24, 0x000000FF>;\n    using lec = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using lsc = FieldModel<address, 8, 0x000000FF>;\n    using\
    \ fsc = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using escr = EscrReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class EsurReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using feu = FieldModel<address,\
    \ 24, 0x000000FF>;\n    using leu = FieldModel<address, 16, 0x000000FF>;\n   \
    \ using lsu = FieldModel<address, 8, 0x000000FF>;\n    using fsu = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using esur = EsurReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CwstrtReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using vst = FieldModel<address, 16, 0x00001FFF>;\n    using\
    \ hoffcnt = FieldModel<address, 0, 0x00003FFF>;\n  };\n\npublic:\n  using cwstrt\
    \ = CwstrtReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CwsizeReg: public RegisterModel<address>\n  {\n  public:\n    using vline\
    \ = FieldModel<address, 16, 0x00003FFF>;\n    using capcnt = FieldModel<address,\
    \ 0, 0x00003FFF>;\n  };\n\npublic:\n  using cwsize = CwsizeReg<BaseAddress + 0x0024>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using byte3 = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ byte2 = FieldModel<address, 16, 0x000000FF>;\n    using byte1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using byte0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using dr = DrReg<BaseAddress + 0x0028>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_DCMI_H\
    \ */\n"
  name: DCMI
- content: "#ifndef DRAL_STM32F446_FMC_H\n#define DRAL_STM32F446_FMC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass fmc\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xA0000000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cclken = FieldModel<address, 20, 0x00000001>;\n    using cburstrw =\
    \ FieldModel<address, 19, 0x00000001>;\n    using asyncwait = FieldModel<address,\
    \ 15, 0x00000001>;\n    using extmod = FieldModel<address, 14, 0x00000001>;\n\
    \    using waiten = FieldModel<address, 13, 0x00000001>;\n    using wren = FieldModel<address,\
    \ 12, 0x00000001>;\n    using waitcfg = FieldModel<address, 11, 0x00000001>;\n\
    \    using waitpol = FieldModel<address, 9, 0x00000001>;\n    using bursten =\
    \ FieldModel<address, 8, 0x00000001>;\n    using faccen = FieldModel<address,\
    \ 6, 0x00000001>;\n    using mwid = FieldModel<address, 4, 0x00000003>;\n    using\
    \ mtyp = FieldModel<address, 2, 0x00000003>;\n    using muxen = FieldModel<address,\
    \ 1, 0x00000001>;\n    using mbken = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bcr1 = Bcr1Reg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Btr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using accmod = FieldModel<address, 28, 0x00000003>;\n    using datlat = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using clkdiv = FieldModel<address, 20, 0x0000000F>;\n\
    \    using busturn = FieldModel<address, 16, 0x0000000F>;\n    using datast =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using addhld = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using addset = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using btr1 = Btr1Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cburstrw = FieldModel<address, 19, 0x00000001>;\n    using asyncwait\
    \ = FieldModel<address, 15, 0x00000001>;\n    using extmod = FieldModel<address,\
    \ 14, 0x00000001>;\n    using waiten = FieldModel<address, 13, 0x00000001>;\n\
    \    using wren = FieldModel<address, 12, 0x00000001>;\n    using waitcfg = FieldModel<address,\
    \ 11, 0x00000001>;\n    using wrapmod = FieldModel<address, 10, 0x00000001>;\n\
    \    using waitpol = FieldModel<address, 9, 0x00000001>;\n    using bursten =\
    \ FieldModel<address, 8, 0x00000001>;\n    using faccen = FieldModel<address,\
    \ 6, 0x00000001>;\n    using mwid = FieldModel<address, 4, 0x00000003>;\n    using\
    \ mtyp = FieldModel<address, 2, 0x00000003>;\n    using muxen = FieldModel<address,\
    \ 1, 0x00000001>;\n    using mbken = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bcr2 = Bcr2Reg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Btr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using accmod = FieldModel<address, 28, 0x00000003>;\n    using datlat = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using clkdiv = FieldModel<address, 20, 0x0000000F>;\n\
    \    using busturn = FieldModel<address, 16, 0x0000000F>;\n    using datast =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using addhld = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using addset = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using btr2 = Btr2Reg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cburstrw = FieldModel<address, 19, 0x00000001>;\n    using asyncwait\
    \ = FieldModel<address, 15, 0x00000001>;\n    using extmod = FieldModel<address,\
    \ 14, 0x00000001>;\n    using waiten = FieldModel<address, 13, 0x00000001>;\n\
    \    using wren = FieldModel<address, 12, 0x00000001>;\n    using waitcfg = FieldModel<address,\
    \ 11, 0x00000001>;\n    using wrapmod = FieldModel<address, 10, 0x00000001>;\n\
    \    using waitpol = FieldModel<address, 9, 0x00000001>;\n    using bursten =\
    \ FieldModel<address, 8, 0x00000001>;\n    using faccen = FieldModel<address,\
    \ 6, 0x00000001>;\n    using mwid = FieldModel<address, 4, 0x00000003>;\n    using\
    \ mtyp = FieldModel<address, 2, 0x00000003>;\n    using muxen = FieldModel<address,\
    \ 1, 0x00000001>;\n    using mbken = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bcr3 = Bcr3Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Btr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using accmod = FieldModel<address, 28, 0x00000003>;\n    using datlat = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using clkdiv = FieldModel<address, 20, 0x0000000F>;\n\
    \    using busturn = FieldModel<address, 16, 0x0000000F>;\n    using datast =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using addhld = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using addset = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using btr3 = Btr3Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr4Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cburstrw = FieldModel<address, 19, 0x00000001>;\n    using asyncwait\
    \ = FieldModel<address, 15, 0x00000001>;\n    using extmod = FieldModel<address,\
    \ 14, 0x00000001>;\n    using waiten = FieldModel<address, 13, 0x00000001>;\n\
    \    using wren = FieldModel<address, 12, 0x00000001>;\n    using waitcfg = FieldModel<address,\
    \ 11, 0x00000001>;\n    using wrapmod = FieldModel<address, 10, 0x00000001>;\n\
    \    using waitpol = FieldModel<address, 9, 0x00000001>;\n    using bursten =\
    \ FieldModel<address, 8, 0x00000001>;\n    using faccen = FieldModel<address,\
    \ 6, 0x00000001>;\n    using mwid = FieldModel<address, 4, 0x00000003>;\n    using\
    \ mtyp = FieldModel<address, 2, 0x00000003>;\n    using muxen = FieldModel<address,\
    \ 1, 0x00000001>;\n    using mbken = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bcr4 = Bcr4Reg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Btr4Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using accmod = FieldModel<address, 28, 0x00000003>;\n    using datlat = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using clkdiv = FieldModel<address, 20, 0x0000000F>;\n\
    \    using busturn = FieldModel<address, 16, 0x0000000F>;\n    using datast =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using addhld = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using addset = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using btr4 = Btr4Reg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Pcr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using eccps = FieldModel<address, 17, 0x00000007>;\n    using tar = FieldModel<address,\
    \ 13, 0x0000000F>;\n    using tclr = FieldModel<address, 9, 0x0000000F>;\n   \
    \ using eccen = FieldModel<address, 6, 0x00000001>;\n    using pwid = FieldModel<address,\
    \ 4, 0x00000003>;\n    using ptyp = FieldModel<address, 3, 0x00000001>;\n    using\
    \ pbken = FieldModel<address, 2, 0x00000001>;\n    using pwaiten = FieldModel<address,\
    \ 1, 0x00000001>;\n  };\n\npublic:\n  using pcr2 = Pcr2Reg<BaseAddress + 0x0060>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Sr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fempt = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ifen = FieldModel<address, 5, 0x00000001>;\n    using ilen = FieldModel<address,\
    \ 4, 0x00000001>;\n    using iren = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ifs = FieldModel<address, 2, 0x00000001>;\n    using ils = FieldModel<address,\
    \ 1, 0x00000001>;\n    using irs = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr2 = Sr2Reg<BaseAddress + 0x0064>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Pmem2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using memhizx = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ memholdx = FieldModel<address, 16, 0x000000FF>;\n    using memwaitx = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using memsetx = FieldModel<address, 0, 0x000000FF>;\n \
    \ };\n\npublic:\n  using pmem2 = Pmem2Reg<BaseAddress + 0x0068>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Patt2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using atthizx = FieldModel<address, 24, 0x000000FF>;\n  \
    \  using attholdx = FieldModel<address, 16, 0x000000FF>;\n    using attwaitx =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using attsetx = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using patt2 = Patt2Reg<BaseAddress + 0x006C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Eccr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using eccx = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using eccr2 = Eccr2Reg<BaseAddress + 0x0074>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Pcr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using eccps = FieldModel<address, 17, 0x00000007>;\n    using tar = FieldModel<address,\
    \ 13, 0x0000000F>;\n    using tclr = FieldModel<address, 9, 0x0000000F>;\n   \
    \ using eccen = FieldModel<address, 6, 0x00000001>;\n    using pwid = FieldModel<address,\
    \ 4, 0x00000003>;\n    using ptyp = FieldModel<address, 3, 0x00000001>;\n    using\
    \ pbken = FieldModel<address, 2, 0x00000001>;\n    using pwaiten = FieldModel<address,\
    \ 1, 0x00000001>;\n  };\n\npublic:\n  using pcr3 = Pcr3Reg<BaseAddress + 0x0080>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Sr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fempt = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ifen = FieldModel<address, 5, 0x00000001>;\n    using ilen = FieldModel<address,\
    \ 4, 0x00000001>;\n    using iren = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ifs = FieldModel<address, 2, 0x00000001>;\n    using ils = FieldModel<address,\
    \ 1, 0x00000001>;\n    using irs = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr3 = Sr3Reg<BaseAddress + 0x0084>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Pmem3Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using memhizx = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ memholdx = FieldModel<address, 16, 0x000000FF>;\n    using memwaitx = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using memsetx = FieldModel<address, 0, 0x000000FF>;\n \
    \ };\n\npublic:\n  using pmem3 = Pmem3Reg<BaseAddress + 0x0088>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Patt3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using atthizx = FieldModel<address, 24, 0x000000FF>;\n  \
    \  using attholdx = FieldModel<address, 16, 0x000000FF>;\n    using attwaitx =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using attsetx = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using patt3 = Patt3Reg<BaseAddress + 0x008C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Eccr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using eccx = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using eccr3 = Eccr3Reg<BaseAddress + 0x0094>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Pcr4Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using eccps = FieldModel<address, 17, 0x00000007>;\n    using tar = FieldModel<address,\
    \ 13, 0x0000000F>;\n    using tclr = FieldModel<address, 9, 0x0000000F>;\n   \
    \ using eccen = FieldModel<address, 6, 0x00000001>;\n    using pwid = FieldModel<address,\
    \ 4, 0x00000003>;\n    using ptyp = FieldModel<address, 3, 0x00000001>;\n    using\
    \ pbken = FieldModel<address, 2, 0x00000001>;\n    using pwaiten = FieldModel<address,\
    \ 1, 0x00000001>;\n  };\n\npublic:\n  using pcr4 = Pcr4Reg<BaseAddress + 0x00A0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Sr4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fempt = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ifen = FieldModel<address, 5, 0x00000001>;\n    using ilen = FieldModel<address,\
    \ 4, 0x00000001>;\n    using iren = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ifs = FieldModel<address, 2, 0x00000001>;\n    using ils = FieldModel<address,\
    \ 1, 0x00000001>;\n    using irs = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr4 = Sr4Reg<BaseAddress + 0x00A4>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Pmem4Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using memhizx = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ memholdx = FieldModel<address, 16, 0x000000FF>;\n    using memwaitx = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using memsetx = FieldModel<address, 0, 0x000000FF>;\n \
    \ };\n\npublic:\n  using pmem4 = Pmem4Reg<BaseAddress + 0x00A8>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Patt4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using atthizx = FieldModel<address, 24, 0x000000FF>;\n  \
    \  using attholdx = FieldModel<address, 16, 0x000000FF>;\n    using attwaitx =\
    \ FieldModel<address, 8, 0x000000FF>;\n    using attsetx = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using patt4 = Patt4Reg<BaseAddress + 0x00AC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Pio4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using iohizx = FieldModel<address, 24, 0x000000FF>;\n   \
    \ using ioholdx = FieldModel<address, 16, 0x000000FF>;\n    using iowaitx = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using iosetx = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using pio4 = Pio4Reg<BaseAddress + 0x00B0>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bwtr1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using accmod = FieldModel<address, 28, 0x00000003>;\n    using\
    \ datlat = FieldModel<address, 24, 0x0000000F>;\n    using clkdiv = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using datast = FieldModel<address, 8, 0x000000FF>;\n \
    \   using addhld = FieldModel<address, 4, 0x0000000F>;\n    using addset = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using bwtr1 = Bwtr1Reg<BaseAddress + 0x0104>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Bwtr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using accmod = FieldModel<address, 28, 0x00000003>;\n   \
    \ using datlat = FieldModel<address, 24, 0x0000000F>;\n    using clkdiv = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using datast = FieldModel<address, 8, 0x000000FF>;\n \
    \   using addhld = FieldModel<address, 4, 0x0000000F>;\n    using addset = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using bwtr2 = Bwtr2Reg<BaseAddress + 0x010C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Bwtr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using accmod = FieldModel<address, 28, 0x00000003>;\n   \
    \ using datlat = FieldModel<address, 24, 0x0000000F>;\n    using clkdiv = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using datast = FieldModel<address, 8, 0x000000FF>;\n \
    \   using addhld = FieldModel<address, 4, 0x0000000F>;\n    using addset = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using bwtr3 = Bwtr3Reg<BaseAddress + 0x0114>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Bwtr4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using accmod = FieldModel<address, 28, 0x00000003>;\n   \
    \ using datlat = FieldModel<address, 24, 0x0000000F>;\n    using clkdiv = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using datast = FieldModel<address, 8, 0x000000FF>;\n \
    \   using addhld = FieldModel<address, 4, 0x0000000F>;\n    using addset = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using bwtr4 = Bwtr4Reg<BaseAddress + 0x011C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Sdcr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using nc = FieldModel<address, 0, 0x00000003>;\n    using\
    \ nr = FieldModel<address, 2, 0x00000003>;\n    using mwid = FieldModel<address,\
    \ 4, 0x00000003>;\n    using nb = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cas = FieldModel<address, 7, 0x00000003>;\n    using wp = FieldModel<address,\
    \ 9, 0x00000001>;\n    using sdclk = FieldModel<address, 10, 0x00000003>;\n  \
    \  using rburst = FieldModel<address, 12, 0x00000001>;\n    using rpipe = FieldModel<address,\
    \ 13, 0x00000003>;\n  };\n\npublic:\n  using sdcr1 = Sdcr1Reg<BaseAddress + 0x0140>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Sdcr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using nc = FieldModel<address, 0, 0x00000003>;\n    using\
    \ nr = FieldModel<address, 2, 0x00000003>;\n    using mwid = FieldModel<address,\
    \ 4, 0x00000003>;\n    using nb = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cas = FieldModel<address, 7, 0x00000003>;\n    using wp = FieldModel<address,\
    \ 9, 0x00000001>;\n    using sdclk = FieldModel<address, 10, 0x00000003>;\n  \
    \  using rburst = FieldModel<address, 12, 0x00000001>;\n    using rpipe = FieldModel<address,\
    \ 13, 0x00000003>;\n  };\n\npublic:\n  using sdcr2 = Sdcr2Reg<BaseAddress + 0x0144>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Sdtr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tmrd = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ txsr = FieldModel<address, 4, 0x0000000F>;\n    using tras = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using trc = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ twr = FieldModel<address, 16, 0x0000000F>;\n    using trp = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using trcd = FieldModel<address, 24, 0x0000000F>;\n  };\n\
    \npublic:\n  using sdtr1 = Sdtr1Reg<BaseAddress + 0x0148>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sdtr2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using tmrd = FieldModel<address, 0, 0x0000000F>;\n    using txsr\
    \ = FieldModel<address, 4, 0x0000000F>;\n    using tras = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using trc = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ twr = FieldModel<address, 16, 0x0000000F>;\n    using trp = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using trcd = FieldModel<address, 24, 0x0000000F>;\n  };\n\
    \npublic:\n  using sdtr2 = Sdtr2Reg<BaseAddress + 0x014C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SdcmrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using mode = FieldModel<address, 0, 0x00000007>;\n    using ctb2\
    \ = FieldModel<address, 3, 0x00000001>;\n    using ctb1 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using nrfs = FieldModel<address, 5, 0x0000000F>;\n    using\
    \ mrd = FieldModel<address, 9, 0x00001FFF>;\n  };\n\npublic:\n  using sdcmr =\
    \ SdcmrReg<BaseAddress + 0x0150>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SdrtrReg: public RegisterModel<address>\n  {\n  public:\n    using cre\
    \ = FieldModel<address, 0, 0x00000001>;\n    using count = FieldModel<address,\
    \ 1, 0x00001FFF>;\n    using reie = FieldModel<address, 14, 0x00000001>;\n  };\n\
    \npublic:\n  using sdrtr = SdrtrReg<BaseAddress + 0x0154>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SdsrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using re = FieldModel<address, 0, 0x00000001>;\n    using modes1 = FieldModel<address,\
    \ 1, 0x00000003>;\n    using modes2 = FieldModel<address, 3, 0x00000003>;\n  \
    \  using busy = FieldModel<address, 5, 0x00000001>;\n  };\n\npublic:\n  using\
    \ sdsr = SdsrReg<BaseAddress + 0x0158>;\nprivate:\n  template <uint32_t address,\
    \ uint32_t bankOffset>\n  class BtrxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using accmod = FieldModel<address, 28, 0x00000003,\
    \ bankOffset>;\n    using datlat = FieldModel<address, 24, 0x0000000F, bankOffset>;\n\
    \    using clkdiv = FieldModel<address, 20, 0x0000000F, bankOffset>;\n    using\
    \ busturn = FieldModel<address, 16, 0x0000000F, bankOffset>;\n    using datast\
    \ = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using addhld = FieldModel<address,\
    \ 4, 0x0000000F, bankOffset>;\n    using addset = FieldModel<address, 0, 0x0000000F,\
    \ bankOffset>;\n  };\n\npublic:\n  using btrx = BtrxBankReg<BaseAddress + 0x0004,\
    \ 0x0008>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class BcrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using cburstrw = FieldModel<address, 19, 0x00000001, bankOffset>;\n    using\
    \ asyncwait = FieldModel<address, 15, 0x00000001, bankOffset>;\n    using extmod\
    \ = FieldModel<address, 14, 0x00000001, bankOffset>;\n    using waiten = FieldModel<address,\
    \ 13, 0x00000001, bankOffset>;\n    using wren = FieldModel<address, 12, 0x00000001,\
    \ bankOffset>;\n    using waitcfg = FieldModel<address, 11, 0x00000001, bankOffset>;\n\
    \    using wrapmod = FieldModel<address, 10, 0x00000001, bankOffset>;\n    using\
    \ waitpol = FieldModel<address, 9, 0x00000001, bankOffset>;\n    using bursten\
    \ = FieldModel<address, 8, 0x00000001, bankOffset>;\n    using faccen = FieldModel<address,\
    \ 6, 0x00000001, bankOffset>;\n    using mwid = FieldModel<address, 4, 0x00000003,\
    \ bankOffset>;\n    using mtyp = FieldModel<address, 2, 0x00000003, bankOffset>;\n\
    \    using muxen = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using\
    \ mbken = FieldModel<address, 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n \
    \ using bcrx = BcrxBankReg<BaseAddress + 0x0008, 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class PcrxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using eccps = FieldModel<address, 17, 0x00000007,\
    \ bankOffset>;\n    using tar = FieldModel<address, 13, 0x0000000F, bankOffset>;\n\
    \    using tclr = FieldModel<address, 9, 0x0000000F, bankOffset>;\n    using eccen\
    \ = FieldModel<address, 6, 0x00000001, bankOffset>;\n    using pwid = FieldModel<address,\
    \ 4, 0x00000003, bankOffset>;\n    using ptyp = FieldModel<address, 3, 0x00000001,\
    \ bankOffset>;\n    using pbken = FieldModel<address, 2, 0x00000001, bankOffset>;\n\
    \    using pwaiten = FieldModel<address, 1, 0x00000001, bankOffset>;\n  };\n\n\
    public:\n  using pcrx = PcrxBankReg<BaseAddress + 0x0060, 0x0020>;\n\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class SrxBankReg: public\
    \ RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using fempt = FieldModel<address,\
    \ 6, 0x00000001, bankOffset>;\n    using ifen = FieldModel<address, 5, 0x00000001,\
    \ bankOffset>;\n    using ilen = FieldModel<address, 4, 0x00000001, bankOffset>;\n\
    \    using iren = FieldModel<address, 3, 0x00000001, bankOffset>;\n    using ifs\
    \ = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using ils = FieldModel<address,\
    \ 1, 0x00000001, bankOffset>;\n    using irs = FieldModel<address, 0, 0x00000001,\
    \ bankOffset>;\n  };\n\npublic:\n  using srx = SrxBankReg<BaseAddress + 0x0064,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class PmemxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using memhizx = FieldModel<address, 24, 0x000000FF, bankOffset>;\n    using\
    \ memholdx = FieldModel<address, 16, 0x000000FF, bankOffset>;\n    using memwaitx\
    \ = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using memsetx = FieldModel<address,\
    \ 0, 0x000000FF, bankOffset>;\n  };\n\npublic:\n  using pmemx = PmemxBankReg<BaseAddress\
    \ + 0x0068, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class PattxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using atthizx = FieldModel<address, 24, 0x000000FF, bankOffset>;\n    using\
    \ attholdx = FieldModel<address, 16, 0x000000FF, bankOffset>;\n    using attwaitx\
    \ = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using attsetx = FieldModel<address,\
    \ 0, 0x000000FF, bankOffset>;\n  };\n\npublic:\n  using pattx = PattxBankReg<BaseAddress\
    \ + 0x006C, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class EccrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using eccx = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using eccrx = EccrxBankReg<BaseAddress + 0x0074, 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class BwtrxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using accmod = FieldModel<address, 28, 0x00000003,\
    \ bankOffset>;\n    using datlat = FieldModel<address, 24, 0x0000000F, bankOffset>;\n\
    \    using clkdiv = FieldModel<address, 20, 0x0000000F, bankOffset>;\n    using\
    \ datast = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using addhld =\
    \ FieldModel<address, 4, 0x0000000F, bankOffset>;\n    using addset = FieldModel<address,\
    \ 0, 0x0000000F, bankOffset>;\n  };\n\npublic:\n  using bwtrx = BwtrxBankReg<BaseAddress\
    \ + 0x0104, 0x0008>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class SdcrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using nc = FieldModel<address, 0, 0x00000003, bankOffset>;\n    using nr\
    \ = FieldModel<address, 2, 0x00000003, bankOffset>;\n    using mwid = FieldModel<address,\
    \ 4, 0x00000003, bankOffset>;\n    using nb = FieldModel<address, 6, 0x00000001,\
    \ bankOffset>;\n    using cas = FieldModel<address, 7, 0x00000003, bankOffset>;\n\
    \    using wp = FieldModel<address, 9, 0x00000001, bankOffset>;\n    using sdclk\
    \ = FieldModel<address, 10, 0x00000003, bankOffset>;\n    using rburst = FieldModel<address,\
    \ 12, 0x00000001, bankOffset>;\n    using rpipe = FieldModel<address, 13, 0x00000003,\
    \ bankOffset>;\n  };\n\npublic:\n  using sdcrx = SdcrxBankReg<BaseAddress + 0x0140,\
    \ 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class SdtrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using tmrd = FieldModel<address, 0, 0x0000000F, bankOffset>;\n    using txsr\
    \ = FieldModel<address, 4, 0x0000000F, bankOffset>;\n    using tras = FieldModel<address,\
    \ 8, 0x0000000F, bankOffset>;\n    using trc = FieldModel<address, 12, 0x0000000F,\
    \ bankOffset>;\n    using twr = FieldModel<address, 16, 0x0000000F, bankOffset>;\n\
    \    using trp = FieldModel<address, 20, 0x0000000F, bankOffset>;\n    using trcd\
    \ = FieldModel<address, 24, 0x0000000F, bankOffset>;\n  };\n\npublic:\n  using\
    \ sdtrx = SdtrxBankReg<BaseAddress + 0x0148, 0x0004>;\n};\n\n}\n\n#endif /* DRAL_STM32F446_FMC_H\
    \ */\n"
  name: FMC
- content: "#ifndef DRAL_STM32F446_DBG_H\n#define DRAL_STM32F446_DBG_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass dbg\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xE0042000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Dbgmcu_idcodeReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dev_id = FieldModel<address, 0, 0x00000FFF>;\n    using\
    \ rev_id = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using dbgmcu_idcode\
    \ = Dbgmcu_idcodeReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Dbgmcu_crReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dbg_sleep = FieldModel<address, 0, 0x00000001>;\n    using dbg_stop\
    \ = FieldModel<address, 1, 0x00000001>;\n    using dbg_standby = FieldModel<address,\
    \ 2, 0x00000001>;\n    using trace_ioen = FieldModel<address, 5, 0x00000001>;\n\
    \    using trace_mode = FieldModel<address, 6, 0x00000003>;\n  };\n\npublic:\n\
    \  using dbgmcu_cr = Dbgmcu_crReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Dbgmcu_apb1_fzReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dbg_tim2_stop = FieldModel<address, 0, 0x00000001>;\n\
    \    using dbg_tim3_stop = FieldModel<address, 1, 0x00000001>;\n    using dbg_tim4_stop\
    \ = FieldModel<address, 2, 0x00000001>;\n    using dbg_tim5_stop = FieldModel<address,\
    \ 3, 0x00000001>;\n    using dbg_tim6_stop = FieldModel<address, 4, 0x00000001>;\n\
    \    using dbg_tim7_stop = FieldModel<address, 5, 0x00000001>;\n    using dbg_tim12_stop\
    \ = FieldModel<address, 6, 0x00000001>;\n    using dbg_tim13_stop = FieldModel<address,\
    \ 7, 0x00000001>;\n    using dbg_tim14_stop = FieldModel<address, 8, 0x00000001>;\n\
    \    using dbg_rtc_stop = FieldModel<address, 10, 0x00000001>;\n    using dbg_wwdg_stop\
    \ = FieldModel<address, 11, 0x00000001>;\n    using dbg_iwdeg_stop = FieldModel<address,\
    \ 12, 0x00000001>;\n    using dbg_j2c1_smbus_timeout = FieldModel<address, 21,\
    \ 0x00000001>;\n    using dbg_j2c2_smbus_timeout = FieldModel<address, 22, 0x00000001>;\n\
    \    using dbg_j2c3smbus_timeout = FieldModel<address, 23, 0x00000001>;\n    using\
    \ dbg_i2cfmp_smbus_timeout = FieldModel<address, 24, 0x00000001>;\n    using dbg_can1_stop\
    \ = FieldModel<address, 25, 0x00000001>;\n    using dbg_can2_stop = FieldModel<address,\
    \ 26, 0x00000001>;\n  };\n\npublic:\n  using dbgmcu_apb1_fz = Dbgmcu_apb1_fzReg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Dbgmcu_apb2_fzReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dbg_tim1_stop = FieldModel<address,\
    \ 0, 0x00000001>;\n    using dbg_tim8_stop = FieldModel<address, 1, 0x00000001>;\n\
    \    using dbg_tim9_stop = FieldModel<address, 16, 0x00000001>;\n    using dbg_tim10_stop\
    \ = FieldModel<address, 17, 0x00000001>;\n    using dbg_tim11_stop = FieldModel<address,\
    \ 18, 0x00000001>;\n  };\n\npublic:\n  using dbgmcu_apb2_fz = Dbgmcu_apb2_fzReg<BaseAddress\
    \ + 0x000C>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_DBG_H */\n"
  name: DBG
- content: "#ifndef DRAL_STM32F446_DMA2_H\n#define DRAL_STM32F446_DMA2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass dma2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40026400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LisrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tcif3 = FieldModel<address, 27, 0x00000001>;\n    using htif3 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using teif3 = FieldModel<address, 25, 0x00000001>;\n \
    \   using dmeif3 = FieldModel<address, 24, 0x00000001>;\n    using feif3 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using tcif2 = FieldModel<address, 21, 0x00000001>;\n \
    \   using htif2 = FieldModel<address, 20, 0x00000001>;\n    using teif2 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using dmeif2 = FieldModel<address, 18, 0x00000001>;\n\
    \    using feif2 = FieldModel<address, 16, 0x00000001>;\n    using tcif1 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using htif1 = FieldModel<address, 10, 0x00000001>;\n \
    \   using teif1 = FieldModel<address, 9, 0x00000001>;\n    using dmeif1 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using feif1 = FieldModel<address, 6, 0x00000001>;\n   \
    \ using tcif0 = FieldModel<address, 5, 0x00000001>;\n    using htif0 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using teif0 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using dmeif0 = FieldModel<address, 2, 0x00000001>;\n    using feif0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lisr = LisrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class HisrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tcif7 = FieldModel<address, 27, 0x00000001>;\n    using\
    \ htif7 = FieldModel<address, 26, 0x00000001>;\n    using teif7 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using dmeif7 = FieldModel<address, 24, 0x00000001>;\n\
    \    using feif7 = FieldModel<address, 22, 0x00000001>;\n    using tcif6 = FieldModel<address,\
    \ 21, 0x00000001>;\n    using htif6 = FieldModel<address, 20, 0x00000001>;\n \
    \   using teif6 = FieldModel<address, 19, 0x00000001>;\n    using dmeif6 = FieldModel<address,\
    \ 18, 0x00000001>;\n    using feif6 = FieldModel<address, 16, 0x00000001>;\n \
    \   using tcif5 = FieldModel<address, 11, 0x00000001>;\n    using htif5 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using teif5 = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dmeif5 = FieldModel<address, 8, 0x00000001>;\n    using feif5 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using tcif4 = FieldModel<address, 5, 0x00000001>;\n   \
    \ using htif4 = FieldModel<address, 4, 0x00000001>;\n    using teif4 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using dmeif4 = FieldModel<address, 2, 0x00000001>;\n  \
    \  using feif4 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ hisr = HisrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class LifcrReg: public RegisterModel<address>\n  {\n  public:\n    using ctcif3\
    \ = FieldModel<address, 27, 0x00000001>;\n    using chtif3 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using cteif3 = FieldModel<address, 25, 0x00000001>;\n\
    \    using cdmeif3 = FieldModel<address, 24, 0x00000001>;\n    using cfeif3 =\
    \ FieldModel<address, 22, 0x00000001>;\n    using ctcif2 = FieldModel<address,\
    \ 21, 0x00000001>;\n    using chtif2 = FieldModel<address, 20, 0x00000001>;\n\
    \    using cteif2 = FieldModel<address, 19, 0x00000001>;\n    using cdmeif2 =\
    \ FieldModel<address, 18, 0x00000001>;\n    using cfeif2 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using ctcif1 = FieldModel<address, 11, 0x00000001>;\n\
    \    using chtif1 = FieldModel<address, 10, 0x00000001>;\n    using cteif1 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cdmeif1 = FieldModel<address, 8, 0x00000001>;\n \
    \   using cfeif1 = FieldModel<address, 6, 0x00000001>;\n    using ctcif0 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using chtif0 = FieldModel<address, 4, 0x00000001>;\n  \
    \  using cteif0 = FieldModel<address, 3, 0x00000001>;\n    using cdmeif0 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cfeif0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using lifcr = LifcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class HifcrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ctcif7 = FieldModel<address, 27, 0x00000001>;\n    using\
    \ chtif7 = FieldModel<address, 26, 0x00000001>;\n    using cteif7 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using cdmeif7 = FieldModel<address, 24, 0x00000001>;\n\
    \    using cfeif7 = FieldModel<address, 22, 0x00000001>;\n    using ctcif6 = FieldModel<address,\
    \ 21, 0x00000001>;\n    using chtif6 = FieldModel<address, 20, 0x00000001>;\n\
    \    using cteif6 = FieldModel<address, 19, 0x00000001>;\n    using cdmeif6 =\
    \ FieldModel<address, 18, 0x00000001>;\n    using cfeif6 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using ctcif5 = FieldModel<address, 11, 0x00000001>;\n\
    \    using chtif5 = FieldModel<address, 10, 0x00000001>;\n    using cteif5 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cdmeif5 = FieldModel<address, 8, 0x00000001>;\n \
    \   using cfeif5 = FieldModel<address, 6, 0x00000001>;\n    using ctcif4 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using chtif4 = FieldModel<address, 4, 0x00000001>;\n  \
    \  using cteif4 = FieldModel<address, 3, 0x00000001>;\n    using cdmeif4 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cfeif4 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using hifcr = HifcrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S0crReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using chsel = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s0cr\
    \ = S0crReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S0ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s0ndtr = S0ndtrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class S0parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s0par = S0parReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S0m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s0m0ar = S0m0arReg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S0m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s0m1ar = S0m1arReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S0fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s0fcr\
    \ = S0fcrReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S1crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s1cr\
    \ = S1crReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S1ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s1ndtr = S1ndtrReg<BaseAddress\
    \ + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n  class S1parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s1par = S1parReg<BaseAddress + 0x0030>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S1m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s1m0ar = S1m0arReg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S1m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s1m1ar = S1m1arReg<BaseAddress + 0x0038>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S1fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s1fcr\
    \ = S1fcrReg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S2crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s2cr\
    \ = S2crReg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S2ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s2ndtr = S2ndtrReg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class S2parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s2par = S2parReg<BaseAddress + 0x0048>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S2m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s2m0ar = S2m0arReg<BaseAddress + 0x004C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S2m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s2m1ar = S2m1arReg<BaseAddress + 0x0050>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S2fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s2fcr\
    \ = S2fcrReg<BaseAddress + 0x0054>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S3crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s3cr\
    \ = S3crReg<BaseAddress + 0x0058>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S3ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s3ndtr = S3ndtrReg<BaseAddress\
    \ + 0x005C>;\n\nprivate:\n  template <uint32_t address>\n  class S3parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s3par = S3parReg<BaseAddress + 0x0060>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S3m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s3m0ar = S3m0arReg<BaseAddress + 0x0064>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S3m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s3m1ar = S3m1arReg<BaseAddress + 0x0068>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S3fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s3fcr\
    \ = S3fcrReg<BaseAddress + 0x006C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S4crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s4cr\
    \ = S4crReg<BaseAddress + 0x0070>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S4ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s4ndtr = S4ndtrReg<BaseAddress\
    \ + 0x0074>;\n\nprivate:\n  template <uint32_t address>\n  class S4parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s4par = S4parReg<BaseAddress + 0x0078>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S4m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s4m0ar = S4m0arReg<BaseAddress + 0x007C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S4m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s4m1ar = S4m1arReg<BaseAddress + 0x0080>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S4fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s4fcr\
    \ = S4fcrReg<BaseAddress + 0x0084>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S5crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s5cr\
    \ = S5crReg<BaseAddress + 0x0088>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S5ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s5ndtr = S5ndtrReg<BaseAddress\
    \ + 0x008C>;\n\nprivate:\n  template <uint32_t address>\n  class S5parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s5par = S5parReg<BaseAddress + 0x0090>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S5m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s5m0ar = S5m0arReg<BaseAddress + 0x0094>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S5m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s5m1ar = S5m1arReg<BaseAddress + 0x0098>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S5fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s5fcr\
    \ = S5fcrReg<BaseAddress + 0x009C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S6crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s6cr\
    \ = S6crReg<BaseAddress + 0x00A0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S6ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s6ndtr = S6ndtrReg<BaseAddress\
    \ + 0x00A4>;\n\nprivate:\n  template <uint32_t address>\n  class S6parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s6par = S6parReg<BaseAddress + 0x00A8>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S6m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s6m0ar = S6m0arReg<BaseAddress + 0x00AC>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S6m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s6m1ar = S6m1arReg<BaseAddress + 0x00B0>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S6fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s6fcr\
    \ = S6fcrReg<BaseAddress + 0x00B4>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S7crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s7cr\
    \ = S7crReg<BaseAddress + 0x00B8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S7ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s7ndtr = S7ndtrReg<BaseAddress\
    \ + 0x00BC>;\n\nprivate:\n  template <uint32_t address>\n  class S7parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s7par = S7parReg<BaseAddress + 0x00C0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S7m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s7m0ar = S7m0arReg<BaseAddress + 0x00C4>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S7m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s7m1ar = S7m1arReg<BaseAddress + 0x00C8>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S7fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s7fcr\
    \ = S7fcrReg<BaseAddress + 0x00CC>;\nprivate:\n  template <uint32_t address, uint32_t\
    \ bankOffset>\n  class SxcrBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using chsel = FieldModel<address, 25, 0x00000007, bankOffset>;\n\
    \    using mburst = FieldModel<address, 23, 0x00000003, bankOffset>;\n    using\
    \ pburst = FieldModel<address, 21, 0x00000003, bankOffset>;\n    using ct = FieldModel<address,\
    \ 19, 0x00000001, bankOffset>;\n    using dbm = FieldModel<address, 18, 0x00000001,\
    \ bankOffset>;\n    using pl = FieldModel<address, 16, 0x00000003, bankOffset>;\n\
    \    using pincos = FieldModel<address, 15, 0x00000001, bankOffset>;\n    using\
    \ msize = FieldModel<address, 13, 0x00000003, bankOffset>;\n    using psize =\
    \ FieldModel<address, 11, 0x00000003, bankOffset>;\n    using minc = FieldModel<address,\
    \ 10, 0x00000001, bankOffset>;\n    using pinc = FieldModel<address, 9, 0x00000001,\
    \ bankOffset>;\n    using circ = FieldModel<address, 8, 0x00000001, bankOffset>;\n\
    \    using dir = FieldModel<address, 6, 0x00000003, bankOffset>;\n    using pfctrl\
    \ = FieldModel<address, 5, 0x00000001, bankOffset>;\n    using tcie = FieldModel<address,\
    \ 4, 0x00000001, bankOffset>;\n    using htie = FieldModel<address, 3, 0x00000001,\
    \ bankOffset>;\n    using teie = FieldModel<address, 2, 0x00000001, bankOffset>;\n\
    \    using dmeie = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using\
    \ en = FieldModel<address, 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using\
    \ sxcr = SxcrBankReg<BaseAddress + 0x0010, 0x0018>;\n\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class SxndtrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using ndt = FieldModel<address, 0, 0x0000FFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using sxndtr = SxndtrBankReg<BaseAddress +\
    \ 0x0014, 0x0018>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class SxparBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using pa = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using sxpar = SxparBankReg<BaseAddress + 0x0018, 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class Sxm0arBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using sxm0ar = Sxm0arBankReg<BaseAddress +\
    \ 0x001C, 0x0018>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Sxm1arBankReg: public RegisterBankModel<address, bankOffset>\n  {\n \
    \ public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n \
    \ };\n\npublic:\n  using sxm1ar = Sxm1arBankReg<BaseAddress + 0x0020, 0x0018>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class SxfcrBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using feie\
    \ = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007, bankOffset>;\n    using dmdis = FieldModel<address, 2, 0x00000001,\
    \ bankOffset>;\n    using fth = FieldModel<address, 0, 0x00000003, bankOffset>;\n\
    \  };\n\npublic:\n  using sxfcr = SxfcrBankReg<BaseAddress + 0x0024, 0x0018>;\n\
    };\n\n}\n\n#endif /* DRAL_STM32F446_DMA2_H */\n"
  name: DMA2
- content: "#ifndef DRAL_STM32F446_DMA1_H\n#define DRAL_STM32F446_DMA1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass dma1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40026000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LisrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tcif3 = FieldModel<address, 27, 0x00000001>;\n    using htif3 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using teif3 = FieldModel<address, 25, 0x00000001>;\n \
    \   using dmeif3 = FieldModel<address, 24, 0x00000001>;\n    using feif3 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using tcif2 = FieldModel<address, 21, 0x00000001>;\n \
    \   using htif2 = FieldModel<address, 20, 0x00000001>;\n    using teif2 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using dmeif2 = FieldModel<address, 18, 0x00000001>;\n\
    \    using feif2 = FieldModel<address, 16, 0x00000001>;\n    using tcif1 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using htif1 = FieldModel<address, 10, 0x00000001>;\n \
    \   using teif1 = FieldModel<address, 9, 0x00000001>;\n    using dmeif1 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using feif1 = FieldModel<address, 6, 0x00000001>;\n   \
    \ using tcif0 = FieldModel<address, 5, 0x00000001>;\n    using htif0 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using teif0 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using dmeif0 = FieldModel<address, 2, 0x00000001>;\n    using feif0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lisr = LisrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class HisrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tcif7 = FieldModel<address, 27, 0x00000001>;\n    using\
    \ htif7 = FieldModel<address, 26, 0x00000001>;\n    using teif7 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using dmeif7 = FieldModel<address, 24, 0x00000001>;\n\
    \    using feif7 = FieldModel<address, 22, 0x00000001>;\n    using tcif6 = FieldModel<address,\
    \ 21, 0x00000001>;\n    using htif6 = FieldModel<address, 20, 0x00000001>;\n \
    \   using teif6 = FieldModel<address, 19, 0x00000001>;\n    using dmeif6 = FieldModel<address,\
    \ 18, 0x00000001>;\n    using feif6 = FieldModel<address, 16, 0x00000001>;\n \
    \   using tcif5 = FieldModel<address, 11, 0x00000001>;\n    using htif5 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using teif5 = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dmeif5 = FieldModel<address, 8, 0x00000001>;\n    using feif5 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using tcif4 = FieldModel<address, 5, 0x00000001>;\n   \
    \ using htif4 = FieldModel<address, 4, 0x00000001>;\n    using teif4 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using dmeif4 = FieldModel<address, 2, 0x00000001>;\n  \
    \  using feif4 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ hisr = HisrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class LifcrReg: public RegisterModel<address>\n  {\n  public:\n    using ctcif3\
    \ = FieldModel<address, 27, 0x00000001>;\n    using chtif3 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using cteif3 = FieldModel<address, 25, 0x00000001>;\n\
    \    using cdmeif3 = FieldModel<address, 24, 0x00000001>;\n    using cfeif3 =\
    \ FieldModel<address, 22, 0x00000001>;\n    using ctcif2 = FieldModel<address,\
    \ 21, 0x00000001>;\n    using chtif2 = FieldModel<address, 20, 0x00000001>;\n\
    \    using cteif2 = FieldModel<address, 19, 0x00000001>;\n    using cdmeif2 =\
    \ FieldModel<address, 18, 0x00000001>;\n    using cfeif2 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using ctcif1 = FieldModel<address, 11, 0x00000001>;\n\
    \    using chtif1 = FieldModel<address, 10, 0x00000001>;\n    using cteif1 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cdmeif1 = FieldModel<address, 8, 0x00000001>;\n \
    \   using cfeif1 = FieldModel<address, 6, 0x00000001>;\n    using ctcif0 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using chtif0 = FieldModel<address, 4, 0x00000001>;\n  \
    \  using cteif0 = FieldModel<address, 3, 0x00000001>;\n    using cdmeif0 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cfeif0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using lifcr = LifcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class HifcrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ctcif7 = FieldModel<address, 27, 0x00000001>;\n    using\
    \ chtif7 = FieldModel<address, 26, 0x00000001>;\n    using cteif7 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using cdmeif7 = FieldModel<address, 24, 0x00000001>;\n\
    \    using cfeif7 = FieldModel<address, 22, 0x00000001>;\n    using ctcif6 = FieldModel<address,\
    \ 21, 0x00000001>;\n    using chtif6 = FieldModel<address, 20, 0x00000001>;\n\
    \    using cteif6 = FieldModel<address, 19, 0x00000001>;\n    using cdmeif6 =\
    \ FieldModel<address, 18, 0x00000001>;\n    using cfeif6 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using ctcif5 = FieldModel<address, 11, 0x00000001>;\n\
    \    using chtif5 = FieldModel<address, 10, 0x00000001>;\n    using cteif5 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cdmeif5 = FieldModel<address, 8, 0x00000001>;\n \
    \   using cfeif5 = FieldModel<address, 6, 0x00000001>;\n    using ctcif4 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using chtif4 = FieldModel<address, 4, 0x00000001>;\n  \
    \  using cteif4 = FieldModel<address, 3, 0x00000001>;\n    using cdmeif4 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cfeif4 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using hifcr = HifcrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S0crReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using chsel = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s0cr\
    \ = S0crReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S0ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s0ndtr = S0ndtrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class S0parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s0par = S0parReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S0m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s0m0ar = S0m0arReg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S0m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s0m1ar = S0m1arReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S0fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s0fcr\
    \ = S0fcrReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S1crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s1cr\
    \ = S1crReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S1ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s1ndtr = S1ndtrReg<BaseAddress\
    \ + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n  class S1parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s1par = S1parReg<BaseAddress + 0x0030>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S1m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s1m0ar = S1m0arReg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S1m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s1m1ar = S1m1arReg<BaseAddress + 0x0038>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S1fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s1fcr\
    \ = S1fcrReg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S2crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s2cr\
    \ = S2crReg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S2ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s2ndtr = S2ndtrReg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class S2parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s2par = S2parReg<BaseAddress + 0x0048>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S2m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s2m0ar = S2m0arReg<BaseAddress + 0x004C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S2m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s2m1ar = S2m1arReg<BaseAddress + 0x0050>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S2fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s2fcr\
    \ = S2fcrReg<BaseAddress + 0x0054>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S3crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s3cr\
    \ = S3crReg<BaseAddress + 0x0058>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S3ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s3ndtr = S3ndtrReg<BaseAddress\
    \ + 0x005C>;\n\nprivate:\n  template <uint32_t address>\n  class S3parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s3par = S3parReg<BaseAddress + 0x0060>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S3m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s3m0ar = S3m0arReg<BaseAddress + 0x0064>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S3m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s3m1ar = S3m1arReg<BaseAddress + 0x0068>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S3fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s3fcr\
    \ = S3fcrReg<BaseAddress + 0x006C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S4crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s4cr\
    \ = S4crReg<BaseAddress + 0x0070>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S4ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s4ndtr = S4ndtrReg<BaseAddress\
    \ + 0x0074>;\n\nprivate:\n  template <uint32_t address>\n  class S4parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s4par = S4parReg<BaseAddress + 0x0078>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S4m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s4m0ar = S4m0arReg<BaseAddress + 0x007C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S4m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s4m1ar = S4m1arReg<BaseAddress + 0x0080>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S4fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s4fcr\
    \ = S4fcrReg<BaseAddress + 0x0084>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S5crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s5cr\
    \ = S5crReg<BaseAddress + 0x0088>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S5ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s5ndtr = S5ndtrReg<BaseAddress\
    \ + 0x008C>;\n\nprivate:\n  template <uint32_t address>\n  class S5parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s5par = S5parReg<BaseAddress + 0x0090>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S5m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s5m0ar = S5m0arReg<BaseAddress + 0x0094>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S5m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s5m1ar = S5m1arReg<BaseAddress + 0x0098>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S5fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s5fcr\
    \ = S5fcrReg<BaseAddress + 0x009C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S6crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s6cr\
    \ = S6crReg<BaseAddress + 0x00A0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S6ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s6ndtr = S6ndtrReg<BaseAddress\
    \ + 0x00A4>;\n\nprivate:\n  template <uint32_t address>\n  class S6parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s6par = S6parReg<BaseAddress + 0x00A8>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S6m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s6m0ar = S6m0arReg<BaseAddress + 0x00AC>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S6m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s6m1ar = S6m1arReg<BaseAddress + 0x00B0>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S6fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s6fcr\
    \ = S6fcrReg<BaseAddress + 0x00B4>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S7crReg: public RegisterModel<address>\n  {\n  public:\n    using chsel\
    \ = FieldModel<address, 25, 0x00000007>;\n    using mburst = FieldModel<address,\
    \ 23, 0x00000003>;\n    using pburst = FieldModel<address, 21, 0x00000003>;\n\
    \    using ct = FieldModel<address, 19, 0x00000001>;\n    using dbm = FieldModel<address,\
    \ 18, 0x00000001>;\n    using pl = FieldModel<address, 16, 0x00000003>;\n    using\
    \ pincos = FieldModel<address, 15, 0x00000001>;\n    using msize = FieldModel<address,\
    \ 13, 0x00000003>;\n    using psize = FieldModel<address, 11, 0x00000003>;\n \
    \   using minc = FieldModel<address, 10, 0x00000001>;\n    using pinc = FieldModel<address,\
    \ 9, 0x00000001>;\n    using circ = FieldModel<address, 8, 0x00000001>;\n    using\
    \ dir = FieldModel<address, 6, 0x00000003>;\n    using pfctrl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tcie = FieldModel<address, 4, 0x00000001>;\n    using\
    \ htie = FieldModel<address, 3, 0x00000001>;\n    using teie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dmeie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using en = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using s7cr\
    \ = S7crReg<BaseAddress + 0x00B8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class S7ndtrReg: public RegisterModel<address>\n  {\n  public:\n    using ndt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using s7ndtr = S7ndtrReg<BaseAddress\
    \ + 0x00BC>;\n\nprivate:\n  template <uint32_t address>\n  class S7parReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pa = FieldModel<address, 0,\
    \ 0xFFFFFFFF>;\n  };\n\npublic:\n  using s7par = S7parReg<BaseAddress + 0x00C0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class S7m0arReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using s7m0ar = S7m0arReg<BaseAddress + 0x00C4>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class S7m1arReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using s7m1ar = S7m1arReg<BaseAddress + 0x00C8>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class S7fcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using feie = FieldModel<address, 7, 0x00000001>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007>;\n    using dmdis = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fth = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using s7fcr\
    \ = S7fcrReg<BaseAddress + 0x00CC>;\nprivate:\n  template <uint32_t address, uint32_t\
    \ bankOffset>\n  class SxcrBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using chsel = FieldModel<address, 25, 0x00000007, bankOffset>;\n\
    \    using mburst = FieldModel<address, 23, 0x00000003, bankOffset>;\n    using\
    \ pburst = FieldModel<address, 21, 0x00000003, bankOffset>;\n    using ct = FieldModel<address,\
    \ 19, 0x00000001, bankOffset>;\n    using dbm = FieldModel<address, 18, 0x00000001,\
    \ bankOffset>;\n    using pl = FieldModel<address, 16, 0x00000003, bankOffset>;\n\
    \    using pincos = FieldModel<address, 15, 0x00000001, bankOffset>;\n    using\
    \ msize = FieldModel<address, 13, 0x00000003, bankOffset>;\n    using psize =\
    \ FieldModel<address, 11, 0x00000003, bankOffset>;\n    using minc = FieldModel<address,\
    \ 10, 0x00000001, bankOffset>;\n    using pinc = FieldModel<address, 9, 0x00000001,\
    \ bankOffset>;\n    using circ = FieldModel<address, 8, 0x00000001, bankOffset>;\n\
    \    using dir = FieldModel<address, 6, 0x00000003, bankOffset>;\n    using pfctrl\
    \ = FieldModel<address, 5, 0x00000001, bankOffset>;\n    using tcie = FieldModel<address,\
    \ 4, 0x00000001, bankOffset>;\n    using htie = FieldModel<address, 3, 0x00000001,\
    \ bankOffset>;\n    using teie = FieldModel<address, 2, 0x00000001, bankOffset>;\n\
    \    using dmeie = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using\
    \ en = FieldModel<address, 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using\
    \ sxcr = SxcrBankReg<BaseAddress + 0x0010, 0x0018>;\n\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class SxndtrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using ndt = FieldModel<address, 0, 0x0000FFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using sxndtr = SxndtrBankReg<BaseAddress +\
    \ 0x0014, 0x0018>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class SxparBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using pa = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using sxpar = SxparBankReg<BaseAddress + 0x0018, 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class Sxm0arBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using m0a = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using sxm0ar = Sxm0arBankReg<BaseAddress +\
    \ 0x001C, 0x0018>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Sxm1arBankReg: public RegisterBankModel<address, bankOffset>\n  {\n \
    \ public:\n    using m1a = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n \
    \ };\n\npublic:\n  using sxm1ar = Sxm1arBankReg<BaseAddress + 0x0020, 0x0018>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class SxfcrBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using feie\
    \ = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using fs = FieldModel<address,\
    \ 3, 0x00000007, bankOffset>;\n    using dmdis = FieldModel<address, 2, 0x00000001,\
    \ bankOffset>;\n    using fth = FieldModel<address, 0, 0x00000003, bankOffset>;\n\
    \  };\n\npublic:\n  using sxfcr = SxfcrBankReg<BaseAddress + 0x0024, 0x0018>;\n\
    };\n\n}\n\n#endif /* DRAL_STM32F446_DMA1_H */\n"
  name: DMA1
- content: "#ifndef DRAL_STM32F446_RCC_H\n#define DRAL_STM32F446_RCC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass rcc\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40023800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using plli2srdy = FieldModel<address, 27, 0x00000001>;\n    using plli2son\
    \ = FieldModel<address, 26, 0x00000001>;\n    using pllrdy = FieldModel<address,\
    \ 25, 0x00000001>;\n    using pllon = FieldModel<address, 24, 0x00000001>;\n \
    \   using csson = FieldModel<address, 19, 0x00000001>;\n    using hsebyp = FieldModel<address,\
    \ 18, 0x00000001>;\n    using hserdy = FieldModel<address, 17, 0x00000001>;\n\
    \    using hseon = FieldModel<address, 16, 0x00000001>;\n    using hsical = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using hsitrim = FieldModel<address, 3, 0x0000001F>;\n \
    \   using hsirdy = FieldModel<address, 1, 0x00000001>;\n    using hsion = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PllcfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pllq3 = FieldModel<address, 27, 0x00000001>;\n    using\
    \ pllq2 = FieldModel<address, 26, 0x00000001>;\n    using pllq1 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using pllq0 = FieldModel<address, 24, 0x00000001>;\n \
    \   using pllsrc = FieldModel<address, 22, 0x00000001>;\n    using pllp1 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using pllp0 = FieldModel<address, 16, 0x00000001>;\n \
    \   using plln8 = FieldModel<address, 14, 0x00000001>;\n    using plln7 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using plln6 = FieldModel<address, 12, 0x00000001>;\n \
    \   using plln5 = FieldModel<address, 11, 0x00000001>;\n    using plln4 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using plln3 = FieldModel<address, 9, 0x00000001>;\n  \
    \  using plln2 = FieldModel<address, 8, 0x00000001>;\n    using plln1 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using plln0 = FieldModel<address, 6, 0x00000001>;\n   \
    \ using pllm5 = FieldModel<address, 5, 0x00000001>;\n    using pllm4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using pllm3 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using pllm2 = FieldModel<address, 2, 0x00000001>;\n    using pllm1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using pllm0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using pllcfgr = PllcfgrReg<BaseAddress + 0x0004>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class CfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mco2 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ mco2pre = FieldModel<address, 27, 0x00000007>;\n    using mco1pre = FieldModel<address,\
    \ 24, 0x00000007>;\n    using i2ssrc = FieldModel<address, 23, 0x00000001>;\n\
    \    using mco1 = FieldModel<address, 21, 0x00000003>;\n    using rtcpre = FieldModel<address,\
    \ 16, 0x0000001F>;\n    using ppre2 = FieldModel<address, 13, 0x00000007>;\n \
    \   using ppre1 = FieldModel<address, 10, 0x00000007>;\n    using hpre = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using sws1 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ sws0 = FieldModel<address, 2, 0x00000001>;\n    using sw1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using sw0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cfgr = CfgrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CirReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cssc = FieldModel<address, 23, 0x00000001>;\n    using pllsairdyc =\
    \ FieldModel<address, 22, 0x00000001>;\n    using plli2srdyc = FieldModel<address,\
    \ 21, 0x00000001>;\n    using pllrdyc = FieldModel<address, 20, 0x00000001>;\n\
    \    using hserdyc = FieldModel<address, 19, 0x00000001>;\n    using hsirdyc =\
    \ FieldModel<address, 18, 0x00000001>;\n    using lserdyc = FieldModel<address,\
    \ 17, 0x00000001>;\n    using lsirdyc = FieldModel<address, 16, 0x00000001>;\n\
    \    using pllsairdyie = FieldModel<address, 14, 0x00000001>;\n    using plli2srdyie\
    \ = FieldModel<address, 13, 0x00000001>;\n    using pllrdyie = FieldModel<address,\
    \ 12, 0x00000001>;\n    using hserdyie = FieldModel<address, 11, 0x00000001>;\n\
    \    using hsirdyie = FieldModel<address, 10, 0x00000001>;\n    using lserdyie\
    \ = FieldModel<address, 9, 0x00000001>;\n    using lsirdyie = FieldModel<address,\
    \ 8, 0x00000001>;\n    using cssf = FieldModel<address, 7, 0x00000001>;\n    using\
    \ pllsairdyf = FieldModel<address, 6, 0x00000001>;\n    using plli2srdyf = FieldModel<address,\
    \ 5, 0x00000001>;\n    using pllrdyf = FieldModel<address, 4, 0x00000001>;\n \
    \   using hserdyf = FieldModel<address, 3, 0x00000001>;\n    using hsirdyf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using lserdyf = FieldModel<address, 1, 0x00000001>;\n \
    \   using lsirdyf = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ cir = CirReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ahb1rstrReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ otghsrst = FieldModel<address, 29, 0x00000001>;\n    using dma2rst = FieldModel<address,\
    \ 22, 0x00000001>;\n    using dma1rst = FieldModel<address, 21, 0x00000001>;\n\
    \    using crcrst = FieldModel<address, 12, 0x00000001>;\n    using gpiohrst =\
    \ FieldModel<address, 7, 0x00000001>;\n    using gpiogrst = FieldModel<address,\
    \ 6, 0x00000001>;\n    using gpiofrst = FieldModel<address, 5, 0x00000001>;\n\
    \    using gpioerst = FieldModel<address, 4, 0x00000001>;\n    using gpiodrst\
    \ = FieldModel<address, 3, 0x00000001>;\n    using gpiocrst = FieldModel<address,\
    \ 2, 0x00000001>;\n    using gpiobrst = FieldModel<address, 1, 0x00000001>;\n\
    \    using gpioarst = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n \
    \ using ahb1rstr = Ahb1rstrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ahb2rstrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using otgfsrst = FieldModel<address, 7, 0x00000001>;\n    using\
    \ dcmirst = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ahb2rstr\
    \ = Ahb2rstrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ahb3rstrReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ fmcrst = FieldModel<address, 0, 0x00000001>;\n    using qspirst = FieldModel<address,\
    \ 1, 0x00000001>;\n  };\n\npublic:\n  using ahb3rstr = Ahb3rstrReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class Apb1rstrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using tim2rst = FieldModel<address,\
    \ 0, 0x00000001>;\n    using tim3rst = FieldModel<address, 1, 0x00000001>;\n \
    \   using tim4rst = FieldModel<address, 2, 0x00000001>;\n    using tim5rst = FieldModel<address,\
    \ 3, 0x00000001>;\n    using tim6rst = FieldModel<address, 4, 0x00000001>;\n \
    \   using tim7rst = FieldModel<address, 5, 0x00000001>;\n    using tim12rst =\
    \ FieldModel<address, 6, 0x00000001>;\n    using tim13rst = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tim14rst = FieldModel<address, 8, 0x00000001>;\n\
    \    using wwdgrst = FieldModel<address, 11, 0x00000001>;\n    using spi2rst =\
    \ FieldModel<address, 14, 0x00000001>;\n    using spi3rst = FieldModel<address,\
    \ 15, 0x00000001>;\n    using spdifrst = FieldModel<address, 16, 0x00000001>;\n\
    \    using uart2rst = FieldModel<address, 17, 0x00000001>;\n    using uart3rst\
    \ = FieldModel<address, 18, 0x00000001>;\n    using uart4rst = FieldModel<address,\
    \ 19, 0x00000001>;\n    using uart5rst = FieldModel<address, 20, 0x00000001>;\n\
    \    using i2c1rst = FieldModel<address, 21, 0x00000001>;\n    using i2c2rst =\
    \ FieldModel<address, 22, 0x00000001>;\n    using i2c3rst = FieldModel<address,\
    \ 23, 0x00000001>;\n    using i2cfmp1rst = FieldModel<address, 24, 0x00000001>;\n\
    \    using can1rst = FieldModel<address, 25, 0x00000001>;\n    using can2rst =\
    \ FieldModel<address, 26, 0x00000001>;\n    using pwrrst = FieldModel<address,\
    \ 28, 0x00000001>;\n    using dacrst = FieldModel<address, 29, 0x00000001>;\n\
    \  };\n\npublic:\n  using apb1rstr = Apb1rstrReg<BaseAddress + 0x0020>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Apb2rstrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tim1rst = FieldModel<address, 0, 0x00000001>;\n   \
    \ using tim8rst = FieldModel<address, 1, 0x00000001>;\n    using usart1rst = FieldModel<address,\
    \ 4, 0x00000001>;\n    using usart6rst = FieldModel<address, 5, 0x00000001>;\n\
    \    using adcrst = FieldModel<address, 8, 0x00000001>;\n    using sdiorst = FieldModel<address,\
    \ 11, 0x00000001>;\n    using spi1rst = FieldModel<address, 12, 0x00000001>;\n\
    \    using spi4rst = FieldModel<address, 13, 0x00000001>;\n    using syscfgrst\
    \ = FieldModel<address, 14, 0x00000001>;\n    using tim9rst = FieldModel<address,\
    \ 16, 0x00000001>;\n    using tim10rst = FieldModel<address, 17, 0x00000001>;\n\
    \    using tim11rst = FieldModel<address, 18, 0x00000001>;\n    using sai1rst\
    \ = FieldModel<address, 22, 0x00000001>;\n    using sai2rst = FieldModel<address,\
    \ 23, 0x00000001>;\n  };\n\npublic:\n  using apb2rstr = Apb2rstrReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class Ahb1enrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using otghsulpien = FieldModel<address,\
    \ 30, 0x00000001>;\n    using otghsen = FieldModel<address, 29, 0x00000001>;\n\
    \    using dma2en = FieldModel<address, 22, 0x00000001>;\n    using dma1en = FieldModel<address,\
    \ 21, 0x00000001>;\n    using bkpsramen = FieldModel<address, 18, 0x00000001>;\n\
    \    using crcen = FieldModel<address, 12, 0x00000001>;\n    using gpiohen = FieldModel<address,\
    \ 7, 0x00000001>;\n    using gpiogen = FieldModel<address, 6, 0x00000001>;\n \
    \   using gpiofen = FieldModel<address, 5, 0x00000001>;\n    using gpioeen = FieldModel<address,\
    \ 4, 0x00000001>;\n    using gpioden = FieldModel<address, 3, 0x00000001>;\n \
    \   using gpiocen = FieldModel<address, 2, 0x00000001>;\n    using gpioben = FieldModel<address,\
    \ 1, 0x00000001>;\n    using gpioaen = FieldModel<address, 0, 0x00000001>;\n \
    \ };\n\npublic:\n  using ahb1enr = Ahb1enrReg<BaseAddress + 0x0030>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ahb2enrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using otgfsen = FieldModel<address, 7, 0x00000001>;\n   \
    \ using dcmien = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ ahb2enr = Ahb2enrReg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ahb3enrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using fmcen = FieldModel<address, 0, 0x00000001>;\n    using qspien = FieldModel<address,\
    \ 1, 0x00000001>;\n  };\n\npublic:\n  using ahb3enr = Ahb3enrReg<BaseAddress +\
    \ 0x0038>;\n\nprivate:\n  template <uint32_t address>\n  class Apb1enrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using tim2en = FieldModel<address,\
    \ 0, 0x00000001>;\n    using tim3en = FieldModel<address, 1, 0x00000001>;\n  \
    \  using tim4en = FieldModel<address, 2, 0x00000001>;\n    using tim5en = FieldModel<address,\
    \ 3, 0x00000001>;\n    using tim6en = FieldModel<address, 4, 0x00000001>;\n  \
    \  using tim7en = FieldModel<address, 5, 0x00000001>;\n    using tim12en = FieldModel<address,\
    \ 6, 0x00000001>;\n    using tim13en = FieldModel<address, 7, 0x00000001>;\n \
    \   using tim14en = FieldModel<address, 8, 0x00000001>;\n    using wwdgen = FieldModel<address,\
    \ 11, 0x00000001>;\n    using spi2en = FieldModel<address, 14, 0x00000001>;\n\
    \    using spi3en = FieldModel<address, 15, 0x00000001>;\n    using spdifen =\
    \ FieldModel<address, 16, 0x00000001>;\n    using usart2en = FieldModel<address,\
    \ 17, 0x00000001>;\n    using usart3en = FieldModel<address, 18, 0x00000001>;\n\
    \    using uart4en = FieldModel<address, 19, 0x00000001>;\n    using uart5en =\
    \ FieldModel<address, 20, 0x00000001>;\n    using i2c1en = FieldModel<address,\
    \ 21, 0x00000001>;\n    using i2c2en = FieldModel<address, 22, 0x00000001>;\n\
    \    using i2c3en = FieldModel<address, 23, 0x00000001>;\n    using i2cfmp1en\
    \ = FieldModel<address, 24, 0x00000001>;\n    using can1en = FieldModel<address,\
    \ 25, 0x00000001>;\n    using can2en = FieldModel<address, 26, 0x00000001>;\n\
    \    using cec = FieldModel<address, 27, 0x00000001>;\n    using pwren = FieldModel<address,\
    \ 28, 0x00000001>;\n    using dacen = FieldModel<address, 29, 0x00000001>;\n \
    \ };\n\npublic:\n  using apb1enr = Apb1enrReg<BaseAddress + 0x0040>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Apb2enrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tim1en = FieldModel<address, 0, 0x00000001>;\n    using\
    \ tim8en = FieldModel<address, 1, 0x00000001>;\n    using usart1en = FieldModel<address,\
    \ 4, 0x00000001>;\n    using usart6en = FieldModel<address, 5, 0x00000001>;\n\
    \    using adc1en = FieldModel<address, 8, 0x00000001>;\n    using adc2en = FieldModel<address,\
    \ 9, 0x00000001>;\n    using adc3en = FieldModel<address, 10, 0x00000001>;\n \
    \   using sdioen = FieldModel<address, 11, 0x00000001>;\n    using spi1en = FieldModel<address,\
    \ 12, 0x00000001>;\n    using spi4enr = FieldModel<address, 13, 0x00000001>;\n\
    \    using syscfgen = FieldModel<address, 14, 0x00000001>;\n    using tim9en =\
    \ FieldModel<address, 16, 0x00000001>;\n    using tim10en = FieldModel<address,\
    \ 17, 0x00000001>;\n    using tim11en = FieldModel<address, 18, 0x00000001>;\n\
    \    using sai1en = FieldModel<address, 22, 0x00000001>;\n    using sai2en = FieldModel<address,\
    \ 23, 0x00000001>;\n  };\n\npublic:\n  using apb2enr = Apb2enrReg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class Ahb1lpenrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using gpioalpen = FieldModel<address,\
    \ 0, 0x00000001>;\n    using gpioblpen = FieldModel<address, 1, 0x00000001>;\n\
    \    using gpioclpen = FieldModel<address, 2, 0x00000001>;\n    using gpiodlpen\
    \ = FieldModel<address, 3, 0x00000001>;\n    using gpioelpen = FieldModel<address,\
    \ 4, 0x00000001>;\n    using gpioflpen = FieldModel<address, 5, 0x00000001>;\n\
    \    using gpioglpen = FieldModel<address, 6, 0x00000001>;\n    using gpiohlpen\
    \ = FieldModel<address, 7, 0x00000001>;\n    using crclpen = FieldModel<address,\
    \ 12, 0x00000001>;\n    using flitflpen = FieldModel<address, 15, 0x00000001>;\n\
    \    using sram1lpen = FieldModel<address, 16, 0x00000001>;\n    using sram2lpen\
    \ = FieldModel<address, 17, 0x00000001>;\n    using bkpsramlpen = FieldModel<address,\
    \ 18, 0x00000001>;\n    using dma1lpen = FieldModel<address, 21, 0x00000001>;\n\
    \    using dma2lpen = FieldModel<address, 22, 0x00000001>;\n    using otghslpen\
    \ = FieldModel<address, 29, 0x00000001>;\n    using otghsulpilpen = FieldModel<address,\
    \ 30, 0x00000001>;\n  };\n\npublic:\n  using ahb1lpenr = Ahb1lpenrReg<BaseAddress\
    \ + 0x0050>;\n\nprivate:\n  template <uint32_t address>\n  class Ahb2lpenrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using otgfslpen = FieldModel<address,\
    \ 7, 0x00000001>;\n    using dcmilpen = FieldModel<address, 0, 0x00000001>;\n\
    \  };\n\npublic:\n  using ahb2lpenr = Ahb2lpenrReg<BaseAddress + 0x0054>;\n\n\
    private:\n  template <uint32_t address>\n  class Ahb3lpenrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fmclpen = FieldModel<address, 0, 0x00000001>;\n   \
    \ using qspilpen = FieldModel<address, 1, 0x00000001>;\n  };\n\npublic:\n  using\
    \ ahb3lpenr = Ahb3lpenrReg<BaseAddress + 0x0058>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Apb1lpenrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tim2lpen = FieldModel<address, 0, 0x00000001>;\n    using tim3lpen\
    \ = FieldModel<address, 1, 0x00000001>;\n    using tim4lpen = FieldModel<address,\
    \ 2, 0x00000001>;\n    using tim5lpen = FieldModel<address, 3, 0x00000001>;\n\
    \    using tim6lpen = FieldModel<address, 4, 0x00000001>;\n    using tim7lpen\
    \ = FieldModel<address, 5, 0x00000001>;\n    using tim12lpen = FieldModel<address,\
    \ 6, 0x00000001>;\n    using tim13lpen = FieldModel<address, 7, 0x00000001>;\n\
    \    using tim14lpen = FieldModel<address, 8, 0x00000001>;\n    using wwdglpen\
    \ = FieldModel<address, 11, 0x00000001>;\n    using spi2lpen = FieldModel<address,\
    \ 14, 0x00000001>;\n    using spi3lpen = FieldModel<address, 15, 0x00000001>;\n\
    \    using spdiflpen = FieldModel<address, 16, 0x00000001>;\n    using usart2lpen\
    \ = FieldModel<address, 17, 0x00000001>;\n    using usart3lpen = FieldModel<address,\
    \ 18, 0x00000001>;\n    using uart4lpen = FieldModel<address, 19, 0x00000001>;\n\
    \    using uart5lpen = FieldModel<address, 20, 0x00000001>;\n    using i2c1lpen\
    \ = FieldModel<address, 21, 0x00000001>;\n    using i2c2lpen = FieldModel<address,\
    \ 22, 0x00000001>;\n    using i2c3lpen = FieldModel<address, 23, 0x00000001>;\n\
    \    using i2cfmp1lpen = FieldModel<address, 24, 0x00000001>;\n    using can1lpen\
    \ = FieldModel<address, 25, 0x00000001>;\n    using can2lpen = FieldModel<address,\
    \ 26, 0x00000001>;\n    using ceclpen = FieldModel<address, 27, 0x00000001>;\n\
    \    using pwrlpen = FieldModel<address, 28, 0x00000001>;\n    using daclpen =\
    \ FieldModel<address, 29, 0x00000001>;\n  };\n\npublic:\n  using apb1lpenr = Apb1lpenrReg<BaseAddress\
    \ + 0x0060>;\n\nprivate:\n  template <uint32_t address>\n  class Apb2lpenrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using tim1lpen = FieldModel<address,\
    \ 0, 0x00000001>;\n    using tim8lpen = FieldModel<address, 1, 0x00000001>;\n\
    \    using usart1lpen = FieldModel<address, 4, 0x00000001>;\n    using usart6lpen\
    \ = FieldModel<address, 5, 0x00000001>;\n    using adc1lpen = FieldModel<address,\
    \ 8, 0x00000001>;\n    using adc2lpen = FieldModel<address, 9, 0x00000001>;\n\
    \    using adc3lpen = FieldModel<address, 10, 0x00000001>;\n    using sdiolpen\
    \ = FieldModel<address, 11, 0x00000001>;\n    using spi1lpen = FieldModel<address,\
    \ 12, 0x00000001>;\n    using spi4lpen = FieldModel<address, 13, 0x00000001>;\n\
    \    using syscfglpen = FieldModel<address, 14, 0x00000001>;\n    using tim9lpen\
    \ = FieldModel<address, 16, 0x00000001>;\n    using tim10lpen = FieldModel<address,\
    \ 17, 0x00000001>;\n    using tim11lpen = FieldModel<address, 18, 0x00000001>;\n\
    \    using sai1lpen = FieldModel<address, 22, 0x00000001>;\n    using sai2lpen\
    \ = FieldModel<address, 23, 0x00000001>;\n  };\n\npublic:\n  using apb2lpenr =\
    \ Apb2lpenrReg<BaseAddress + 0x0064>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class BdcrReg: public RegisterModel<address>\n  {\n  public:\n    using bdrst\
    \ = FieldModel<address, 16, 0x00000001>;\n    using rtcen = FieldModel<address,\
    \ 15, 0x00000001>;\n    using rtcsel = FieldModel<address, 8, 0x00000003>;\n \
    \   using lsemod = FieldModel<address, 3, 0x00000001>;\n    using lsebyp = FieldModel<address,\
    \ 2, 0x00000001>;\n    using lserdy = FieldModel<address, 1, 0x00000001>;\n  \
    \  using lseon = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ bdcr = BdcrReg<BaseAddress + 0x0070>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CsrReg: public RegisterModel<address>\n  {\n  public:\n    using lpwrrstf\
    \ = FieldModel<address, 31, 0x00000001>;\n    using wwdgrstf = FieldModel<address,\
    \ 30, 0x00000001>;\n    using wdgrstf = FieldModel<address, 29, 0x00000001>;\n\
    \    using sftrstf = FieldModel<address, 28, 0x00000001>;\n    using porrstf =\
    \ FieldModel<address, 27, 0x00000001>;\n    using padrstf = FieldModel<address,\
    \ 26, 0x00000001>;\n    using borrstf = FieldModel<address, 25, 0x00000001>;\n\
    \    using rmvf = FieldModel<address, 24, 0x00000001>;\n    using lsirdy = FieldModel<address,\
    \ 1, 0x00000001>;\n    using lsion = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using csr = CsrReg<BaseAddress + 0x0074>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SscgrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using sscgen = FieldModel<address, 31, 0x00000001>;\n    using\
    \ spreadsel = FieldModel<address, 30, 0x00000001>;\n    using incstep = FieldModel<address,\
    \ 13, 0x00007FFF>;\n    using modper = FieldModel<address, 0, 0x00001FFF>;\n \
    \ };\n\npublic:\n  using sscgr = SscgrReg<BaseAddress + 0x0080>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Plli2scfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using plli2sm = FieldModel<address, 0, 0x0000003F>;\n   \
    \ using plli2sn = FieldModel<address, 6, 0x000001FF>;\n    using plli2sp = FieldModel<address,\
    \ 16, 0x00000003>;\n    using plli2sq = FieldModel<address, 24, 0x0000000F>;\n\
    \    using plli2sr = FieldModel<address, 28, 0x00000007>;\n  };\n\npublic:\n \
    \ using plli2scfgr = Plli2scfgrReg<BaseAddress + 0x0084>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class PllsaicfgrReg: public RegisterModel<address>\n \
    \ {\n  public:\n    using pllsaim = FieldModel<address, 0, 0x0000003F>;\n    using\
    \ pllsain = FieldModel<address, 6, 0x000001FF>;\n    using pllsaip = FieldModel<address,\
    \ 16, 0x00000003>;\n    using pllsaiq = FieldModel<address, 24, 0x0000000F>;\n\
    \  };\n\npublic:\n  using pllsaicfgr = PllsaicfgrReg<BaseAddress + 0x0088>;\n\n\
    private:\n  template <uint32_t address>\n  class DckcfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using plli2sdivq = FieldModel<address, 0, 0x0000001F>;\n\
    \    using pllsaidivq = FieldModel<address, 8, 0x0000001F>;\n    using sai1src\
    \ = FieldModel<address, 20, 0x00000003>;\n    using sai2src = FieldModel<address,\
    \ 22, 0x00000003>;\n    using timpre = FieldModel<address, 24, 0x00000001>;\n\
    \    using i2s1src = FieldModel<address, 25, 0x00000003>;\n    using i2s2src =\
    \ FieldModel<address, 27, 0x00000003>;\n  };\n\npublic:\n  using dckcfgr = DckcfgrReg<BaseAddress\
    \ + 0x008C>;\n\nprivate:\n  template <uint32_t address>\n  class CkgatenrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ahb2apb1_cken = FieldModel<address,\
    \ 0, 0x00000001>;\n    using ahb2apb2_cken = FieldModel<address, 1, 0x00000001>;\n\
    \    using cm4dbg_cken = FieldModel<address, 2, 0x00000001>;\n    using spare_cken\
    \ = FieldModel<address, 3, 0x00000001>;\n    using sram_cken = FieldModel<address,\
    \ 4, 0x00000001>;\n    using flitf_cken = FieldModel<address, 5, 0x00000001>;\n\
    \    using rcc_cken = FieldModel<address, 6, 0x00000001>;\n  };\n\npublic:\n \
    \ using ckgatenr = CkgatenrReg<BaseAddress + 0x0090>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Dckcfgr2Reg: public RegisterModel<address>\n  {\n\
    \  public:\n    using fmpi2c1sel = FieldModel<address, 22, 0x00000003>;\n    using\
    \ cecsel = FieldModel<address, 26, 0x00000001>;\n    using ck48msel = FieldModel<address,\
    \ 27, 0x00000001>;\n    using sdiosel = FieldModel<address, 28, 0x00000001>;\n\
    \    using spdifsel = FieldModel<address, 29, 0x00000001>;\n  };\n\npublic:\n\
    \  using dckcfgr2 = Dckcfgr2Reg<BaseAddress + 0x0094>;\n\n};\n\n}\n\n#endif /*\
    \ DRAL_STM32F446_RCC_H */\n"
  name: RCC
- content: "#ifndef DRAL_STM32F446_GPIOH_H\n#define DRAL_STM32F446_GPIOH_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpioh\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40021C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOH_H */\n"
  name: GPIOH
- content: "#ifndef DRAL_STM32F446_GPIOG_H\n#define DRAL_STM32F446_GPIOG_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpiog\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40021800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOG_H */\n"
  name: GPIOG
- content: "#ifndef DRAL_STM32F446_GPIOF_H\n#define DRAL_STM32F446_GPIOF_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpiof\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40021400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOF_H */\n"
  name: GPIOF
- content: "#ifndef DRAL_STM32F446_GPIOE_H\n#define DRAL_STM32F446_GPIOE_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpioe\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40021000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOE_H */\n"
  name: GPIOE
- content: "#ifndef DRAL_STM32F446_GPIOD_H\n#define DRAL_STM32F446_GPIOD_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpiod\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40020C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOD_H */\n"
  name: GPIOD
- content: "#ifndef DRAL_STM32F446_GPIOC_H\n#define DRAL_STM32F446_GPIOC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpioc\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40020800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOC_H */\n"
  name: GPIOC
- content: "#ifndef DRAL_STM32F446_GPIOB_H\n#define DRAL_STM32F446_GPIOB_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpiob\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40020400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOB_H */\n"
  name: GPIOB
- content: "#ifndef DRAL_STM32F446_GPIOA_H\n#define DRAL_STM32F446_GPIOA_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass gpioa\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40020000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ModerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using moder15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ moder14 = FieldModel<address, 28, 0x00000003>;\n    using moder13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using moder12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using moder11 = FieldModel<address, 22, 0x00000003>;\n    using moder10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using moder9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using moder8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using moder7 = FieldModel<address, 14, 0x00000003>;\n    using moder6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using moder5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using moder4 = FieldModel<address, 8, 0x00000003>;\n    using moder3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using moder2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using moder1 = FieldModel<address, 2, 0x00000003>;\n    using moder0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using moder = ModerReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OtyperReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ot15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ot14 = FieldModel<address, 14, 0x00000001>;\n    using ot13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using ot12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using ot11 = FieldModel<address, 11, 0x00000001>;\n    using ot10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ot9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ot8 = FieldModel<address, 8, 0x00000001>;\n    using ot7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ot6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ot5 = FieldModel<address, 5, 0x00000001>;\n    using ot4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ot3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ot2 = FieldModel<address, 2, 0x00000001>;\n    using ot1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ot0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using otyper = OtyperReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OspeedrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using ospeedr15 = FieldModel<address, 30, 0x00000003>;\n    using\
    \ ospeedr14 = FieldModel<address, 28, 0x00000003>;\n    using ospeedr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using ospeedr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using ospeedr11 = FieldModel<address, 22, 0x00000003>;\n    using ospeedr10\
    \ = FieldModel<address, 20, 0x00000003>;\n    using ospeedr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using ospeedr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using ospeedr7 = FieldModel<address, 14, 0x00000003>;\n    using ospeedr6\
    \ = FieldModel<address, 12, 0x00000003>;\n    using ospeedr5 = FieldModel<address,\
    \ 10, 0x00000003>;\n    using ospeedr4 = FieldModel<address, 8, 0x00000003>;\n\
    \    using ospeedr3 = FieldModel<address, 6, 0x00000003>;\n    using ospeedr2\
    \ = FieldModel<address, 4, 0x00000003>;\n    using ospeedr1 = FieldModel<address,\
    \ 2, 0x00000003>;\n    using ospeedr0 = FieldModel<address, 0, 0x00000003>;\n\
    \  };\n\npublic:\n  using ospeedr = OspeedrReg<BaseAddress + 0x0008>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class PupdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pupdr15 = FieldModel<address, 30, 0x00000003>;\n  \
    \  using pupdr14 = FieldModel<address, 28, 0x00000003>;\n    using pupdr13 = FieldModel<address,\
    \ 26, 0x00000003>;\n    using pupdr12 = FieldModel<address, 24, 0x00000003>;\n\
    \    using pupdr11 = FieldModel<address, 22, 0x00000003>;\n    using pupdr10 =\
    \ FieldModel<address, 20, 0x00000003>;\n    using pupdr9 = FieldModel<address,\
    \ 18, 0x00000003>;\n    using pupdr8 = FieldModel<address, 16, 0x00000003>;\n\
    \    using pupdr7 = FieldModel<address, 14, 0x00000003>;\n    using pupdr6 = FieldModel<address,\
    \ 12, 0x00000003>;\n    using pupdr5 = FieldModel<address, 10, 0x00000003>;\n\
    \    using pupdr4 = FieldModel<address, 8, 0x00000003>;\n    using pupdr3 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using pupdr2 = FieldModel<address, 4, 0x00000003>;\n  \
    \  using pupdr1 = FieldModel<address, 2, 0x00000003>;\n    using pupdr0 = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using pupdr = PupdrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class IdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using idr15 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ idr14 = FieldModel<address, 14, 0x00000001>;\n    using idr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using idr12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using idr11 = FieldModel<address, 11, 0x00000001>;\n    using idr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using idr9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using idr8 = FieldModel<address, 8, 0x00000001>;\n    using idr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using idr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ idr5 = FieldModel<address, 5, 0x00000001>;\n    using idr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using idr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ idr2 = FieldModel<address, 2, 0x00000001>;\n    using idr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using idr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using idr = IdrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class OdrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using odr15 = FieldModel<address, 15, 0x00000001>;\n    using odr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using odr13 = FieldModel<address, 13, 0x00000001>;\n \
    \   using odr12 = FieldModel<address, 12, 0x00000001>;\n    using odr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using odr10 = FieldModel<address, 10, 0x00000001>;\n \
    \   using odr9 = FieldModel<address, 9, 0x00000001>;\n    using odr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using odr7 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ odr6 = FieldModel<address, 6, 0x00000001>;\n    using odr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using odr4 = FieldModel<address, 4, 0x00000001>;\n    using\
    \ odr3 = FieldModel<address, 3, 0x00000001>;\n    using odr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using odr1 = FieldModel<address, 1, 0x00000001>;\n    using\
    \ odr0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using odr = OdrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class BsrrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using br15 = FieldModel<address,\
    \ 31, 0x00000001>;\n    using br14 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using br13 = FieldModel<address, 29, 0x00000001>;\n    using br12 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using br11 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using br10 = FieldModel<address, 26, 0x00000001>;\n    using br9 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using br8 = FieldModel<address, 24, 0x00000001>;\n   \
    \ using br7 = FieldModel<address, 23, 0x00000001>;\n    using br6 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using br5 = FieldModel<address, 21, 0x00000001>;\n   \
    \ using br4 = FieldModel<address, 20, 0x00000001>;\n    using br3 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using br2 = FieldModel<address, 18, 0x00000001>;\n   \
    \ using br1 = FieldModel<address, 17, 0x00000001>;\n    using br0 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using bs15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using bs14 = FieldModel<address, 14, 0x00000001>;\n    using bs13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using bs12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using bs11 = FieldModel<address, 11, 0x00000001>;\n    using bs10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using bs9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ bs8 = FieldModel<address, 8, 0x00000001>;\n    using bs7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bs6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ bs5 = FieldModel<address, 5, 0x00000001>;\n    using bs4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using bs3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ bs2 = FieldModel<address, 2, 0x00000001>;\n    using bs1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using bs0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using bsrr = BsrrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class LckrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lckk = FieldModel<address, 16, 0x00000001>;\n    using lck15 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lck14 = FieldModel<address, 14, 0x00000001>;\n \
    \   using lck13 = FieldModel<address, 13, 0x00000001>;\n    using lck12 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using lck11 = FieldModel<address, 11, 0x00000001>;\n \
    \   using lck10 = FieldModel<address, 10, 0x00000001>;\n    using lck9 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lck8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lck7 = FieldModel<address, 7, 0x00000001>;\n    using lck6 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lck5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ lck4 = FieldModel<address, 4, 0x00000001>;\n    using lck3 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using lck2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ lck1 = FieldModel<address, 1, 0x00000001>;\n    using lck0 = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using lckr = LckrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using afrl7 = FieldModel<address, 28, 0x0000000F>;\n    using\
    \ afrl6 = FieldModel<address, 24, 0x0000000F>;\n    using afrl5 = FieldModel<address,\
    \ 20, 0x0000000F>;\n    using afrl4 = FieldModel<address, 16, 0x0000000F>;\n \
    \   using afrl3 = FieldModel<address, 12, 0x0000000F>;\n    using afrl2 = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using afrl1 = FieldModel<address, 4, 0x0000000F>;\n   \
    \ using afrl0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ afrl = AfrlReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfrhReg: public RegisterModel<address>\n  {\n  public:\n    using afrh15\
    \ = FieldModel<address, 28, 0x0000000F>;\n    using afrh14 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using afrh13 = FieldModel<address, 20, 0x0000000F>;\n\
    \    using afrh12 = FieldModel<address, 16, 0x0000000F>;\n    using afrh11 = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using afrh10 = FieldModel<address, 8, 0x0000000F>;\n \
    \   using afrh9 = FieldModel<address, 4, 0x0000000F>;\n    using afrh8 = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using afrh = AfrhReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_GPIOA_H */\n"
  name: GPIOA
- content: "#ifndef DRAL_STM32F446_SYSCFG_H\n#define DRAL_STM32F446_SYSCFG_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass syscfg\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40013800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class MemrmReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using mem_mode = FieldModel<address, 0, 0x00000007>;\n    using\
    \ fb_mode = FieldModel<address, 8, 0x00000001>;\n    using swp_fmc = FieldModel<address,\
    \ 10, 0x00000003>;\n  };\n\npublic:\n  using memrm = MemrmReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PmcReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mii_rmii_sel = FieldModel<address, 23, 0x00000001>;\n\
    \    using adc1dc2 = FieldModel<address, 16, 0x00000001>;\n    using adc2dc2 =\
    \ FieldModel<address, 17, 0x00000001>;\n    using adc3dc2 = FieldModel<address,\
    \ 18, 0x00000001>;\n  };\n\npublic:\n  using pmc = PmcReg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Exticr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using exti3 = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ exti2 = FieldModel<address, 8, 0x0000000F>;\n    using exti1 = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using exti0 = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using exticr1 = Exticr1Reg<BaseAddress + 0x0008>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Exticr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using exti7 = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ exti6 = FieldModel<address, 8, 0x0000000F>;\n    using exti5 = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using exti4 = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using exticr2 = Exticr2Reg<BaseAddress + 0x000C>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Exticr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using exti11 = FieldModel<address, 12, 0x0000000F>;\n   \
    \ using exti10 = FieldModel<address, 8, 0x0000000F>;\n    using exti9 = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using exti8 = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using exticr3 = Exticr3Reg<BaseAddress + 0x0010>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Exticr4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using exti15 = FieldModel<address, 12, 0x0000000F>;\n   \
    \ using exti14 = FieldModel<address, 8, 0x0000000F>;\n    using exti13 = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using exti12 = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using exticr4 = Exticr4Reg<BaseAddress + 0x0014>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class CmpcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ready = FieldModel<address, 8, 0x00000001>;\n    using\
    \ cmp_pd = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cmpcr\
    \ = CmpcrReg<BaseAddress + 0x0020>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_SYSCFG_H\
    \ */\n"
  name: SYSCFG
- content: "#ifndef DRAL_STM32F446_SPI1_H\n#define DRAL_STM32F446_SPI1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass spi1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40013000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bidimode = FieldModel<address, 15, 0x00000001>;\n    using bidioe =\
    \ FieldModel<address, 14, 0x00000001>;\n    using crcen = FieldModel<address,\
    \ 13, 0x00000001>;\n    using crcnext = FieldModel<address, 12, 0x00000001>;\n\
    \    using dff = FieldModel<address, 11, 0x00000001>;\n    using rxonly = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ssm = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ssi = FieldModel<address, 8, 0x00000001>;\n    using lsbfirst = FieldModel<address,\
    \ 7, 0x00000001>;\n    using spe = FieldModel<address, 6, 0x00000001>;\n    using\
    \ br = FieldModel<address, 3, 0x00000007>;\n    using mstr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cpol = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cpha = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using rxneie = FieldModel<address, 6, 0x00000001>;\n  \
    \  using errie = FieldModel<address, 5, 0x00000001>;\n    using frf = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ssoe = FieldModel<address, 2, 0x00000001>;\n    using\
    \ txdmaen = FieldModel<address, 1, 0x00000001>;\n    using rxdmaen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tifrfe = FieldModel<address, 8, 0x00000001>;\n    using\
    \ bsy = FieldModel<address, 7, 0x00000001>;\n    using ovr = FieldModel<address,\
    \ 6, 0x00000001>;\n    using modf = FieldModel<address, 5, 0x00000001>;\n    using\
    \ crcerr = FieldModel<address, 4, 0x00000001>;\n    using udr = FieldModel<address,\
    \ 3, 0x00000001>;\n    using chside = FieldModel<address, 2, 0x00000001>;\n  \
    \  using txe = FieldModel<address, 1, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class CrcprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using crcpoly = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ crcpr = CrcprReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RxcrcrReg: public RegisterModel<address>\n  {\n  public:\n    using rxcrc\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using rxcrcr = RxcrcrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class TxcrcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txcrc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using txcrcr = TxcrcrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class I2scfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using i2smod = FieldModel<address, 11, 0x00000001>;\n   \
    \ using i2se = FieldModel<address, 10, 0x00000001>;\n    using i2scfg = FieldModel<address,\
    \ 8, 0x00000003>;\n    using pcmsync = FieldModel<address, 7, 0x00000001>;\n \
    \   using i2sstd = FieldModel<address, 4, 0x00000003>;\n    using ckpol = FieldModel<address,\
    \ 3, 0x00000001>;\n    using datlen = FieldModel<address, 1, 0x00000003>;\n  \
    \  using chlen = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ i2scfgr = I2scfgrReg<BaseAddress + 0x001C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class I2sprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mckoe = FieldModel<address, 9, 0x00000001>;\n    using odd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using i2sdiv = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using i2spr = I2sprReg<BaseAddress + 0x0020>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_SPI1_H */\n"
  name: SPI1
- content: "#ifndef DRAL_STM32F446_SPI2_H\n#define DRAL_STM32F446_SPI2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass spi2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40003800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bidimode = FieldModel<address, 15, 0x00000001>;\n    using bidioe =\
    \ FieldModel<address, 14, 0x00000001>;\n    using crcen = FieldModel<address,\
    \ 13, 0x00000001>;\n    using crcnext = FieldModel<address, 12, 0x00000001>;\n\
    \    using dff = FieldModel<address, 11, 0x00000001>;\n    using rxonly = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ssm = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ssi = FieldModel<address, 8, 0x00000001>;\n    using lsbfirst = FieldModel<address,\
    \ 7, 0x00000001>;\n    using spe = FieldModel<address, 6, 0x00000001>;\n    using\
    \ br = FieldModel<address, 3, 0x00000007>;\n    using mstr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cpol = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cpha = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using rxneie = FieldModel<address, 6, 0x00000001>;\n  \
    \  using errie = FieldModel<address, 5, 0x00000001>;\n    using frf = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ssoe = FieldModel<address, 2, 0x00000001>;\n    using\
    \ txdmaen = FieldModel<address, 1, 0x00000001>;\n    using rxdmaen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tifrfe = FieldModel<address, 8, 0x00000001>;\n    using\
    \ bsy = FieldModel<address, 7, 0x00000001>;\n    using ovr = FieldModel<address,\
    \ 6, 0x00000001>;\n    using modf = FieldModel<address, 5, 0x00000001>;\n    using\
    \ crcerr = FieldModel<address, 4, 0x00000001>;\n    using udr = FieldModel<address,\
    \ 3, 0x00000001>;\n    using chside = FieldModel<address, 2, 0x00000001>;\n  \
    \  using txe = FieldModel<address, 1, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class CrcprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using crcpoly = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ crcpr = CrcprReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RxcrcrReg: public RegisterModel<address>\n  {\n  public:\n    using rxcrc\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using rxcrcr = RxcrcrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class TxcrcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txcrc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using txcrcr = TxcrcrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class I2scfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using i2smod = FieldModel<address, 11, 0x00000001>;\n   \
    \ using i2se = FieldModel<address, 10, 0x00000001>;\n    using i2scfg = FieldModel<address,\
    \ 8, 0x00000003>;\n    using pcmsync = FieldModel<address, 7, 0x00000001>;\n \
    \   using i2sstd = FieldModel<address, 4, 0x00000003>;\n    using ckpol = FieldModel<address,\
    \ 3, 0x00000001>;\n    using datlen = FieldModel<address, 1, 0x00000003>;\n  \
    \  using chlen = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ i2scfgr = I2scfgrReg<BaseAddress + 0x001C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class I2sprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mckoe = FieldModel<address, 9, 0x00000001>;\n    using odd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using i2sdiv = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using i2spr = I2sprReg<BaseAddress + 0x0020>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_SPI2_H */\n"
  name: SPI2
- content: "#ifndef DRAL_STM32F446_SPI3_H\n#define DRAL_STM32F446_SPI3_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass spi3\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40003C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bidimode = FieldModel<address, 15, 0x00000001>;\n    using bidioe =\
    \ FieldModel<address, 14, 0x00000001>;\n    using crcen = FieldModel<address,\
    \ 13, 0x00000001>;\n    using crcnext = FieldModel<address, 12, 0x00000001>;\n\
    \    using dff = FieldModel<address, 11, 0x00000001>;\n    using rxonly = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ssm = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ssi = FieldModel<address, 8, 0x00000001>;\n    using lsbfirst = FieldModel<address,\
    \ 7, 0x00000001>;\n    using spe = FieldModel<address, 6, 0x00000001>;\n    using\
    \ br = FieldModel<address, 3, 0x00000007>;\n    using mstr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cpol = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cpha = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using rxneie = FieldModel<address, 6, 0x00000001>;\n  \
    \  using errie = FieldModel<address, 5, 0x00000001>;\n    using frf = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ssoe = FieldModel<address, 2, 0x00000001>;\n    using\
    \ txdmaen = FieldModel<address, 1, 0x00000001>;\n    using rxdmaen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tifrfe = FieldModel<address, 8, 0x00000001>;\n    using\
    \ bsy = FieldModel<address, 7, 0x00000001>;\n    using ovr = FieldModel<address,\
    \ 6, 0x00000001>;\n    using modf = FieldModel<address, 5, 0x00000001>;\n    using\
    \ crcerr = FieldModel<address, 4, 0x00000001>;\n    using udr = FieldModel<address,\
    \ 3, 0x00000001>;\n    using chside = FieldModel<address, 2, 0x00000001>;\n  \
    \  using txe = FieldModel<address, 1, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class CrcprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using crcpoly = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ crcpr = CrcprReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RxcrcrReg: public RegisterModel<address>\n  {\n  public:\n    using rxcrc\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using rxcrcr = RxcrcrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class TxcrcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txcrc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using txcrcr = TxcrcrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class I2scfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using i2smod = FieldModel<address, 11, 0x00000001>;\n   \
    \ using i2se = FieldModel<address, 10, 0x00000001>;\n    using i2scfg = FieldModel<address,\
    \ 8, 0x00000003>;\n    using pcmsync = FieldModel<address, 7, 0x00000001>;\n \
    \   using i2sstd = FieldModel<address, 4, 0x00000003>;\n    using ckpol = FieldModel<address,\
    \ 3, 0x00000001>;\n    using datlen = FieldModel<address, 1, 0x00000003>;\n  \
    \  using chlen = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ i2scfgr = I2scfgrReg<BaseAddress + 0x001C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class I2sprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mckoe = FieldModel<address, 9, 0x00000001>;\n    using odd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using i2sdiv = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using i2spr = I2sprReg<BaseAddress + 0x0020>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_SPI3_H */\n"
  name: SPI3
- content: "#ifndef DRAL_STM32F446_SPI4_H\n#define DRAL_STM32F446_SPI4_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass spi4\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40013400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bidimode = FieldModel<address, 15, 0x00000001>;\n    using bidioe =\
    \ FieldModel<address, 14, 0x00000001>;\n    using crcen = FieldModel<address,\
    \ 13, 0x00000001>;\n    using crcnext = FieldModel<address, 12, 0x00000001>;\n\
    \    using dff = FieldModel<address, 11, 0x00000001>;\n    using rxonly = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ssm = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ssi = FieldModel<address, 8, 0x00000001>;\n    using lsbfirst = FieldModel<address,\
    \ 7, 0x00000001>;\n    using spe = FieldModel<address, 6, 0x00000001>;\n    using\
    \ br = FieldModel<address, 3, 0x00000007>;\n    using mstr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cpol = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cpha = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using rxneie = FieldModel<address, 6, 0x00000001>;\n  \
    \  using errie = FieldModel<address, 5, 0x00000001>;\n    using frf = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ssoe = FieldModel<address, 2, 0x00000001>;\n    using\
    \ txdmaen = FieldModel<address, 1, 0x00000001>;\n    using rxdmaen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tifrfe = FieldModel<address, 8, 0x00000001>;\n    using\
    \ bsy = FieldModel<address, 7, 0x00000001>;\n    using ovr = FieldModel<address,\
    \ 6, 0x00000001>;\n    using modf = FieldModel<address, 5, 0x00000001>;\n    using\
    \ crcerr = FieldModel<address, 4, 0x00000001>;\n    using udr = FieldModel<address,\
    \ 3, 0x00000001>;\n    using chside = FieldModel<address, 2, 0x00000001>;\n  \
    \  using txe = FieldModel<address, 1, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class CrcprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using crcpoly = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ crcpr = CrcprReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RxcrcrReg: public RegisterModel<address>\n  {\n  public:\n    using rxcrc\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using rxcrcr = RxcrcrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class TxcrcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txcrc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using txcrcr = TxcrcrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class I2scfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using i2smod = FieldModel<address, 11, 0x00000001>;\n   \
    \ using i2se = FieldModel<address, 10, 0x00000001>;\n    using i2scfg = FieldModel<address,\
    \ 8, 0x00000003>;\n    using pcmsync = FieldModel<address, 7, 0x00000001>;\n \
    \   using i2sstd = FieldModel<address, 4, 0x00000003>;\n    using ckpol = FieldModel<address,\
    \ 3, 0x00000001>;\n    using datlen = FieldModel<address, 1, 0x00000003>;\n  \
    \  using chlen = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ i2scfgr = I2scfgrReg<BaseAddress + 0x001C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class I2sprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mckoe = FieldModel<address, 9, 0x00000001>;\n    using odd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using i2sdiv = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using i2spr = I2sprReg<BaseAddress + 0x0020>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_SPI4_H */\n"
  name: SPI4
- content: "#ifndef DRAL_STM32F446_ADC1_H\n#define DRAL_STM32F446_ADC1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass adc1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40012000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ovr = FieldModel<address, 5, 0x00000001>;\n    using strt = FieldModel<address,\
    \ 4, 0x00000001>;\n    using jstrt = FieldModel<address, 3, 0x00000001>;\n   \
    \ using jeoc = FieldModel<address, 2, 0x00000001>;\n    using eoc = FieldModel<address,\
    \ 1, 0x00000001>;\n    using awd = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ovrie = FieldModel<address, 26, 0x00000001>;\n    using res = FieldModel<address,\
    \ 24, 0x00000003>;\n    using awden = FieldModel<address, 23, 0x00000001>;\n \
    \   using jawden = FieldModel<address, 22, 0x00000001>;\n    using discnum = FieldModel<address,\
    \ 13, 0x00000007>;\n    using jdiscen = FieldModel<address, 12, 0x00000001>;\n\
    \    using discen = FieldModel<address, 11, 0x00000001>;\n    using jauto = FieldModel<address,\
    \ 10, 0x00000001>;\n    using awdsgl = FieldModel<address, 9, 0x00000001>;\n \
    \   using scan = FieldModel<address, 8, 0x00000001>;\n    using jeocie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using awdie = FieldModel<address, 6, 0x00000001>;\n   \
    \ using eocie = FieldModel<address, 5, 0x00000001>;\n    using awdch = FieldModel<address,\
    \ 0, 0x0000001F>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using swstart = FieldModel<address, 30, 0x00000001>;\n  \
    \  using exten = FieldModel<address, 28, 0x00000003>;\n    using extsel = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using jswstart = FieldModel<address, 22, 0x00000001>;\n\
    \    using jexten = FieldModel<address, 20, 0x00000003>;\n    using jextsel =\
    \ FieldModel<address, 16, 0x0000000F>;\n    using align = FieldModel<address,\
    \ 11, 0x00000001>;\n    using eocs = FieldModel<address, 10, 0x00000001>;\n  \
    \  using dds = FieldModel<address, 9, 0x00000001>;\n    using dma = FieldModel<address,\
    \ 8, 0x00000001>;\n    using cont = FieldModel<address, 1, 0x00000001>;\n    using\
    \ adon = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Smpr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using smpx_x = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using smpr1 = Smpr1Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Smpr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using smpx_x = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using smpr2 = Smpr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset1 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr1 = Jofr1Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset2 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr2 = Jofr2Reg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr3Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset3 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr3 = Jofr3Reg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr4Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset4 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr4 = Jofr4Reg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class HtrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ht = FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using\
    \ htr = HtrReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class LtrReg: public RegisterModel<address>\n  {\n  public:\n    using lt =\
    \ FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using ltr = LtrReg<BaseAddress\
    \ + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n  class Sqr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using l = FieldModel<address, 20,\
    \ 0x0000000F>;\n    using sq16 = FieldModel<address, 15, 0x0000001F>;\n    using\
    \ sq15 = FieldModel<address, 10, 0x0000001F>;\n    using sq14 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq13 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr1 = Sqr1Reg<BaseAddress + 0x002C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sqr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sq12 = FieldModel<address, 25, 0x0000001F>;\n    using sq11 = FieldModel<address,\
    \ 20, 0x0000001F>;\n    using sq10 = FieldModel<address, 15, 0x0000001F>;\n  \
    \  using sq9 = FieldModel<address, 10, 0x0000001F>;\n    using sq8 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq7 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr2 = Sqr2Reg<BaseAddress + 0x0030>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sqr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sq6 = FieldModel<address, 25, 0x0000001F>;\n    using sq5 = FieldModel<address,\
    \ 20, 0x0000001F>;\n    using sq4 = FieldModel<address, 15, 0x0000001F>;\n   \
    \ using sq3 = FieldModel<address, 10, 0x0000001F>;\n    using sq2 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq1 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr3 = Sqr3Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class JsqrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using jl = FieldModel<address, 20, 0x00000003>;\n    using jsq4 = FieldModel<address,\
    \ 15, 0x0000001F>;\n    using jsq3 = FieldModel<address, 10, 0x0000001F>;\n  \
    \  using jsq2 = FieldModel<address, 5, 0x0000001F>;\n    using jsq1 = FieldModel<address,\
    \ 0, 0x0000001F>;\n  };\n\npublic:\n  using jsqr = JsqrReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Jdr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using jdata = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using jdr1 = Jdr1Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jdr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using jdata = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ jdr2 = Jdr2Reg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Jdr3Reg: public RegisterModel<address>\n  {\n  public:\n    using jdata\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using jdr3 = Jdr3Reg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class Jdr4Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using jdata = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using jdr4 = Jdr4Reg<BaseAddress + 0x0048>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x004C>;\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class SmprxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using smpx_x = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using smprx = SmprxBankReg<BaseAddress + 0x000C,\
    \ 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class JdrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using jdata = FieldModel<address, 0, 0x0000FFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using jdrx = JdrxBankReg<BaseAddress + 0x003C, 0x0004>;\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_ADC1_H */\n"
  name: ADC1
- content: "#ifndef DRAL_STM32F446_ADC2_H\n#define DRAL_STM32F446_ADC2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass adc2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40012100;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ovr = FieldModel<address, 5, 0x00000001>;\n    using strt = FieldModel<address,\
    \ 4, 0x00000001>;\n    using jstrt = FieldModel<address, 3, 0x00000001>;\n   \
    \ using jeoc = FieldModel<address, 2, 0x00000001>;\n    using eoc = FieldModel<address,\
    \ 1, 0x00000001>;\n    using awd = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ovrie = FieldModel<address, 26, 0x00000001>;\n    using res = FieldModel<address,\
    \ 24, 0x00000003>;\n    using awden = FieldModel<address, 23, 0x00000001>;\n \
    \   using jawden = FieldModel<address, 22, 0x00000001>;\n    using discnum = FieldModel<address,\
    \ 13, 0x00000007>;\n    using jdiscen = FieldModel<address, 12, 0x00000001>;\n\
    \    using discen = FieldModel<address, 11, 0x00000001>;\n    using jauto = FieldModel<address,\
    \ 10, 0x00000001>;\n    using awdsgl = FieldModel<address, 9, 0x00000001>;\n \
    \   using scan = FieldModel<address, 8, 0x00000001>;\n    using jeocie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using awdie = FieldModel<address, 6, 0x00000001>;\n   \
    \ using eocie = FieldModel<address, 5, 0x00000001>;\n    using awdch = FieldModel<address,\
    \ 0, 0x0000001F>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using swstart = FieldModel<address, 30, 0x00000001>;\n  \
    \  using exten = FieldModel<address, 28, 0x00000003>;\n    using extsel = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using jswstart = FieldModel<address, 22, 0x00000001>;\n\
    \    using jexten = FieldModel<address, 20, 0x00000003>;\n    using jextsel =\
    \ FieldModel<address, 16, 0x0000000F>;\n    using align = FieldModel<address,\
    \ 11, 0x00000001>;\n    using eocs = FieldModel<address, 10, 0x00000001>;\n  \
    \  using dds = FieldModel<address, 9, 0x00000001>;\n    using dma = FieldModel<address,\
    \ 8, 0x00000001>;\n    using cont = FieldModel<address, 1, 0x00000001>;\n    using\
    \ adon = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Smpr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using smpx_x = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using smpr1 = Smpr1Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Smpr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using smpx_x = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using smpr2 = Smpr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset1 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr1 = Jofr1Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset2 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr2 = Jofr2Reg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr3Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset3 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr3 = Jofr3Reg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr4Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset4 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr4 = Jofr4Reg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class HtrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ht = FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using\
    \ htr = HtrReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class LtrReg: public RegisterModel<address>\n  {\n  public:\n    using lt =\
    \ FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using ltr = LtrReg<BaseAddress\
    \ + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n  class Sqr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using l = FieldModel<address, 20,\
    \ 0x0000000F>;\n    using sq16 = FieldModel<address, 15, 0x0000001F>;\n    using\
    \ sq15 = FieldModel<address, 10, 0x0000001F>;\n    using sq14 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq13 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr1 = Sqr1Reg<BaseAddress + 0x002C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sqr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sq12 = FieldModel<address, 25, 0x0000001F>;\n    using sq11 = FieldModel<address,\
    \ 20, 0x0000001F>;\n    using sq10 = FieldModel<address, 15, 0x0000001F>;\n  \
    \  using sq9 = FieldModel<address, 10, 0x0000001F>;\n    using sq8 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq7 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr2 = Sqr2Reg<BaseAddress + 0x0030>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sqr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sq6 = FieldModel<address, 25, 0x0000001F>;\n    using sq5 = FieldModel<address,\
    \ 20, 0x0000001F>;\n    using sq4 = FieldModel<address, 15, 0x0000001F>;\n   \
    \ using sq3 = FieldModel<address, 10, 0x0000001F>;\n    using sq2 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq1 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr3 = Sqr3Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class JsqrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using jl = FieldModel<address, 20, 0x00000003>;\n    using jsq4 = FieldModel<address,\
    \ 15, 0x0000001F>;\n    using jsq3 = FieldModel<address, 10, 0x0000001F>;\n  \
    \  using jsq2 = FieldModel<address, 5, 0x0000001F>;\n    using jsq1 = FieldModel<address,\
    \ 0, 0x0000001F>;\n  };\n\npublic:\n  using jsqr = JsqrReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Jdr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using jdata = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using jdr1 = Jdr1Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jdr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using jdata = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ jdr2 = Jdr2Reg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Jdr3Reg: public RegisterModel<address>\n  {\n  public:\n    using jdata\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using jdr3 = Jdr3Reg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class Jdr4Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using jdata = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using jdr4 = Jdr4Reg<BaseAddress + 0x0048>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x004C>;\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class SmprxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using smpx_x = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using smprx = SmprxBankReg<BaseAddress + 0x000C,\
    \ 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class JdrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using jdata = FieldModel<address, 0, 0x0000FFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using jdrx = JdrxBankReg<BaseAddress + 0x003C, 0x0004>;\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_ADC2_H */\n"
  name: ADC2
- content: "#ifndef DRAL_STM32F446_ADC3_H\n#define DRAL_STM32F446_ADC3_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass adc3\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40012200;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ovr = FieldModel<address, 5, 0x00000001>;\n    using strt = FieldModel<address,\
    \ 4, 0x00000001>;\n    using jstrt = FieldModel<address, 3, 0x00000001>;\n   \
    \ using jeoc = FieldModel<address, 2, 0x00000001>;\n    using eoc = FieldModel<address,\
    \ 1, 0x00000001>;\n    using awd = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ovrie = FieldModel<address, 26, 0x00000001>;\n    using res = FieldModel<address,\
    \ 24, 0x00000003>;\n    using awden = FieldModel<address, 23, 0x00000001>;\n \
    \   using jawden = FieldModel<address, 22, 0x00000001>;\n    using discnum = FieldModel<address,\
    \ 13, 0x00000007>;\n    using jdiscen = FieldModel<address, 12, 0x00000001>;\n\
    \    using discen = FieldModel<address, 11, 0x00000001>;\n    using jauto = FieldModel<address,\
    \ 10, 0x00000001>;\n    using awdsgl = FieldModel<address, 9, 0x00000001>;\n \
    \   using scan = FieldModel<address, 8, 0x00000001>;\n    using jeocie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using awdie = FieldModel<address, 6, 0x00000001>;\n   \
    \ using eocie = FieldModel<address, 5, 0x00000001>;\n    using awdch = FieldModel<address,\
    \ 0, 0x0000001F>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using swstart = FieldModel<address, 30, 0x00000001>;\n  \
    \  using exten = FieldModel<address, 28, 0x00000003>;\n    using extsel = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using jswstart = FieldModel<address, 22, 0x00000001>;\n\
    \    using jexten = FieldModel<address, 20, 0x00000003>;\n    using jextsel =\
    \ FieldModel<address, 16, 0x0000000F>;\n    using align = FieldModel<address,\
    \ 11, 0x00000001>;\n    using eocs = FieldModel<address, 10, 0x00000001>;\n  \
    \  using dds = FieldModel<address, 9, 0x00000001>;\n    using dma = FieldModel<address,\
    \ 8, 0x00000001>;\n    using cont = FieldModel<address, 1, 0x00000001>;\n    using\
    \ adon = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Smpr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using smpx_x = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using smpr1 = Smpr1Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Smpr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using smpx_x = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using smpr2 = Smpr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset1 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr1 = Jofr1Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset2 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr2 = Jofr2Reg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr3Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset3 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr3 = Jofr3Reg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jofr4Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using joffset4 = FieldModel<address, 0, 0x00000FFF>;\n  };\n\n\
    public:\n  using jofr4 = Jofr4Reg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class HtrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ht = FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using\
    \ htr = HtrReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class LtrReg: public RegisterModel<address>\n  {\n  public:\n    using lt =\
    \ FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using ltr = LtrReg<BaseAddress\
    \ + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n  class Sqr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using l = FieldModel<address, 20,\
    \ 0x0000000F>;\n    using sq16 = FieldModel<address, 15, 0x0000001F>;\n    using\
    \ sq15 = FieldModel<address, 10, 0x0000001F>;\n    using sq14 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq13 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr1 = Sqr1Reg<BaseAddress + 0x002C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sqr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sq12 = FieldModel<address, 25, 0x0000001F>;\n    using sq11 = FieldModel<address,\
    \ 20, 0x0000001F>;\n    using sq10 = FieldModel<address, 15, 0x0000001F>;\n  \
    \  using sq9 = FieldModel<address, 10, 0x0000001F>;\n    using sq8 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq7 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr2 = Sqr2Reg<BaseAddress + 0x0030>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Sqr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sq6 = FieldModel<address, 25, 0x0000001F>;\n    using sq5 = FieldModel<address,\
    \ 20, 0x0000001F>;\n    using sq4 = FieldModel<address, 15, 0x0000001F>;\n   \
    \ using sq3 = FieldModel<address, 10, 0x0000001F>;\n    using sq2 = FieldModel<address,\
    \ 5, 0x0000001F>;\n    using sq1 = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using sqr3 = Sqr3Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class JsqrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using jl = FieldModel<address, 20, 0x00000003>;\n    using jsq4 = FieldModel<address,\
    \ 15, 0x0000001F>;\n    using jsq3 = FieldModel<address, 10, 0x0000001F>;\n  \
    \  using jsq2 = FieldModel<address, 5, 0x0000001F>;\n    using jsq1 = FieldModel<address,\
    \ 0, 0x0000001F>;\n  };\n\npublic:\n  using jsqr = JsqrReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Jdr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using jdata = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using jdr1 = Jdr1Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Jdr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using jdata = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ jdr2 = Jdr2Reg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Jdr3Reg: public RegisterModel<address>\n  {\n  public:\n    using jdata\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using jdr3 = Jdr3Reg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class Jdr4Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using jdata = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using jdr4 = Jdr4Reg<BaseAddress + 0x0048>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x004C>;\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class SmprxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using smpx_x = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using smprx = SmprxBankReg<BaseAddress + 0x000C,\
    \ 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class JdrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using jdata = FieldModel<address, 0, 0x0000FFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using jdrx = JdrxBankReg<BaseAddress + 0x003C, 0x0004>;\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_ADC3_H */\n"
  name: ADC3
- content: "#ifndef DRAL_STM32F446_USART6_H\n#define DRAL_STM32F446_USART6_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass usart6\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40011400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cts = FieldModel<address, 9, 0x00000001>;\n    using lbd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using txe = FieldModel<address, 7, 0x00000001>;\n    using\
    \ tc = FieldModel<address, 6, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 5, 0x00000001>;\n    using idle = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ore = FieldModel<address, 3, 0x00000001>;\n    using nf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fe = FieldModel<address, 1, 0x00000001>;\n    using\
    \ pe = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class DrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dr = FieldModel<address, 0,\
    \ 0x000001FF>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0004>;\n\n\
    private:\n  template <uint32_t address>\n  class BrrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using div_mantissa = FieldModel<address, 4, 0x00000FFF>;\n\
    \    using div_fraction = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n\
    \  using brr = BrrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using over8 = FieldModel<address, 15, 0x00000001>;\n    using ue = FieldModel<address,\
    \ 13, 0x00000001>;\n    using m = FieldModel<address, 12, 0x00000001>;\n    using\
    \ wake = FieldModel<address, 11, 0x00000001>;\n    using pce = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ps = FieldModel<address, 9, 0x00000001>;\n    using\
    \ peie = FieldModel<address, 8, 0x00000001>;\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tcie = FieldModel<address, 6, 0x00000001>;\n    using\
    \ rxneie = FieldModel<address, 5, 0x00000001>;\n    using idleie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using te = FieldModel<address, 3, 0x00000001>;\n    using\
    \ re = FieldModel<address, 2, 0x00000001>;\n    using rwu = FieldModel<address,\
    \ 1, 0x00000001>;\n    using sbk = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using linen = FieldModel<address, 14, 0x00000001>;\n    using stop = FieldModel<address,\
    \ 12, 0x00000003>;\n    using clken = FieldModel<address, 11, 0x00000001>;\n \
    \   using cpol = FieldModel<address, 10, 0x00000001>;\n    using cpha = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lbcl = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lbdie = FieldModel<address, 6, 0x00000001>;\n    using lbdl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using add = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using onebit = FieldModel<address, 11, 0x00000001>;\n    using ctsie = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ctse = FieldModel<address, 9, 0x00000001>;\n   \
    \ using rtse = FieldModel<address, 8, 0x00000001>;\n    using dmat = FieldModel<address,\
    \ 7, 0x00000001>;\n    using dmar = FieldModel<address, 6, 0x00000001>;\n    using\
    \ scen = FieldModel<address, 5, 0x00000001>;\n    using nack = FieldModel<address,\
    \ 4, 0x00000001>;\n    using hdsel = FieldModel<address, 3, 0x00000001>;\n   \
    \ using irlp = FieldModel<address, 2, 0x00000001>;\n    using iren = FieldModel<address,\
    \ 1, 0x00000001>;\n    using eie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr3 = Cr3Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class GtprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using gt = FieldModel<address, 8, 0x000000FF>;\n    using psc = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using gtpr = GtprReg<BaseAddress + 0x0018>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_USART6_H */\n"
  name: USART6
- content: "#ifndef DRAL_STM32F446_USART1_H\n#define DRAL_STM32F446_USART1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass usart1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40011000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cts = FieldModel<address, 9, 0x00000001>;\n    using lbd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using txe = FieldModel<address, 7, 0x00000001>;\n    using\
    \ tc = FieldModel<address, 6, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 5, 0x00000001>;\n    using idle = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ore = FieldModel<address, 3, 0x00000001>;\n    using nf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fe = FieldModel<address, 1, 0x00000001>;\n    using\
    \ pe = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class DrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dr = FieldModel<address, 0,\
    \ 0x000001FF>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0004>;\n\n\
    private:\n  template <uint32_t address>\n  class BrrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using div_mantissa = FieldModel<address, 4, 0x00000FFF>;\n\
    \    using div_fraction = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n\
    \  using brr = BrrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using over8 = FieldModel<address, 15, 0x00000001>;\n    using ue = FieldModel<address,\
    \ 13, 0x00000001>;\n    using m = FieldModel<address, 12, 0x00000001>;\n    using\
    \ wake = FieldModel<address, 11, 0x00000001>;\n    using pce = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ps = FieldModel<address, 9, 0x00000001>;\n    using\
    \ peie = FieldModel<address, 8, 0x00000001>;\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tcie = FieldModel<address, 6, 0x00000001>;\n    using\
    \ rxneie = FieldModel<address, 5, 0x00000001>;\n    using idleie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using te = FieldModel<address, 3, 0x00000001>;\n    using\
    \ re = FieldModel<address, 2, 0x00000001>;\n    using rwu = FieldModel<address,\
    \ 1, 0x00000001>;\n    using sbk = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using linen = FieldModel<address, 14, 0x00000001>;\n    using stop = FieldModel<address,\
    \ 12, 0x00000003>;\n    using clken = FieldModel<address, 11, 0x00000001>;\n \
    \   using cpol = FieldModel<address, 10, 0x00000001>;\n    using cpha = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lbcl = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lbdie = FieldModel<address, 6, 0x00000001>;\n    using lbdl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using add = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using onebit = FieldModel<address, 11, 0x00000001>;\n    using ctsie = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ctse = FieldModel<address, 9, 0x00000001>;\n   \
    \ using rtse = FieldModel<address, 8, 0x00000001>;\n    using dmat = FieldModel<address,\
    \ 7, 0x00000001>;\n    using dmar = FieldModel<address, 6, 0x00000001>;\n    using\
    \ scen = FieldModel<address, 5, 0x00000001>;\n    using nack = FieldModel<address,\
    \ 4, 0x00000001>;\n    using hdsel = FieldModel<address, 3, 0x00000001>;\n   \
    \ using irlp = FieldModel<address, 2, 0x00000001>;\n    using iren = FieldModel<address,\
    \ 1, 0x00000001>;\n    using eie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr3 = Cr3Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class GtprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using gt = FieldModel<address, 8, 0x000000FF>;\n    using psc = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using gtpr = GtprReg<BaseAddress + 0x0018>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_USART1_H */\n"
  name: USART1
- content: "#ifndef DRAL_STM32F446_USART2_H\n#define DRAL_STM32F446_USART2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass usart2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40004400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cts = FieldModel<address, 9, 0x00000001>;\n    using lbd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using txe = FieldModel<address, 7, 0x00000001>;\n    using\
    \ tc = FieldModel<address, 6, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 5, 0x00000001>;\n    using idle = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ore = FieldModel<address, 3, 0x00000001>;\n    using nf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fe = FieldModel<address, 1, 0x00000001>;\n    using\
    \ pe = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class DrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dr = FieldModel<address, 0,\
    \ 0x000001FF>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0004>;\n\n\
    private:\n  template <uint32_t address>\n  class BrrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using div_mantissa = FieldModel<address, 4, 0x00000FFF>;\n\
    \    using div_fraction = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n\
    \  using brr = BrrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using over8 = FieldModel<address, 15, 0x00000001>;\n    using ue = FieldModel<address,\
    \ 13, 0x00000001>;\n    using m = FieldModel<address, 12, 0x00000001>;\n    using\
    \ wake = FieldModel<address, 11, 0x00000001>;\n    using pce = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ps = FieldModel<address, 9, 0x00000001>;\n    using\
    \ peie = FieldModel<address, 8, 0x00000001>;\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tcie = FieldModel<address, 6, 0x00000001>;\n    using\
    \ rxneie = FieldModel<address, 5, 0x00000001>;\n    using idleie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using te = FieldModel<address, 3, 0x00000001>;\n    using\
    \ re = FieldModel<address, 2, 0x00000001>;\n    using rwu = FieldModel<address,\
    \ 1, 0x00000001>;\n    using sbk = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using linen = FieldModel<address, 14, 0x00000001>;\n    using stop = FieldModel<address,\
    \ 12, 0x00000003>;\n    using clken = FieldModel<address, 11, 0x00000001>;\n \
    \   using cpol = FieldModel<address, 10, 0x00000001>;\n    using cpha = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lbcl = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lbdie = FieldModel<address, 6, 0x00000001>;\n    using lbdl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using add = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using onebit = FieldModel<address, 11, 0x00000001>;\n    using ctsie = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ctse = FieldModel<address, 9, 0x00000001>;\n   \
    \ using rtse = FieldModel<address, 8, 0x00000001>;\n    using dmat = FieldModel<address,\
    \ 7, 0x00000001>;\n    using dmar = FieldModel<address, 6, 0x00000001>;\n    using\
    \ scen = FieldModel<address, 5, 0x00000001>;\n    using nack = FieldModel<address,\
    \ 4, 0x00000001>;\n    using hdsel = FieldModel<address, 3, 0x00000001>;\n   \
    \ using irlp = FieldModel<address, 2, 0x00000001>;\n    using iren = FieldModel<address,\
    \ 1, 0x00000001>;\n    using eie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr3 = Cr3Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class GtprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using gt = FieldModel<address, 8, 0x000000FF>;\n    using psc = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using gtpr = GtprReg<BaseAddress + 0x0018>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_USART2_H */\n"
  name: USART2
- content: "#ifndef DRAL_STM32F446_USART3_H\n#define DRAL_STM32F446_USART3_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass usart3\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40004800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cts = FieldModel<address, 9, 0x00000001>;\n    using lbd = FieldModel<address,\
    \ 8, 0x00000001>;\n    using txe = FieldModel<address, 7, 0x00000001>;\n    using\
    \ tc = FieldModel<address, 6, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 5, 0x00000001>;\n    using idle = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ore = FieldModel<address, 3, 0x00000001>;\n    using nf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fe = FieldModel<address, 1, 0x00000001>;\n    using\
    \ pe = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class DrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dr = FieldModel<address, 0,\
    \ 0x000001FF>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0004>;\n\n\
    private:\n  template <uint32_t address>\n  class BrrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using div_mantissa = FieldModel<address, 4, 0x00000FFF>;\n\
    \    using div_fraction = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n\
    \  using brr = BrrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using over8 = FieldModel<address, 15, 0x00000001>;\n    using ue = FieldModel<address,\
    \ 13, 0x00000001>;\n    using m = FieldModel<address, 12, 0x00000001>;\n    using\
    \ wake = FieldModel<address, 11, 0x00000001>;\n    using pce = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ps = FieldModel<address, 9, 0x00000001>;\n    using\
    \ peie = FieldModel<address, 8, 0x00000001>;\n    using txeie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tcie = FieldModel<address, 6, 0x00000001>;\n    using\
    \ rxneie = FieldModel<address, 5, 0x00000001>;\n    using idleie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using te = FieldModel<address, 3, 0x00000001>;\n    using\
    \ re = FieldModel<address, 2, 0x00000001>;\n    using rwu = FieldModel<address,\
    \ 1, 0x00000001>;\n    using sbk = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using linen = FieldModel<address, 14, 0x00000001>;\n    using stop = FieldModel<address,\
    \ 12, 0x00000003>;\n    using clken = FieldModel<address, 11, 0x00000001>;\n \
    \   using cpol = FieldModel<address, 10, 0x00000001>;\n    using cpha = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lbcl = FieldModel<address, 8, 0x00000001>;\n    using\
    \ lbdie = FieldModel<address, 6, 0x00000001>;\n    using lbdl = FieldModel<address,\
    \ 5, 0x00000001>;\n    using add = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using onebit = FieldModel<address, 11, 0x00000001>;\n    using ctsie = FieldModel<address,\
    \ 10, 0x00000001>;\n    using ctse = FieldModel<address, 9, 0x00000001>;\n   \
    \ using rtse = FieldModel<address, 8, 0x00000001>;\n    using dmat = FieldModel<address,\
    \ 7, 0x00000001>;\n    using dmar = FieldModel<address, 6, 0x00000001>;\n    using\
    \ scen = FieldModel<address, 5, 0x00000001>;\n    using nack = FieldModel<address,\
    \ 4, 0x00000001>;\n    using hdsel = FieldModel<address, 3, 0x00000001>;\n   \
    \ using irlp = FieldModel<address, 2, 0x00000001>;\n    using iren = FieldModel<address,\
    \ 1, 0x00000001>;\n    using eie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr3 = Cr3Reg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class GtprReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using gt = FieldModel<address, 8, 0x000000FF>;\n    using psc = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using gtpr = GtprReg<BaseAddress + 0x0018>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_USART3_H */\n"
  name: USART3
- content: "#ifndef DRAL_STM32F446_DAC_H\n#define DRAL_STM32F446_DAC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass dac\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40007400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dmaudrie2 = FieldModel<address, 29, 0x00000001>;\n    using dmaen2\
    \ = FieldModel<address, 28, 0x00000001>;\n    using mamp2 = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using wave2 = FieldModel<address, 22, 0x00000003>;\n \
    \   using tsel2 = FieldModel<address, 19, 0x00000007>;\n    using ten2 = FieldModel<address,\
    \ 18, 0x00000001>;\n    using boff2 = FieldModel<address, 17, 0x00000001>;\n \
    \   using en2 = FieldModel<address, 16, 0x00000001>;\n    using dmaudrie1 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using dmaen1 = FieldModel<address, 12, 0x00000001>;\n\
    \    using mamp1 = FieldModel<address, 8, 0x0000000F>;\n    using wave1 = FieldModel<address,\
    \ 6, 0x00000003>;\n    using tsel1 = FieldModel<address, 3, 0x00000007>;\n   \
    \ using ten1 = FieldModel<address, 2, 0x00000001>;\n    using boff1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using en1 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class SwtrigrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using swtrig2 = FieldModel<address, 1, 0x00000001>;\n    using swtrig1 =\
    \ FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using swtrigr = SwtrigrReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class Dhr12r1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dacc1dhr = FieldModel<address,\
    \ 0, 0x00000FFF>;\n  };\n\npublic:\n  using dhr12r1 = Dhr12r1Reg<BaseAddress +\
    \ 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Dhr12l1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dacc1dhr = FieldModel<address,\
    \ 4, 0x00000FFF>;\n  };\n\npublic:\n  using dhr12l1 = Dhr12l1Reg<BaseAddress +\
    \ 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class Dhr8r1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dacc1dhr = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using dhr8r1 = Dhr8r1Reg<BaseAddress + 0x0010>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Dhr12r2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dacc2dhr = FieldModel<address, 0, 0x00000FFF>;\n  };\n\
    \npublic:\n  using dhr12r2 = Dhr12r2Reg<BaseAddress + 0x0014>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Dhr12l2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dacc2dhr = FieldModel<address, 4, 0x00000FFF>;\n  };\n\
    \npublic:\n  using dhr12l2 = Dhr12l2Reg<BaseAddress + 0x0018>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Dhr8r2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dacc2dhr = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using dhr8r2 = Dhr8r2Reg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Dhr12rdReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using dacc2dhr = FieldModel<address, 16, 0x00000FFF>;\n    using\
    \ dacc1dhr = FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using dhr12rd\
    \ = Dhr12rdReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Dhr12ldReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ dacc2dhr = FieldModel<address, 20, 0x00000FFF>;\n    using dacc1dhr = FieldModel<address,\
    \ 4, 0x00000FFF>;\n  };\n\npublic:\n  using dhr12ld = Dhr12ldReg<BaseAddress +\
    \ 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class Dhr8rdReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dacc2dhr = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using dacc1dhr = FieldModel<address, 0, 0x000000FF>;\n\
    \  };\n\npublic:\n  using dhr8rd = Dhr8rdReg<BaseAddress + 0x0028>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Dor1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dacc1dor = FieldModel<address, 0, 0x00000FFF>;\n  };\n\
    \npublic:\n  using dor1 = Dor1Reg<BaseAddress + 0x002C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Dor2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dacc2dor = FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n \
    \ using dor2 = Dor2Reg<BaseAddress + 0x0030>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n   \
    \ using dmaudr2 = FieldModel<address, 29, 0x00000001>;\n    using dmaudr1 = FieldModel<address,\
    \ 13, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress + 0x0034>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_DAC_H */\n"
  name: DAC
- content: "#ifndef DRAL_STM32F446_FMPI2C_H\n#define DRAL_STM32F446_FMPI2C_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass fmpi2c\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40006000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using pecen = FieldModel<address, 23, 0x00000001>;\n    using alerten = FieldModel<address,\
    \ 22, 0x00000001>;\n    using smbden = FieldModel<address, 21, 0x00000001>;\n\
    \    using smbhen = FieldModel<address, 20, 0x00000001>;\n    using gcen = FieldModel<address,\
    \ 19, 0x00000001>;\n    using nostretch = FieldModel<address, 17, 0x00000001>;\n\
    \    using sbc = FieldModel<address, 16, 0x00000001>;\n    using rxdmaen = FieldModel<address,\
    \ 15, 0x00000001>;\n    using txdmaen = FieldModel<address, 14, 0x00000001>;\n\
    \    using anfoff = FieldModel<address, 12, 0x00000001>;\n    using dnf = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using errie = FieldModel<address, 7, 0x00000001>;\n   \
    \ using tcie = FieldModel<address, 6, 0x00000001>;\n    using stopie = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nackie = FieldModel<address, 4, 0x00000001>;\n  \
    \  using addrie = FieldModel<address, 3, 0x00000001>;\n    using rxie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using txie = FieldModel<address, 1, 0x00000001>;\n    using\
    \ pe = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using sadd0 = FieldModel<address,\
    \ 0, 0x00000001>;\n    using sadd7_1 = FieldModel<address, 1, 0x0000007F>;\n \
    \   using sadd9_8 = FieldModel<address, 8, 0x00000003>;\n    using rd_wrn = FieldModel<address,\
    \ 10, 0x00000001>;\n    using add10 = FieldModel<address, 11, 0x00000001>;\n \
    \   using head10r = FieldModel<address, 12, 0x00000001>;\n    using start = FieldModel<address,\
    \ 13, 0x00000001>;\n    using stop = FieldModel<address, 14, 0x00000001>;\n  \
    \  using nack = FieldModel<address, 15, 0x00000001>;\n    using nbytes = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using reload = FieldModel<address, 24, 0x00000001>;\n\
    \    using autoend = FieldModel<address, 25, 0x00000001>;\n    using pecbyte =\
    \ FieldModel<address, 26, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class Oar1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using oa1_0 = FieldModel<address,\
    \ 0, 0x00000001>;\n    using oa1_7_1 = FieldModel<address, 1, 0x0000007F>;\n \
    \   using oa1_9_8 = FieldModel<address, 8, 0x00000003>;\n    using oa1mode = FieldModel<address,\
    \ 10, 0x00000001>;\n    using oa1en = FieldModel<address, 15, 0x00000001>;\n \
    \ };\n\npublic:\n  using oar1 = Oar1Reg<BaseAddress + 0x0008>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Oar2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oa2 = FieldModel<address, 1, 0x0000007F>;\n    using\
    \ oa2msk = FieldModel<address, 8, 0x00000007>;\n    using oa2en = FieldModel<address,\
    \ 15, 0x00000001>;\n  };\n\npublic:\n  using oar2 = Oar2Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class TimingrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using scll = FieldModel<address, 0, 0x000000FF>;\n    using\
    \ sclh = FieldModel<address, 8, 0x000000FF>;\n    using sdadel = FieldModel<address,\
    \ 16, 0x0000000F>;\n    using scldel = FieldModel<address, 20, 0x0000000F>;\n\
    \    using presc = FieldModel<address, 28, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ timingr = TimingrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class TimeoutrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using timeouta = FieldModel<address, 0, 0x00000FFF>;\n    using tidle = FieldModel<address,\
    \ 12, 0x00000001>;\n    using timouten = FieldModel<address, 15, 0x00000001>;\n\
    \    using timeoutb = FieldModel<address, 16, 0x00000FFF>;\n    using texten =\
    \ FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using timeoutr = TimeoutrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class IsrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txe = FieldModel<address,\
    \ 0, 0x00000001>;\n    using txis = FieldModel<address, 1, 0x00000001>;\n    using\
    \ rxne = FieldModel<address, 2, 0x00000001>;\n    using addr = FieldModel<address,\
    \ 3, 0x00000001>;\n    using nackf = FieldModel<address, 4, 0x00000001>;\n   \
    \ using stopf = FieldModel<address, 5, 0x00000001>;\n    using tc = FieldModel<address,\
    \ 6, 0x00000001>;\n    using tcr = FieldModel<address, 7, 0x00000001>;\n    using\
    \ berr = FieldModel<address, 8, 0x00000001>;\n    using arlo = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ovr = FieldModel<address, 10, 0x00000001>;\n    using\
    \ pecerr = FieldModel<address, 11, 0x00000001>;\n    using timeout = FieldModel<address,\
    \ 12, 0x00000001>;\n    using alert = FieldModel<address, 13, 0x00000001>;\n \
    \   using busy = FieldModel<address, 15, 0x00000001>;\n    using dir = FieldModel<address,\
    \ 16, 0x00000001>;\n    using addcode = FieldModel<address, 17, 0x0000007F>;\n\
    \  };\n\npublic:\n  using isr = IsrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class IcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using addrcf = FieldModel<address, 3, 0x00000001>;\n    using nackcf = FieldModel<address,\
    \ 4, 0x00000001>;\n    using stopcf = FieldModel<address, 5, 0x00000001>;\n  \
    \  using berrcf = FieldModel<address, 8, 0x00000001>;\n    using arlocf = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ovrcf = FieldModel<address, 10, 0x00000001>;\n  \
    \  using peccf = FieldModel<address, 11, 0x00000001>;\n    using timoutcf = FieldModel<address,\
    \ 12, 0x00000001>;\n    using alertcf = FieldModel<address, 13, 0x00000001>;\n\
    \  };\n\npublic:\n  using icr = IcrReg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class PecrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using pec = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ pecr = PecrReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RxdrReg: public RegisterModel<address>\n  {\n  public:\n    using rxdata\
    \ = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using rxdr = RxdrReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class TxdrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txdata = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using txdr = TxdrReg<BaseAddress + 0x0028>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_FMPI2C_H */\n"
  name: FMPI2C
- content: "#ifndef DRAL_STM32F446_I2C3_H\n#define DRAL_STM32F446_I2C3_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass i2c3\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40005C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using swrst = FieldModel<address, 15, 0x00000001>;\n    using alert = FieldModel<address,\
    \ 13, 0x00000001>;\n    using pec = FieldModel<address, 12, 0x00000001>;\n   \
    \ using pos = FieldModel<address, 11, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 10, 0x00000001>;\n    using stop = FieldModel<address, 9, 0x00000001>;\n   \
    \ using start = FieldModel<address, 8, 0x00000001>;\n    using nostretch = FieldModel<address,\
    \ 7, 0x00000001>;\n    using engc = FieldModel<address, 6, 0x00000001>;\n    using\
    \ enpec = FieldModel<address, 5, 0x00000001>;\n    using enarp = FieldModel<address,\
    \ 4, 0x00000001>;\n    using smbtype = FieldModel<address, 3, 0x00000001>;\n \
    \   using smbus = FieldModel<address, 1, 0x00000001>;\n    using pe = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using last = FieldModel<address, 12, 0x00000001>;\n    using\
    \ dmaen = FieldModel<address, 11, 0x00000001>;\n    using itbufen = FieldModel<address,\
    \ 10, 0x00000001>;\n    using itevten = FieldModel<address, 9, 0x00000001>;\n\
    \    using iterren = FieldModel<address, 8, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 0, 0x0000003F>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Oar1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using addmode = FieldModel<address, 15, 0x00000001>;\n  \
    \  using add10 = FieldModel<address, 8, 0x00000003>;\n    using add7 = FieldModel<address,\
    \ 1, 0x0000007F>;\n    using add0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using oar1 = Oar1Reg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Oar2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using add2 = FieldModel<address, 1, 0x0000007F>;\n    using endual = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using oar2 = Oar2Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x000000FF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Sr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using smbalert = FieldModel<address, 15, 0x00000001>;\n    using timeout =\
    \ FieldModel<address, 14, 0x00000001>;\n    using pecerr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ovr = FieldModel<address, 11, 0x00000001>;\n   \
    \ using af = FieldModel<address, 10, 0x00000001>;\n    using arlo = FieldModel<address,\
    \ 9, 0x00000001>;\n    using berr = FieldModel<address, 8, 0x00000001>;\n    using\
    \ txe = FieldModel<address, 7, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 6, 0x00000001>;\n    using stopf = FieldModel<address, 4, 0x00000001>;\n   \
    \ using add10 = FieldModel<address, 3, 0x00000001>;\n    using btf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using addr = FieldModel<address, 1, 0x00000001>;\n    using\
    \ sb = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr1 = Sr1Reg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class Sr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pec = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using dualf = FieldModel<address, 7, 0x00000001>;\n   \
    \ using smbhost = FieldModel<address, 6, 0x00000001>;\n    using smbdefault =\
    \ FieldModel<address, 5, 0x00000001>;\n    using gencall = FieldModel<address,\
    \ 4, 0x00000001>;\n    using tra = FieldModel<address, 2, 0x00000001>;\n    using\
    \ busy = FieldModel<address, 1, 0x00000001>;\n    using msl = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr2 = Sr2Reg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using f_s = FieldModel<address, 15, 0x00000001>;\n    using\
    \ duty = FieldModel<address, 14, 0x00000001>;\n    using ccr = FieldModel<address,\
    \ 0, 0x00000FFF>;\n  };\n\npublic:\n  using ccr = CcrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class TriseReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using trise = FieldModel<address, 0, 0x0000003F>;\n  };\n\
    \npublic:\n  using trise = TriseReg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class FltrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dnf = FieldModel<address, 0, 0x0000000F>;\n    using anoff = FieldModel<address,\
    \ 4, 0x00000001>;\n  };\n\npublic:\n  using fltr = FltrReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_I2C3_H */\n"
  name: I2C3
- content: "#ifndef DRAL_STM32F446_I2C2_H\n#define DRAL_STM32F446_I2C2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass i2c2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40005800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using swrst = FieldModel<address, 15, 0x00000001>;\n    using alert = FieldModel<address,\
    \ 13, 0x00000001>;\n    using pec = FieldModel<address, 12, 0x00000001>;\n   \
    \ using pos = FieldModel<address, 11, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 10, 0x00000001>;\n    using stop = FieldModel<address, 9, 0x00000001>;\n   \
    \ using start = FieldModel<address, 8, 0x00000001>;\n    using nostretch = FieldModel<address,\
    \ 7, 0x00000001>;\n    using engc = FieldModel<address, 6, 0x00000001>;\n    using\
    \ enpec = FieldModel<address, 5, 0x00000001>;\n    using enarp = FieldModel<address,\
    \ 4, 0x00000001>;\n    using smbtype = FieldModel<address, 3, 0x00000001>;\n \
    \   using smbus = FieldModel<address, 1, 0x00000001>;\n    using pe = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using last = FieldModel<address, 12, 0x00000001>;\n    using\
    \ dmaen = FieldModel<address, 11, 0x00000001>;\n    using itbufen = FieldModel<address,\
    \ 10, 0x00000001>;\n    using itevten = FieldModel<address, 9, 0x00000001>;\n\
    \    using iterren = FieldModel<address, 8, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 0, 0x0000003F>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Oar1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using addmode = FieldModel<address, 15, 0x00000001>;\n  \
    \  using add10 = FieldModel<address, 8, 0x00000003>;\n    using add7 = FieldModel<address,\
    \ 1, 0x0000007F>;\n    using add0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using oar1 = Oar1Reg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Oar2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using add2 = FieldModel<address, 1, 0x0000007F>;\n    using endual = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using oar2 = Oar2Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x000000FF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Sr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using smbalert = FieldModel<address, 15, 0x00000001>;\n    using timeout =\
    \ FieldModel<address, 14, 0x00000001>;\n    using pecerr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ovr = FieldModel<address, 11, 0x00000001>;\n   \
    \ using af = FieldModel<address, 10, 0x00000001>;\n    using arlo = FieldModel<address,\
    \ 9, 0x00000001>;\n    using berr = FieldModel<address, 8, 0x00000001>;\n    using\
    \ txe = FieldModel<address, 7, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 6, 0x00000001>;\n    using stopf = FieldModel<address, 4, 0x00000001>;\n   \
    \ using add10 = FieldModel<address, 3, 0x00000001>;\n    using btf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using addr = FieldModel<address, 1, 0x00000001>;\n    using\
    \ sb = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr1 = Sr1Reg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class Sr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pec = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using dualf = FieldModel<address, 7, 0x00000001>;\n   \
    \ using smbhost = FieldModel<address, 6, 0x00000001>;\n    using smbdefault =\
    \ FieldModel<address, 5, 0x00000001>;\n    using gencall = FieldModel<address,\
    \ 4, 0x00000001>;\n    using tra = FieldModel<address, 2, 0x00000001>;\n    using\
    \ busy = FieldModel<address, 1, 0x00000001>;\n    using msl = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr2 = Sr2Reg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using f_s = FieldModel<address, 15, 0x00000001>;\n    using\
    \ duty = FieldModel<address, 14, 0x00000001>;\n    using ccr = FieldModel<address,\
    \ 0, 0x00000FFF>;\n  };\n\npublic:\n  using ccr = CcrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class TriseReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using trise = FieldModel<address, 0, 0x0000003F>;\n  };\n\
    \npublic:\n  using trise = TriseReg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class FltrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dnf = FieldModel<address, 0, 0x0000000F>;\n    using anoff = FieldModel<address,\
    \ 4, 0x00000001>;\n  };\n\npublic:\n  using fltr = FltrReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_I2C2_H */\n"
  name: I2C2
- content: "#ifndef DRAL_STM32F446_I2C1_H\n#define DRAL_STM32F446_I2C1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass i2c1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40005400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using swrst = FieldModel<address, 15, 0x00000001>;\n    using alert = FieldModel<address,\
    \ 13, 0x00000001>;\n    using pec = FieldModel<address, 12, 0x00000001>;\n   \
    \ using pos = FieldModel<address, 11, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 10, 0x00000001>;\n    using stop = FieldModel<address, 9, 0x00000001>;\n   \
    \ using start = FieldModel<address, 8, 0x00000001>;\n    using nostretch = FieldModel<address,\
    \ 7, 0x00000001>;\n    using engc = FieldModel<address, 6, 0x00000001>;\n    using\
    \ enpec = FieldModel<address, 5, 0x00000001>;\n    using enarp = FieldModel<address,\
    \ 4, 0x00000001>;\n    using smbtype = FieldModel<address, 3, 0x00000001>;\n \
    \   using smbus = FieldModel<address, 1, 0x00000001>;\n    using pe = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using last = FieldModel<address, 12, 0x00000001>;\n    using\
    \ dmaen = FieldModel<address, 11, 0x00000001>;\n    using itbufen = FieldModel<address,\
    \ 10, 0x00000001>;\n    using itevten = FieldModel<address, 9, 0x00000001>;\n\
    \    using iterren = FieldModel<address, 8, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 0, 0x0000003F>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Oar1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using addmode = FieldModel<address, 15, 0x00000001>;\n  \
    \  using add10 = FieldModel<address, 8, 0x00000003>;\n    using add7 = FieldModel<address,\
    \ 1, 0x0000007F>;\n    using add0 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using oar1 = Oar1Reg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Oar2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using add2 = FieldModel<address, 1, 0x0000007F>;\n    using endual = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using oar2 = Oar2Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x000000FF>;\n  };\n\n\
    public:\n  using dr = DrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Sr1Reg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using smbalert = FieldModel<address, 15, 0x00000001>;\n    using timeout =\
    \ FieldModel<address, 14, 0x00000001>;\n    using pecerr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ovr = FieldModel<address, 11, 0x00000001>;\n   \
    \ using af = FieldModel<address, 10, 0x00000001>;\n    using arlo = FieldModel<address,\
    \ 9, 0x00000001>;\n    using berr = FieldModel<address, 8, 0x00000001>;\n    using\
    \ txe = FieldModel<address, 7, 0x00000001>;\n    using rxne = FieldModel<address,\
    \ 6, 0x00000001>;\n    using stopf = FieldModel<address, 4, 0x00000001>;\n   \
    \ using add10 = FieldModel<address, 3, 0x00000001>;\n    using btf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using addr = FieldModel<address, 1, 0x00000001>;\n    using\
    \ sb = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr1 = Sr1Reg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class Sr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using pec = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using dualf = FieldModel<address, 7, 0x00000001>;\n   \
    \ using smbhost = FieldModel<address, 6, 0x00000001>;\n    using smbdefault =\
    \ FieldModel<address, 5, 0x00000001>;\n    using gencall = FieldModel<address,\
    \ 4, 0x00000001>;\n    using tra = FieldModel<address, 2, 0x00000001>;\n    using\
    \ busy = FieldModel<address, 1, 0x00000001>;\n    using msl = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using sr2 = Sr2Reg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using f_s = FieldModel<address, 15, 0x00000001>;\n    using\
    \ duty = FieldModel<address, 14, 0x00000001>;\n    using ccr = FieldModel<address,\
    \ 0, 0x00000FFF>;\n  };\n\npublic:\n  using ccr = CcrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class TriseReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using trise = FieldModel<address, 0, 0x0000003F>;\n  };\n\
    \npublic:\n  using trise = TriseReg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class FltrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dnf = FieldModel<address, 0, 0x0000000F>;\n    using anoff = FieldModel<address,\
    \ 4, 0x00000001>;\n  };\n\npublic:\n  using fltr = FltrReg<BaseAddress + 0x0024>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_I2C1_H */\n"
  name: I2C1
- content: "#ifndef DRAL_STM32F446_IWDG_H\n#define DRAL_STM32F446_IWDG_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass iwdg\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40003000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class KrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using key = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ kr = KrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class PrReg: public RegisterModel<address>\n  {\n  public:\n    using pr =\
    \ FieldModel<address, 0, 0x00000007>;\n  };\n\npublic:\n  using pr = PrReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class RlrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using rl = FieldModel<address, 0,\
    \ 0x00000FFF>;\n  };\n\npublic:\n  using rlr = RlrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using rvu = FieldModel<address, 1, 0x00000001>;\n    using\
    \ pvu = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress\
    \ + 0x000C>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_IWDG_H */\n"
  name: IWDG
- content: "#ifndef DRAL_STM32F446_WWDG_H\n#define DRAL_STM32F446_WWDG_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass wwdg\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40002C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using wdga = FieldModel<address, 7, 0x00000001>;\n    using t = FieldModel<address,\
    \ 0, 0x0000007F>;\n  };\n\npublic:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CfrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ewi = FieldModel<address, 9, 0x00000001>;\n    using\
    \ wdgtb1 = FieldModel<address, 8, 0x00000001>;\n    using wdgtb0 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using w = FieldModel<address, 0, 0x0000007F>;\n  };\n\n\
    public:\n  using cfr = CfrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n   \
    \ using ewif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0008>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_WWDG_H\
    \ */\n"
  name: WWDG
- content: "#ifndef DRAL_STM32F446_RTC_H\n#define DRAL_STM32F446_RTC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass rtc\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40002800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class TrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using pm = FieldModel<address, 22, 0x00000001>;\n    using ht = FieldModel<address,\
    \ 20, 0x00000003>;\n    using hu = FieldModel<address, 16, 0x0000000F>;\n    using\
    \ mnt = FieldModel<address, 12, 0x00000007>;\n    using mnu = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using st = FieldModel<address, 4, 0x00000007>;\n    using\
    \ su = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using tr = TrReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class DrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using yt = FieldModel<address, 20,\
    \ 0x0000000F>;\n    using yu = FieldModel<address, 16, 0x0000000F>;\n    using\
    \ wdu = FieldModel<address, 13, 0x00000007>;\n    using mt = FieldModel<address,\
    \ 12, 0x00000001>;\n    using mu = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ dt = FieldModel<address, 4, 0x00000003>;\n    using du = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using coe = FieldModel<address, 23, 0x00000001>;\n    using\
    \ osel = FieldModel<address, 21, 0x00000003>;\n    using pol = FieldModel<address,\
    \ 20, 0x00000001>;\n    using bkp = FieldModel<address, 18, 0x00000001>;\n   \
    \ using sub1h = FieldModel<address, 17, 0x00000001>;\n    using add1h = FieldModel<address,\
    \ 16, 0x00000001>;\n    using tsie = FieldModel<address, 15, 0x00000001>;\n  \
    \  using wutie = FieldModel<address, 14, 0x00000001>;\n    using alrbie = FieldModel<address,\
    \ 13, 0x00000001>;\n    using alraie = FieldModel<address, 12, 0x00000001>;\n\
    \    using tse = FieldModel<address, 11, 0x00000001>;\n    using wute = FieldModel<address,\
    \ 10, 0x00000001>;\n    using alrbe = FieldModel<address, 9, 0x00000001>;\n  \
    \  using alrae = FieldModel<address, 8, 0x00000001>;\n    using dce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fmt = FieldModel<address, 6, 0x00000001>;\n    using\
    \ refckon = FieldModel<address, 4, 0x00000001>;\n    using tsedge = FieldModel<address,\
    \ 3, 0x00000001>;\n    using wcksel = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using cr = CrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class IsrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using alrawf = FieldModel<address, 0, 0x00000001>;\n    using alrbwf = FieldModel<address,\
    \ 1, 0x00000001>;\n    using wutwf = FieldModel<address, 2, 0x00000001>;\n   \
    \ using shpf = FieldModel<address, 3, 0x00000001>;\n    using inits = FieldModel<address,\
    \ 4, 0x00000001>;\n    using rsf = FieldModel<address, 5, 0x00000001>;\n    using\
    \ initf = FieldModel<address, 6, 0x00000001>;\n    using init = FieldModel<address,\
    \ 7, 0x00000001>;\n    using alraf = FieldModel<address, 8, 0x00000001>;\n   \
    \ using alrbf = FieldModel<address, 9, 0x00000001>;\n    using wutf = FieldModel<address,\
    \ 10, 0x00000001>;\n    using tsf = FieldModel<address, 11, 0x00000001>;\n   \
    \ using tsovf = FieldModel<address, 12, 0x00000001>;\n    using tamp1f = FieldModel<address,\
    \ 13, 0x00000001>;\n    using tamp2f = FieldModel<address, 14, 0x00000001>;\n\
    \    using recalpf = FieldModel<address, 16, 0x00000001>;\n  };\n\npublic:\n \
    \ using isr = IsrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class PrerReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using prediv_a = FieldModel<address, 16, 0x0000007F>;\n    using prediv_s\
    \ = FieldModel<address, 0, 0x00007FFF>;\n  };\n\npublic:\n  using prer = PrerReg<BaseAddress\
    \ + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class WutrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using wut = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using wutr = WutrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CalibrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dcs = FieldModel<address, 7, 0x00000001>;\n    using\
    \ dc = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using calibr =\
    \ CalibrReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AlrmarReg: public RegisterModel<address>\n  {\n  public:\n    using msk4\
    \ = FieldModel<address, 31, 0x00000001>;\n    using wdsel = FieldModel<address,\
    \ 30, 0x00000001>;\n    using dt = FieldModel<address, 28, 0x00000003>;\n    using\
    \ du = FieldModel<address, 24, 0x0000000F>;\n    using msk3 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using pm = FieldModel<address, 22, 0x00000001>;\n    using\
    \ ht = FieldModel<address, 20, 0x00000003>;\n    using hu = FieldModel<address,\
    \ 16, 0x0000000F>;\n    using msk2 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using mnt = FieldModel<address, 12, 0x00000007>;\n    using mnu = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using msk1 = FieldModel<address, 7, 0x00000001>;\n    using\
    \ st = FieldModel<address, 4, 0x00000007>;\n    using su = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using alrmar = AlrmarReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AlrmbrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using msk4 = FieldModel<address, 31, 0x00000001>;\n    using\
    \ wdsel = FieldModel<address, 30, 0x00000001>;\n    using dt = FieldModel<address,\
    \ 28, 0x00000003>;\n    using du = FieldModel<address, 24, 0x0000000F>;\n    using\
    \ msk3 = FieldModel<address, 23, 0x00000001>;\n    using pm = FieldModel<address,\
    \ 22, 0x00000001>;\n    using ht = FieldModel<address, 20, 0x00000003>;\n    using\
    \ hu = FieldModel<address, 16, 0x0000000F>;\n    using msk2 = FieldModel<address,\
    \ 15, 0x00000001>;\n    using mnt = FieldModel<address, 12, 0x00000007>;\n   \
    \ using mnu = FieldModel<address, 8, 0x0000000F>;\n    using msk1 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using st = FieldModel<address, 4, 0x00000007>;\n    using\
    \ su = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using alrmbr =\
    \ AlrmbrReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class WprReg: public RegisterModel<address>\n  {\n  public:\n    using key\
    \ = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using wpr = WprReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class SsrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using ss = FieldModel<address, 0,\
    \ 0x0000FFFF>;\n  };\n\npublic:\n  using ssr = SsrReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ShiftrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using add1s = FieldModel<address, 31, 0x00000001>;\n    using\
    \ subfs = FieldModel<address, 0, 0x00007FFF>;\n  };\n\npublic:\n  using shiftr\
    \ = ShiftrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class TstrReg: public RegisterModel<address>\n  {\n  public:\n    using alarmouttype\
    \ = FieldModel<address, 18, 0x00000001>;\n    using tsinsel = FieldModel<address,\
    \ 17, 0x00000001>;\n    using tamp1insel = FieldModel<address, 16, 0x00000001>;\n\
    \    using tampie = FieldModel<address, 2, 0x00000001>;\n    using tamp1trg =\
    \ FieldModel<address, 1, 0x00000001>;\n    using tamp1e = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using tstr = TstrReg<BaseAddress + 0x0030>;\n\
    \nprivate:\n  template <uint32_t address>\n  class TsdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using wdu = FieldModel<address, 13, 0x00000007>;\n    using\
    \ mt = FieldModel<address, 12, 0x00000001>;\n    using mu = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using dt = FieldModel<address, 4, 0x00000003>;\n    using\
    \ du = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using tsdr = TsdrReg<BaseAddress\
    \ + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n  class TsssrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using ss = FieldModel<address, 0,\
    \ 0x0000FFFF>;\n  };\n\npublic:\n  using tsssr = TsssrReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CalrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using calp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ calw8 = FieldModel<address, 14, 0x00000001>;\n    using calw16 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using calm = FieldModel<address, 0, 0x000001FF>;\n  };\n\
    \npublic:\n  using calr = CalrReg<BaseAddress + 0x003C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class TafcrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using alarmouttype = FieldModel<address, 18, 0x00000001>;\n   \
    \ using tsinsel = FieldModel<address, 17, 0x00000001>;\n    using tamp1insel =\
    \ FieldModel<address, 16, 0x00000001>;\n    using tamppudis = FieldModel<address,\
    \ 15, 0x00000001>;\n    using tampprch = FieldModel<address, 13, 0x00000003>;\n\
    \    using tampflt = FieldModel<address, 11, 0x00000003>;\n    using tampfreq\
    \ = FieldModel<address, 8, 0x00000007>;\n    using tampts = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tamp2trg = FieldModel<address, 4, 0x00000001>;\n\
    \    using tamp2e = FieldModel<address, 3, 0x00000001>;\n    using tampie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using tamp1trg = FieldModel<address, 1, 0x00000001>;\n\
    \    using tamp1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ tafcr = TafcrReg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AlrmassrReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ maskss = FieldModel<address, 24, 0x0000000F>;\n    using ss = FieldModel<address,\
    \ 0, 0x00007FFF>;\n  };\n\npublic:\n  using alrmassr = AlrmassrReg<BaseAddress\
    \ + 0x0044>;\n\nprivate:\n  template <uint32_t address>\n  class AlrmbssrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using maskss = FieldModel<address,\
    \ 24, 0x0000000F>;\n    using ss = FieldModel<address, 0, 0x00007FFF>;\n  };\n\
    \npublic:\n  using alrmbssr = AlrmbssrReg<BaseAddress + 0x0048>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Bkp0rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using bkp0r = Bkp0rReg<BaseAddress + 0x0050>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bkp1rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using bkp1r = Bkp1rReg<BaseAddress + 0x0054>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp2rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp2r = Bkp2rReg<BaseAddress + 0x0058>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Bkp3rReg: public RegisterModel<address>\n  {\n  public:\n    using bkp\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using bkp3r = Bkp3rReg<BaseAddress\
    \ + 0x005C>;\n\nprivate:\n  template <uint32_t address>\n  class Bkp4rReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using bkp = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using bkp4r = Bkp4rReg<BaseAddress + 0x0060>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Bkp5rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using bkp5r = Bkp5rReg<BaseAddress + 0x0064>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bkp6rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using bkp6r = Bkp6rReg<BaseAddress + 0x0068>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp7rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp7r = Bkp7rReg<BaseAddress + 0x006C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Bkp8rReg: public RegisterModel<address>\n  {\n  public:\n    using bkp\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using bkp8r = Bkp8rReg<BaseAddress\
    \ + 0x0070>;\n\nprivate:\n  template <uint32_t address>\n  class Bkp9rReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using bkp = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using bkp9r = Bkp9rReg<BaseAddress + 0x0074>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Bkp10rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using bkp10r = Bkp10rReg<BaseAddress + 0x0078>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bkp11rReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using bkp11r = Bkp11rReg<BaseAddress + 0x007C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp12rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp12r = Bkp12rReg<BaseAddress + 0x0080>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp13rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp13r = Bkp13rReg<BaseAddress + 0x0084>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp14rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp14r = Bkp14rReg<BaseAddress + 0x0088>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp15rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp15r = Bkp15rReg<BaseAddress + 0x008C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp16rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp16r = Bkp16rReg<BaseAddress + 0x0090>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp17rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp17r = Bkp17rReg<BaseAddress + 0x0094>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp18rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp18r = Bkp18rReg<BaseAddress + 0x0098>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Bkp19rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bkp = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bkp19r = Bkp19rReg<BaseAddress + 0x009C>;\nprivate:\n  template <uint32_t address,\
    \ uint32_t bankOffset>\n  class AlrmxssrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using maskss = FieldModel<address, 24, 0x0000000F,\
    \ bankOffset>;\n    using ss = FieldModel<address, 0, 0x00007FFF, bankOffset>;\n\
    \  };\n\npublic:\n  using alrmxssr = AlrmxssrBankReg<BaseAddress + 0x0044, 0x0004>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class BkpxrBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using bkp\
    \ = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n  using\
    \ bkpxr = BkpxrBankReg<BaseAddress + 0x0050, 0x0004>;\n};\n\n}\n\n#endif /* DRAL_STM32F446_RTC_H\
    \ */\n"
  name: RTC
- content: "#ifndef DRAL_STM32F446_UART4_H\n#define DRAL_STM32F446_UART4_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass uart4\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40004C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lbd = FieldModel<address, 8, 0x00000001>;\n    using txe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tc = FieldModel<address, 6, 0x00000001>;\n    using\
    \ rxne = FieldModel<address, 5, 0x00000001>;\n    using idle = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ore = FieldModel<address, 3, 0x00000001>;\n    using\
    \ nf = FieldModel<address, 2, 0x00000001>;\n    using fe = FieldModel<address,\
    \ 1, 0x00000001>;\n    using pe = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using sr = SrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class DrReg: public RegisterModel<address>\n  {\n  public:\n   \
    \ using dr = FieldModel<address, 0, 0x000001FF>;\n  };\n\npublic:\n  using dr\
    \ = DrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class BrrReg: public RegisterModel<address>\n  {\n  public:\n    using div_mantissa\
    \ = FieldModel<address, 4, 0x00000FFF>;\n    using div_fraction = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using brr = BrrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using over8 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ue = FieldModel<address, 13, 0x00000001>;\n    using m = FieldModel<address,\
    \ 12, 0x00000001>;\n    using wake = FieldModel<address, 11, 0x00000001>;\n  \
    \  using pce = FieldModel<address, 10, 0x00000001>;\n    using ps = FieldModel<address,\
    \ 9, 0x00000001>;\n    using peie = FieldModel<address, 8, 0x00000001>;\n    using\
    \ txeie = FieldModel<address, 7, 0x00000001>;\n    using tcie = FieldModel<address,\
    \ 6, 0x00000001>;\n    using rxneie = FieldModel<address, 5, 0x00000001>;\n  \
    \  using idleie = FieldModel<address, 4, 0x00000001>;\n    using te = FieldModel<address,\
    \ 3, 0x00000001>;\n    using re = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rwu = FieldModel<address, 1, 0x00000001>;\n    using sbk = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using linen = FieldModel<address, 14, 0x00000001>;\n    using\
    \ stop = FieldModel<address, 12, 0x00000003>;\n    using lbdie = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lbdl = FieldModel<address, 5, 0x00000001>;\n    using\
    \ add = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress\
    \ + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class Cr3Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using onebit = FieldModel<address,\
    \ 11, 0x00000001>;\n    using ctsie = FieldModel<address, 10, 0x00000001>;\n \
    \   using ctse = FieldModel<address, 9, 0x00000001>;\n    using rtse = FieldModel<address,\
    \ 8, 0x00000001>;\n    using dmat = FieldModel<address, 7, 0x00000001>;\n    using\
    \ dmar = FieldModel<address, 6, 0x00000001>;\n    using hdsel = FieldModel<address,\
    \ 3, 0x00000001>;\n    using irlp = FieldModel<address, 2, 0x00000001>;\n    using\
    \ iren = FieldModel<address, 1, 0x00000001>;\n    using eie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr3 = Cr3Reg<BaseAddress + 0x0014>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_UART4_H */\n"
  name: UART4
- content: "#ifndef DRAL_STM32F446_UART5_H\n#define DRAL_STM32F446_UART5_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass uart5\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40005000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lbd = FieldModel<address, 8, 0x00000001>;\n    using txe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tc = FieldModel<address, 6, 0x00000001>;\n    using\
    \ rxne = FieldModel<address, 5, 0x00000001>;\n    using idle = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ore = FieldModel<address, 3, 0x00000001>;\n    using\
    \ nf = FieldModel<address, 2, 0x00000001>;\n    using fe = FieldModel<address,\
    \ 1, 0x00000001>;\n    using pe = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using sr = SrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class DrReg: public RegisterModel<address>\n  {\n  public:\n   \
    \ using dr = FieldModel<address, 0, 0x000001FF>;\n  };\n\npublic:\n  using dr\
    \ = DrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class BrrReg: public RegisterModel<address>\n  {\n  public:\n    using div_mantissa\
    \ = FieldModel<address, 4, 0x00000FFF>;\n    using div_fraction = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using brr = BrrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using over8 = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ue = FieldModel<address, 13, 0x00000001>;\n    using m = FieldModel<address,\
    \ 12, 0x00000001>;\n    using wake = FieldModel<address, 11, 0x00000001>;\n  \
    \  using pce = FieldModel<address, 10, 0x00000001>;\n    using ps = FieldModel<address,\
    \ 9, 0x00000001>;\n    using peie = FieldModel<address, 8, 0x00000001>;\n    using\
    \ txeie = FieldModel<address, 7, 0x00000001>;\n    using tcie = FieldModel<address,\
    \ 6, 0x00000001>;\n    using rxneie = FieldModel<address, 5, 0x00000001>;\n  \
    \  using idleie = FieldModel<address, 4, 0x00000001>;\n    using te = FieldModel<address,\
    \ 3, 0x00000001>;\n    using re = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rwu = FieldModel<address, 1, 0x00000001>;\n    using sbk = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using linen = FieldModel<address, 14, 0x00000001>;\n    using\
    \ stop = FieldModel<address, 12, 0x00000003>;\n    using lbdie = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lbdl = FieldModel<address, 5, 0x00000001>;\n    using\
    \ add = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress\
    \ + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class Cr3Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using onebit = FieldModel<address,\
    \ 11, 0x00000001>;\n    using ctsie = FieldModel<address, 10, 0x00000001>;\n \
    \   using ctse = FieldModel<address, 9, 0x00000001>;\n    using rtse = FieldModel<address,\
    \ 8, 0x00000001>;\n    using dmat = FieldModel<address, 7, 0x00000001>;\n    using\
    \ dmar = FieldModel<address, 6, 0x00000001>;\n    using hdsel = FieldModel<address,\
    \ 3, 0x00000001>;\n    using irlp = FieldModel<address, 2, 0x00000001>;\n    using\
    \ iren = FieldModel<address, 1, 0x00000001>;\n    using eie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr3 = Cr3Reg<BaseAddress + 0x0014>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_UART5_H */\n"
  name: UART5
- content: "#ifndef DRAL_STM32F446_C_ADC_H\n#define DRAL_STM32F446_C_ADC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass c_adc\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40012300;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CsrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ovr3 = FieldModel<address, 21, 0x00000001>;\n    using strt3 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using jstrt3 = FieldModel<address, 19, 0x00000001>;\n\
    \    using jeoc3 = FieldModel<address, 18, 0x00000001>;\n    using eoc3 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using awd3 = FieldModel<address, 16, 0x00000001>;\n  \
    \  using ovr2 = FieldModel<address, 13, 0x00000001>;\n    using strt2 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using jstrt2 = FieldModel<address, 11, 0x00000001>;\n\
    \    using jeoc2 = FieldModel<address, 10, 0x00000001>;\n    using eoc2 = FieldModel<address,\
    \ 9, 0x00000001>;\n    using awd2 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ ovr1 = FieldModel<address, 5, 0x00000001>;\n    using strt1 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using jstrt1 = FieldModel<address, 3, 0x00000001>;\n  \
    \  using jeoc1 = FieldModel<address, 2, 0x00000001>;\n    using eoc1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using awd1 = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using csr = CsrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tsvrefe = FieldModel<address, 23, 0x00000001>;\n    using vbate = FieldModel<address,\
    \ 22, 0x00000001>;\n    using adcpre = FieldModel<address, 16, 0x00000003>;\n\
    \    using dma = FieldModel<address, 14, 0x00000003>;\n    using dds = FieldModel<address,\
    \ 13, 0x00000001>;\n    using delay = FieldModel<address, 8, 0x0000000F>;\n  \
    \  using mult = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using\
    \ ccr = CcrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CdrReg: public RegisterModel<address>\n  {\n  public:\n    using data2\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using data1 = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cdr = CdrReg<BaseAddress + 0x0008>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_C_ADC_H */\n"
  name: C_ADC
- content: "#ifndef DRAL_STM32F446_TIM1_H\n#define DRAL_STM32F446_TIM1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40010000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cms = FieldModel<address, 5, 0x00000003>;\n    using\
    \ dir = FieldModel<address, 4, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ois4 = FieldModel<address, 14, 0x00000001>;\n    using\
    \ ois3n = FieldModel<address, 13, 0x00000001>;\n    using ois3 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ois2n = FieldModel<address, 11, 0x00000001>;\n \
    \   using ois2 = FieldModel<address, 10, 0x00000001>;\n    using ois1n = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ois1 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ ti1s = FieldModel<address, 7, 0x00000001>;\n    using mms = FieldModel<address,\
    \ 4, 0x00000007>;\n    using ccds = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ccus = FieldModel<address, 2, 0x00000001>;\n    using ccpc = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SmcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using etp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ece = FieldModel<address, 14, 0x00000001>;\n    using etps = FieldModel<address,\
    \ 12, 0x00000003>;\n    using etf = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ msm = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tde = FieldModel<address, 14, 0x00000001>;\n    using comde = FieldModel<address,\
    \ 13, 0x00000001>;\n    using cc4de = FieldModel<address, 12, 0x00000001>;\n \
    \   using cc3de = FieldModel<address, 11, 0x00000001>;\n    using cc2de = FieldModel<address,\
    \ 10, 0x00000001>;\n    using cc1de = FieldModel<address, 9, 0x00000001>;\n  \
    \  using ude = FieldModel<address, 8, 0x00000001>;\n    using tie = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc4ie = FieldModel<address, 4, 0x00000001>;\n   \
    \ using cc3ie = FieldModel<address, 3, 0x00000001>;\n    using cc2ie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uie = FieldModel<address, 0, 0x00000001>;\n    using bie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using comie = FieldModel<address, 5, 0x00000001>;\n  };\n\
    \npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4of = FieldModel<address, 12, 0x00000001>;\n    using cc3of = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc2of = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc1of = FieldModel<address, 9, 0x00000001>;\n    using bif = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tif = FieldModel<address, 6, 0x00000001>;\n    using\
    \ comif = FieldModel<address, 5, 0x00000001>;\n    using cc4if = FieldModel<address,\
    \ 4, 0x00000001>;\n    using cc3if = FieldModel<address, 3, 0x00000001>;\n   \
    \ using cc2if = FieldModel<address, 2, 0x00000001>;\n    using cc1if = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EgrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using bg = FieldModel<address, 7, 0x00000001>;\n    using tg = FieldModel<address,\
    \ 6, 0x00000001>;\n    using comg = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc4g = FieldModel<address, 4, 0x00000001>;\n    using cc3g = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc2g = FieldModel<address, 2, 0x00000001>;\n    using\
    \ cc1g = FieldModel<address, 1, 0x00000001>;\n    using ug = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc2ce = FieldModel<address, 15, 0x00000001>;\n    using\
    \ oc2m = FieldModel<address, 12, 0x00000007>;\n    using oc2pe = FieldModel<address,\
    \ 11, 0x00000001>;\n    using oc2fe = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc2s = FieldModel<address, 8, 0x00000003>;\n    using oc1ce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic2f = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ ic2pcs = FieldModel<address, 10, 0x00000003>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class Ccmr2_outputReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using oc4ce = FieldModel<address,\
    \ 15, 0x00000001>;\n    using oc4m = FieldModel<address, 12, 0x00000007>;\n  \
    \  using oc4pe = FieldModel<address, 11, 0x00000001>;\n    using oc4fe = FieldModel<address,\
    \ 10, 0x00000001>;\n    using cc4s = FieldModel<address, 8, 0x00000003>;\n   \
    \ using oc3ce = FieldModel<address, 7, 0x00000001>;\n    using oc3m = FieldModel<address,\
    \ 4, 0x00000007>;\n    using oc3pe = FieldModel<address, 3, 0x00000001>;\n   \
    \ using oc3fe = FieldModel<address, 2, 0x00000001>;\n    using cc3s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr2_output = Ccmr2_outputReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class Ccmr2_inputReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ic4f = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using ic4psc = FieldModel<address, 10, 0x00000003>;\n\
    \    using cc4s = FieldModel<address, 8, 0x00000003>;\n    using ic3f = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using ic3psc = FieldModel<address, 2, 0x00000003>;\n  \
    \  using cc3s = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using\
    \ ccmr2_input = Ccmr2_inputReg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CcerReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4p = FieldModel<address, 13, 0x00000001>;\n    using cc4e = FieldModel<address,\
    \ 12, 0x00000001>;\n    using cc3np = FieldModel<address, 11, 0x00000001>;\n \
    \   using cc3ne = FieldModel<address, 10, 0x00000001>;\n    using cc3p = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cc3e = FieldModel<address, 8, 0x00000001>;\n    using\
    \ cc2np = FieldModel<address, 7, 0x00000001>;\n    using cc2ne = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1ne = FieldModel<address, 2, 0x00000001>;\n   \
    \ using cc1p = FieldModel<address, 1, 0x00000001>;\n    using cc1e = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ccer = CcerReg<BaseAddress + 0x0020>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CntReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cnt = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using cnt = CntReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class PscReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using psc = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc\
    \ = PscReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class ArrReg: public RegisterModel<address>\n  {\n  public:\n    using arr\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using arr = ArrReg<BaseAddress\
    \ + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n  class Ccr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using ccr1 = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr2 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using ccr2 = Ccr2Reg<BaseAddress + 0x0038>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ccr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ccr3 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr3 = Ccr3Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr4\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr4 = Ccr4Reg<BaseAddress\
    \ + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n  class DcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dbl = FieldModel<address,\
    \ 8, 0x0000001F>;\n    using dba = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using dcr = DcrReg<BaseAddress + 0x0048>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DmarReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dmab = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ dmar = DmarReg<BaseAddress + 0x004C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RcrReg: public RegisterModel<address>\n  {\n  public:\n    using rep\
    \ = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using rcr = RcrReg<BaseAddress\
    \ + 0x0030>;\n\nprivate:\n  template <uint32_t address>\n  class BdtrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using moe = FieldModel<address,\
    \ 15, 0x00000001>;\n    using aoe = FieldModel<address, 14, 0x00000001>;\n   \
    \ using bkp = FieldModel<address, 13, 0x00000001>;\n    using bke = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ossr = FieldModel<address, 11, 0x00000001>;\n  \
    \  using ossi = FieldModel<address, 10, 0x00000001>;\n    using lock = FieldModel<address,\
    \ 8, 0x00000003>;\n    using dtg = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using bdtr = BdtrReg<BaseAddress + 0x0044>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_TIM1_H */\n"
  name: TIM1
- content: "#ifndef DRAL_STM32F446_TIM8_H\n#define DRAL_STM32F446_TIM8_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim8\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40010400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cms = FieldModel<address, 5, 0x00000003>;\n    using\
    \ dir = FieldModel<address, 4, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ois4 = FieldModel<address, 14, 0x00000001>;\n    using\
    \ ois3n = FieldModel<address, 13, 0x00000001>;\n    using ois3 = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ois2n = FieldModel<address, 11, 0x00000001>;\n \
    \   using ois2 = FieldModel<address, 10, 0x00000001>;\n    using ois1n = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ois1 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ ti1s = FieldModel<address, 7, 0x00000001>;\n    using mms = FieldModel<address,\
    \ 4, 0x00000007>;\n    using ccds = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ccus = FieldModel<address, 2, 0x00000001>;\n    using ccpc = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SmcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using etp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ece = FieldModel<address, 14, 0x00000001>;\n    using etps = FieldModel<address,\
    \ 12, 0x00000003>;\n    using etf = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ msm = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tde = FieldModel<address, 14, 0x00000001>;\n    using comde = FieldModel<address,\
    \ 13, 0x00000001>;\n    using cc4de = FieldModel<address, 12, 0x00000001>;\n \
    \   using cc3de = FieldModel<address, 11, 0x00000001>;\n    using cc2de = FieldModel<address,\
    \ 10, 0x00000001>;\n    using cc1de = FieldModel<address, 9, 0x00000001>;\n  \
    \  using ude = FieldModel<address, 8, 0x00000001>;\n    using tie = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc4ie = FieldModel<address, 4, 0x00000001>;\n   \
    \ using cc3ie = FieldModel<address, 3, 0x00000001>;\n    using cc2ie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uie = FieldModel<address, 0, 0x00000001>;\n    using bie = FieldModel<address,\
    \ 7, 0x00000001>;\n    using comie = FieldModel<address, 5, 0x00000001>;\n  };\n\
    \npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4of = FieldModel<address, 12, 0x00000001>;\n    using cc3of = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc2of = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc1of = FieldModel<address, 9, 0x00000001>;\n    using bif = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tif = FieldModel<address, 6, 0x00000001>;\n    using\
    \ comif = FieldModel<address, 5, 0x00000001>;\n    using cc4if = FieldModel<address,\
    \ 4, 0x00000001>;\n    using cc3if = FieldModel<address, 3, 0x00000001>;\n   \
    \ using cc2if = FieldModel<address, 2, 0x00000001>;\n    using cc1if = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EgrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using bg = FieldModel<address, 7, 0x00000001>;\n    using tg = FieldModel<address,\
    \ 6, 0x00000001>;\n    using comg = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc4g = FieldModel<address, 4, 0x00000001>;\n    using cc3g = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc2g = FieldModel<address, 2, 0x00000001>;\n    using\
    \ cc1g = FieldModel<address, 1, 0x00000001>;\n    using ug = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc2ce = FieldModel<address, 15, 0x00000001>;\n    using\
    \ oc2m = FieldModel<address, 12, 0x00000007>;\n    using oc2pe = FieldModel<address,\
    \ 11, 0x00000001>;\n    using oc2fe = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc2s = FieldModel<address, 8, 0x00000003>;\n    using oc1ce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic2f = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ ic2pcs = FieldModel<address, 10, 0x00000003>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class Ccmr2_outputReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using oc4ce = FieldModel<address,\
    \ 15, 0x00000001>;\n    using oc4m = FieldModel<address, 12, 0x00000007>;\n  \
    \  using oc4pe = FieldModel<address, 11, 0x00000001>;\n    using oc4fe = FieldModel<address,\
    \ 10, 0x00000001>;\n    using cc4s = FieldModel<address, 8, 0x00000003>;\n   \
    \ using oc3ce = FieldModel<address, 7, 0x00000001>;\n    using oc3m = FieldModel<address,\
    \ 4, 0x00000007>;\n    using oc3pe = FieldModel<address, 3, 0x00000001>;\n   \
    \ using oc3fe = FieldModel<address, 2, 0x00000001>;\n    using cc3s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr2_output = Ccmr2_outputReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class Ccmr2_inputReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ic4f = FieldModel<address,\
    \ 12, 0x0000000F>;\n    using ic4psc = FieldModel<address, 10, 0x00000003>;\n\
    \    using cc4s = FieldModel<address, 8, 0x00000003>;\n    using ic3f = FieldModel<address,\
    \ 4, 0x0000000F>;\n    using ic3psc = FieldModel<address, 2, 0x00000003>;\n  \
    \  using cc3s = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using\
    \ ccmr2_input = Ccmr2_inputReg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CcerReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4p = FieldModel<address, 13, 0x00000001>;\n    using cc4e = FieldModel<address,\
    \ 12, 0x00000001>;\n    using cc3np = FieldModel<address, 11, 0x00000001>;\n \
    \   using cc3ne = FieldModel<address, 10, 0x00000001>;\n    using cc3p = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cc3e = FieldModel<address, 8, 0x00000001>;\n    using\
    \ cc2np = FieldModel<address, 7, 0x00000001>;\n    using cc2ne = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1ne = FieldModel<address, 2, 0x00000001>;\n   \
    \ using cc1p = FieldModel<address, 1, 0x00000001>;\n    using cc1e = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ccer = CcerReg<BaseAddress + 0x0020>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CntReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cnt = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using cnt = CntReg<BaseAddress + 0x0024>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class PscReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using psc = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc\
    \ = PscReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class ArrReg: public RegisterModel<address>\n  {\n  public:\n    using arr\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using arr = ArrReg<BaseAddress\
    \ + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n  class Ccr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using ccr1 = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr2 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using ccr2 = Ccr2Reg<BaseAddress + 0x0038>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ccr3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ccr3 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr3 = Ccr3Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr4\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr4 = Ccr4Reg<BaseAddress\
    \ + 0x0040>;\n\nprivate:\n  template <uint32_t address>\n  class DcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dbl = FieldModel<address,\
    \ 8, 0x0000001F>;\n    using dba = FieldModel<address, 0, 0x0000001F>;\n  };\n\
    \npublic:\n  using dcr = DcrReg<BaseAddress + 0x0048>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DmarReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dmab = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ dmar = DmarReg<BaseAddress + 0x004C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RcrReg: public RegisterModel<address>\n  {\n  public:\n    using rep\
    \ = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using rcr = RcrReg<BaseAddress\
    \ + 0x0030>;\n\nprivate:\n  template <uint32_t address>\n  class BdtrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using moe = FieldModel<address,\
    \ 15, 0x00000001>;\n    using aoe = FieldModel<address, 14, 0x00000001>;\n   \
    \ using bkp = FieldModel<address, 13, 0x00000001>;\n    using bke = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ossr = FieldModel<address, 11, 0x00000001>;\n  \
    \  using ossi = FieldModel<address, 10, 0x00000001>;\n    using lock = FieldModel<address,\
    \ 8, 0x00000003>;\n    using dtg = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using bdtr = BdtrReg<BaseAddress + 0x0044>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_TIM8_H */\n"
  name: TIM8
- content: "#ifndef DRAL_STM32F446_TIM2_H\n#define DRAL_STM32F446_TIM2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40000000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cms = FieldModel<address, 5, 0x00000003>;\n    using\
    \ dir = FieldModel<address, 4, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ti1s = FieldModel<address, 7, 0x00000001>;\n    using\
    \ mms = FieldModel<address, 4, 0x00000007>;\n    using ccds = FieldModel<address,\
    \ 3, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SmcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using etp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ece = FieldModel<address, 14, 0x00000001>;\n    using etps = FieldModel<address,\
    \ 12, 0x00000003>;\n    using etf = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ msm = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tde = FieldModel<address, 14, 0x00000001>;\n    using cc4de = FieldModel<address,\
    \ 12, 0x00000001>;\n    using cc3de = FieldModel<address, 11, 0x00000001>;\n \
    \   using cc2de = FieldModel<address, 10, 0x00000001>;\n    using cc1de = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ude = FieldModel<address, 8, 0x00000001>;\n    using\
    \ tie = FieldModel<address, 6, 0x00000001>;\n    using cc4ie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using cc3ie = FieldModel<address, 3, 0x00000001>;\n   \
    \ using cc2ie = FieldModel<address, 2, 0x00000001>;\n    using cc1ie = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4of = FieldModel<address, 12, 0x00000001>;\n    using cc3of = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc2of = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc1of = FieldModel<address, 9, 0x00000001>;\n    using tif = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc4if = FieldModel<address, 4, 0x00000001>;\n   \
    \ using cc3if = FieldModel<address, 3, 0x00000001>;\n    using cc2if = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using tg =\
    \ FieldModel<address, 6, 0x00000001>;\n    using cc4g = FieldModel<address, 4,\
    \ 0x00000001>;\n    using cc3g = FieldModel<address, 3, 0x00000001>;\n    using\
    \ cc2g = FieldModel<address, 2, 0x00000001>;\n    using cc1g = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ug = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using oc2ce = FieldModel<address, 15, 0x00000001>;\n    using oc2m = FieldModel<address,\
    \ 12, 0x00000007>;\n    using oc2pe = FieldModel<address, 11, 0x00000001>;\n \
    \   using oc2fe = FieldModel<address, 10, 0x00000001>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using oc1ce = FieldModel<address, 7, 0x00000001>;\n   \
    \ using oc1m = FieldModel<address, 4, 0x00000007>;\n    using oc1pe = FieldModel<address,\
    \ 3, 0x00000001>;\n    using oc1fe = FieldModel<address, 2, 0x00000001>;\n   \
    \ using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_output\
    \ = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccmr1_inputReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ ic2f = FieldModel<address, 12, 0x0000000F>;\n    using ic2pcs = FieldModel<address,\
    \ 10, 0x00000003>;\n    using cc2s = FieldModel<address, 8, 0x00000003>;\n   \
    \ using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using icpcs = FieldModel<address,\
    \ 2, 0x00000003>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc4ce = FieldModel<address, 15, 0x00000001>;\n    using\
    \ oc4m = FieldModel<address, 12, 0x00000007>;\n    using oc4pe = FieldModel<address,\
    \ 11, 0x00000001>;\n    using oc4fe = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc4s = FieldModel<address, 8, 0x00000003>;\n    using oc3ce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using oc3m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc3pe = FieldModel<address, 3, 0x00000001>;\n    using oc3fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc3s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr2_output = Ccmr2_outputReg<BaseAddress + 0x001C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic4f = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ ic4psc = FieldModel<address, 10, 0x00000003>;\n    using cc4s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic3f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ ic3psc = FieldModel<address, 2, 0x00000003>;\n    using cc3s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr2_input = Ccmr2_inputReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc4np = FieldModel<address,\
    \ 15, 0x00000001>;\n    using cc4p = FieldModel<address, 13, 0x00000001>;\n  \
    \  using cc4e = FieldModel<address, 12, 0x00000001>;\n    using cc3np = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc3p = FieldModel<address, 9, 0x00000001>;\n   \
    \ using cc3e = FieldModel<address, 8, 0x00000001>;\n    using cc2np = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using cnt_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress + 0x0024>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PscReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using psc = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class ArrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using arr_h = FieldModel<address, 16, 0x0000FFFF>;\n    using arr_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr1_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr1_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr2_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr2_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr2 = Ccr2Reg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr3_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr3_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr3 = Ccr3Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr4_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr4_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr4 = Ccr4Reg<BaseAddress + 0x0040>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dbl = FieldModel<address, 8, 0x0000001F>;\n    using\
    \ dba = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using dcr = DcrReg<BaseAddress\
    \ + 0x0048>;\n\nprivate:\n  template <uint32_t address>\n  class DmarReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dmab = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dmar = DmarReg<BaseAddress + 0x004C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using itr1_rmp = FieldModel<address, 10, 0x00000003>;\n \
    \ };\n\npublic:\n  using or = OrReg<BaseAddress + 0x0050>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_TIM2_H */\n"
  name: TIM2
- content: "#ifndef DRAL_STM32F446_TIM3_H\n#define DRAL_STM32F446_TIM3_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim3\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40000400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cms = FieldModel<address, 5, 0x00000003>;\n    using\
    \ dir = FieldModel<address, 4, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ti1s = FieldModel<address, 7, 0x00000001>;\n    using\
    \ mms = FieldModel<address, 4, 0x00000007>;\n    using ccds = FieldModel<address,\
    \ 3, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SmcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using etp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ece = FieldModel<address, 14, 0x00000001>;\n    using etps = FieldModel<address,\
    \ 12, 0x00000003>;\n    using etf = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ msm = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tde = FieldModel<address, 14, 0x00000001>;\n    using cc4de = FieldModel<address,\
    \ 12, 0x00000001>;\n    using cc3de = FieldModel<address, 11, 0x00000001>;\n \
    \   using cc2de = FieldModel<address, 10, 0x00000001>;\n    using cc1de = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ude = FieldModel<address, 8, 0x00000001>;\n    using\
    \ tie = FieldModel<address, 6, 0x00000001>;\n    using cc4ie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using cc3ie = FieldModel<address, 3, 0x00000001>;\n   \
    \ using cc2ie = FieldModel<address, 2, 0x00000001>;\n    using cc1ie = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4of = FieldModel<address, 12, 0x00000001>;\n    using cc3of = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc2of = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc1of = FieldModel<address, 9, 0x00000001>;\n    using tif = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc4if = FieldModel<address, 4, 0x00000001>;\n   \
    \ using cc3if = FieldModel<address, 3, 0x00000001>;\n    using cc2if = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using tg =\
    \ FieldModel<address, 6, 0x00000001>;\n    using cc4g = FieldModel<address, 4,\
    \ 0x00000001>;\n    using cc3g = FieldModel<address, 3, 0x00000001>;\n    using\
    \ cc2g = FieldModel<address, 2, 0x00000001>;\n    using cc1g = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ug = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using oc2ce = FieldModel<address, 15, 0x00000001>;\n    using oc2m = FieldModel<address,\
    \ 12, 0x00000007>;\n    using oc2pe = FieldModel<address, 11, 0x00000001>;\n \
    \   using oc2fe = FieldModel<address, 10, 0x00000001>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using oc1ce = FieldModel<address, 7, 0x00000001>;\n   \
    \ using oc1m = FieldModel<address, 4, 0x00000007>;\n    using oc1pe = FieldModel<address,\
    \ 3, 0x00000001>;\n    using oc1fe = FieldModel<address, 2, 0x00000001>;\n   \
    \ using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_output\
    \ = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccmr1_inputReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ ic2f = FieldModel<address, 12, 0x0000000F>;\n    using ic2pcs = FieldModel<address,\
    \ 10, 0x00000003>;\n    using cc2s = FieldModel<address, 8, 0x00000003>;\n   \
    \ using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using icpcs = FieldModel<address,\
    \ 2, 0x00000003>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc4ce = FieldModel<address, 15, 0x00000001>;\n    using\
    \ oc4m = FieldModel<address, 12, 0x00000007>;\n    using oc4pe = FieldModel<address,\
    \ 11, 0x00000001>;\n    using oc4fe = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc4s = FieldModel<address, 8, 0x00000003>;\n    using oc3ce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using oc3m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc3pe = FieldModel<address, 3, 0x00000001>;\n    using oc3fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc3s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr2_output = Ccmr2_outputReg<BaseAddress + 0x001C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic4f = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ ic4psc = FieldModel<address, 10, 0x00000003>;\n    using cc4s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic3f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ ic3psc = FieldModel<address, 2, 0x00000003>;\n    using cc3s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr2_input = Ccmr2_inputReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc4np = FieldModel<address,\
    \ 15, 0x00000001>;\n    using cc4p = FieldModel<address, 13, 0x00000001>;\n  \
    \  using cc4e = FieldModel<address, 12, 0x00000001>;\n    using cc3np = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc3p = FieldModel<address, 9, 0x00000001>;\n   \
    \ using cc3e = FieldModel<address, 8, 0x00000001>;\n    using cc2np = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using cnt_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress + 0x0024>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PscReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using psc = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class ArrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using arr_h = FieldModel<address, 16, 0x0000FFFF>;\n    using arr_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr1_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr1_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr2_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr2_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr2 = Ccr2Reg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr3_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr3_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr3 = Ccr3Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr4_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr4_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr4 = Ccr4Reg<BaseAddress + 0x0040>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dbl = FieldModel<address, 8, 0x0000001F>;\n    using\
    \ dba = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using dcr = DcrReg<BaseAddress\
    \ + 0x0048>;\n\nprivate:\n  template <uint32_t address>\n  class DmarReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dmab = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dmar = DmarReg<BaseAddress + 0x004C>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM3_H */\n"
  name: TIM3
- content: "#ifndef DRAL_STM32F446_TIM4_H\n#define DRAL_STM32F446_TIM4_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim4\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40000800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cms = FieldModel<address, 5, 0x00000003>;\n    using\
    \ dir = FieldModel<address, 4, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ti1s = FieldModel<address, 7, 0x00000001>;\n    using\
    \ mms = FieldModel<address, 4, 0x00000007>;\n    using ccds = FieldModel<address,\
    \ 3, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SmcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using etp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ece = FieldModel<address, 14, 0x00000001>;\n    using etps = FieldModel<address,\
    \ 12, 0x00000003>;\n    using etf = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ msm = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tde = FieldModel<address, 14, 0x00000001>;\n    using cc4de = FieldModel<address,\
    \ 12, 0x00000001>;\n    using cc3de = FieldModel<address, 11, 0x00000001>;\n \
    \   using cc2de = FieldModel<address, 10, 0x00000001>;\n    using cc1de = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ude = FieldModel<address, 8, 0x00000001>;\n    using\
    \ tie = FieldModel<address, 6, 0x00000001>;\n    using cc4ie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using cc3ie = FieldModel<address, 3, 0x00000001>;\n   \
    \ using cc2ie = FieldModel<address, 2, 0x00000001>;\n    using cc1ie = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4of = FieldModel<address, 12, 0x00000001>;\n    using cc3of = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc2of = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc1of = FieldModel<address, 9, 0x00000001>;\n    using tif = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc4if = FieldModel<address, 4, 0x00000001>;\n   \
    \ using cc3if = FieldModel<address, 3, 0x00000001>;\n    using cc2if = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using tg =\
    \ FieldModel<address, 6, 0x00000001>;\n    using cc4g = FieldModel<address, 4,\
    \ 0x00000001>;\n    using cc3g = FieldModel<address, 3, 0x00000001>;\n    using\
    \ cc2g = FieldModel<address, 2, 0x00000001>;\n    using cc1g = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ug = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using oc2ce = FieldModel<address, 15, 0x00000001>;\n    using oc2m = FieldModel<address,\
    \ 12, 0x00000007>;\n    using oc2pe = FieldModel<address, 11, 0x00000001>;\n \
    \   using oc2fe = FieldModel<address, 10, 0x00000001>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using oc1ce = FieldModel<address, 7, 0x00000001>;\n   \
    \ using oc1m = FieldModel<address, 4, 0x00000007>;\n    using oc1pe = FieldModel<address,\
    \ 3, 0x00000001>;\n    using oc1fe = FieldModel<address, 2, 0x00000001>;\n   \
    \ using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_output\
    \ = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccmr1_inputReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ ic2f = FieldModel<address, 12, 0x0000000F>;\n    using ic2pcs = FieldModel<address,\
    \ 10, 0x00000003>;\n    using cc2s = FieldModel<address, 8, 0x00000003>;\n   \
    \ using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using icpcs = FieldModel<address,\
    \ 2, 0x00000003>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc4ce = FieldModel<address, 15, 0x00000001>;\n    using\
    \ oc4m = FieldModel<address, 12, 0x00000007>;\n    using oc4pe = FieldModel<address,\
    \ 11, 0x00000001>;\n    using oc4fe = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc4s = FieldModel<address, 8, 0x00000003>;\n    using oc3ce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using oc3m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc3pe = FieldModel<address, 3, 0x00000001>;\n    using oc3fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc3s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr2_output = Ccmr2_outputReg<BaseAddress + 0x001C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic4f = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ ic4psc = FieldModel<address, 10, 0x00000003>;\n    using cc4s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic3f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ ic3psc = FieldModel<address, 2, 0x00000003>;\n    using cc3s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr2_input = Ccmr2_inputReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc4np = FieldModel<address,\
    \ 15, 0x00000001>;\n    using cc4p = FieldModel<address, 13, 0x00000001>;\n  \
    \  using cc4e = FieldModel<address, 12, 0x00000001>;\n    using cc3np = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc3p = FieldModel<address, 9, 0x00000001>;\n   \
    \ using cc3e = FieldModel<address, 8, 0x00000001>;\n    using cc2np = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using cnt_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress + 0x0024>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PscReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using psc = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class ArrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using arr_h = FieldModel<address, 16, 0x0000FFFF>;\n    using arr_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr1_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr1_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr2_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr2_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr2 = Ccr2Reg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr3_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr3_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr3 = Ccr3Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr4_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr4_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr4 = Ccr4Reg<BaseAddress + 0x0040>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dbl = FieldModel<address, 8, 0x0000001F>;\n    using\
    \ dba = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using dcr = DcrReg<BaseAddress\
    \ + 0x0048>;\n\nprivate:\n  template <uint32_t address>\n  class DmarReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dmab = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dmar = DmarReg<BaseAddress + 0x004C>;\n\
    \n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM4_H */\n"
  name: TIM4
- content: "#ifndef DRAL_STM32F446_TIM5_H\n#define DRAL_STM32F446_TIM5_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim5\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40000C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cms = FieldModel<address, 5, 0x00000003>;\n    using\
    \ dir = FieldModel<address, 4, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ti1s = FieldModel<address, 7, 0x00000001>;\n    using\
    \ mms = FieldModel<address, 4, 0x00000007>;\n    using ccds = FieldModel<address,\
    \ 3, 0x00000001>;\n  };\n\npublic:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SmcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using etp = FieldModel<address, 15, 0x00000001>;\n    using\
    \ ece = FieldModel<address, 14, 0x00000001>;\n    using etps = FieldModel<address,\
    \ 12, 0x00000003>;\n    using etf = FieldModel<address, 8, 0x0000000F>;\n    using\
    \ msm = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\
    \npublic:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tde = FieldModel<address, 14, 0x00000001>;\n    using cc4de = FieldModel<address,\
    \ 12, 0x00000001>;\n    using cc3de = FieldModel<address, 11, 0x00000001>;\n \
    \   using cc2de = FieldModel<address, 10, 0x00000001>;\n    using cc1de = FieldModel<address,\
    \ 9, 0x00000001>;\n    using ude = FieldModel<address, 8, 0x00000001>;\n    using\
    \ tie = FieldModel<address, 6, 0x00000001>;\n    using cc4ie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using cc3ie = FieldModel<address, 3, 0x00000001>;\n   \
    \ using cc2ie = FieldModel<address, 2, 0x00000001>;\n    using cc1ie = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uie = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cc4of = FieldModel<address, 12, 0x00000001>;\n    using cc3of = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc2of = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc1of = FieldModel<address, 9, 0x00000001>;\n    using tif = FieldModel<address,\
    \ 6, 0x00000001>;\n    using cc4if = FieldModel<address, 4, 0x00000001>;\n   \
    \ using cc3if = FieldModel<address, 3, 0x00000001>;\n    using cc2if = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using tg =\
    \ FieldModel<address, 6, 0x00000001>;\n    using cc4g = FieldModel<address, 4,\
    \ 0x00000001>;\n    using cc3g = FieldModel<address, 3, 0x00000001>;\n    using\
    \ cc2g = FieldModel<address, 2, 0x00000001>;\n    using cc1g = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ug = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using oc2ce = FieldModel<address, 15, 0x00000001>;\n    using oc2m = FieldModel<address,\
    \ 12, 0x00000007>;\n    using oc2pe = FieldModel<address, 11, 0x00000001>;\n \
    \   using oc2fe = FieldModel<address, 10, 0x00000001>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using oc1ce = FieldModel<address, 7, 0x00000001>;\n   \
    \ using oc1m = FieldModel<address, 4, 0x00000007>;\n    using oc1pe = FieldModel<address,\
    \ 3, 0x00000001>;\n    using oc1fe = FieldModel<address, 2, 0x00000001>;\n   \
    \ using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_output\
    \ = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccmr1_inputReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ ic2f = FieldModel<address, 12, 0x0000000F>;\n    using ic2pcs = FieldModel<address,\
    \ 10, 0x00000003>;\n    using cc2s = FieldModel<address, 8, 0x00000003>;\n   \
    \ using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using icpcs = FieldModel<address,\
    \ 2, 0x00000003>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc4ce = FieldModel<address, 15, 0x00000001>;\n    using\
    \ oc4m = FieldModel<address, 12, 0x00000007>;\n    using oc4pe = FieldModel<address,\
    \ 11, 0x00000001>;\n    using oc4fe = FieldModel<address, 10, 0x00000001>;\n \
    \   using cc4s = FieldModel<address, 8, 0x00000003>;\n    using oc3ce = FieldModel<address,\
    \ 7, 0x00000001>;\n    using oc3m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc3pe = FieldModel<address, 3, 0x00000001>;\n    using oc3fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc3s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr2_output = Ccmr2_outputReg<BaseAddress + 0x001C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr2_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic4f = FieldModel<address, 12, 0x0000000F>;\n    using\
    \ ic4psc = FieldModel<address, 10, 0x00000003>;\n    using cc4s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic3f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ ic3psc = FieldModel<address, 2, 0x00000003>;\n    using cc3s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr2_input = Ccmr2_inputReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc4np = FieldModel<address,\
    \ 15, 0x00000001>;\n    using cc4p = FieldModel<address, 13, 0x00000001>;\n  \
    \  using cc4e = FieldModel<address, 12, 0x00000001>;\n    using cc3np = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cc3p = FieldModel<address, 9, 0x00000001>;\n   \
    \ using cc3e = FieldModel<address, 8, 0x00000001>;\n    using cc2np = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using cnt_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress + 0x0024>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PscReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using psc = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class ArrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using arr_h = FieldModel<address, 16, 0x0000FFFF>;\n    using arr_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr1_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr1_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr2_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr2_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr2 = Ccr2Reg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccr3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ccr3_h = FieldModel<address, 16, 0x0000FFFF>;\n   \
    \ using ccr3_l = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr3 = Ccr3Reg<BaseAddress + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr4_h\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using ccr4_l = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr4 = Ccr4Reg<BaseAddress + 0x0040>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dbl = FieldModel<address, 8, 0x0000001F>;\n    using\
    \ dba = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using dcr = DcrReg<BaseAddress\
    \ + 0x0048>;\n\nprivate:\n  template <uint32_t address>\n  class DmarReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using dmab = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dmar = DmarReg<BaseAddress + 0x004C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using it4_rmp = FieldModel<address, 6, 0x00000003>;\n  };\n\
    \npublic:\n  using or = OrReg<BaseAddress + 0x0050>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM5_H\
    \ */\n"
  name: TIM5
- content: "#ifndef DRAL_STM32F446_TIM9_H\n#define DRAL_STM32F446_TIM9_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim9\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40014000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using opm = FieldModel<address, 3, 0x00000001>;\n    using\
    \ urs = FieldModel<address, 2, 0x00000001>;\n    using udis = FieldModel<address,\
    \ 1, 0x00000001>;\n    using cen = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mms = FieldModel<address, 4, 0x00000007>;\n  };\n\npublic:\n  using\
    \ cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SmcrReg: public RegisterModel<address>\n  {\n  public:\n    using msm\
    \ = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address, 4,\
    \ 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\n\
    public:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tie = FieldModel<address, 6, 0x00000001>;\n    using cc2ie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using dier\
    \ = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SrReg: public RegisterModel<address>\n  {\n  public:\n    using cc2of\
    \ = FieldModel<address, 10, 0x00000001>;\n    using cc1of = FieldModel<address,\
    \ 9, 0x00000001>;\n    using tif = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cc2if = FieldModel<address, 2, 0x00000001>;\n    using cc1if = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EgrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using tg = FieldModel<address, 6, 0x00000001>;\n    using cc2g = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1g = FieldModel<address, 1, 0x00000001>;\n    using\
    \ ug = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using oc2m = FieldModel<address,\
    \ 12, 0x00000007>;\n    using oc2pe = FieldModel<address, 11, 0x00000001>;\n \
    \   using oc2fe = FieldModel<address, 10, 0x00000001>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic2f = FieldModel<address, 12, 0x00000007>;\n    using\
    \ ic2pcs = FieldModel<address, 10, 0x00000003>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic1f = FieldModel<address, 4, 0x00000007>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc2np = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ccr1 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr2\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr2 = Ccr2Reg<BaseAddress\
    \ + 0x0038>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM9_H */\n"
  name: TIM9
- content: "#ifndef DRAL_STM32F446_TIM12_H\n#define DRAL_STM32F446_TIM12_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim12\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40001800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using opm = FieldModel<address, 3, 0x00000001>;\n    using\
    \ urs = FieldModel<address, 2, 0x00000001>;\n    using udis = FieldModel<address,\
    \ 1, 0x00000001>;\n    using cen = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mms = FieldModel<address, 4, 0x00000007>;\n  };\n\npublic:\n  using\
    \ cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SmcrReg: public RegisterModel<address>\n  {\n  public:\n    using msm\
    \ = FieldModel<address, 7, 0x00000001>;\n    using ts = FieldModel<address, 4,\
    \ 0x00000007>;\n    using sms = FieldModel<address, 0, 0x00000007>;\n  };\n\n\
    public:\n  using smcr = SmcrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tie = FieldModel<address, 6, 0x00000001>;\n    using cc2ie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using dier\
    \ = DierReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SrReg: public RegisterModel<address>\n  {\n  public:\n    using cc2of\
    \ = FieldModel<address, 10, 0x00000001>;\n    using cc1of = FieldModel<address,\
    \ 9, 0x00000001>;\n    using tif = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cc2if = FieldModel<address, 2, 0x00000001>;\n    using cc1if = FieldModel<address,\
    \ 1, 0x00000001>;\n    using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using sr = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EgrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using tg = FieldModel<address, 6, 0x00000001>;\n    using cc2g = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1g = FieldModel<address, 1, 0x00000001>;\n    using\
    \ ug = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using oc2m = FieldModel<address,\
    \ 12, 0x00000007>;\n    using oc2pe = FieldModel<address, 11, 0x00000001>;\n \
    \   using oc2fe = FieldModel<address, 10, 0x00000001>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic2f = FieldModel<address, 12, 0x00000007>;\n    using\
    \ ic2pcs = FieldModel<address, 10, 0x00000003>;\n    using cc2s = FieldModel<address,\
    \ 8, 0x00000003>;\n    using ic1f = FieldModel<address, 4, 0x00000007>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc2np = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cc2p = FieldModel<address, 5, 0x00000001>;\n    using\
    \ cc2e = FieldModel<address, 4, 0x00000001>;\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ccr1 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ccr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ccr2\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using ccr2 = Ccr2Reg<BaseAddress\
    \ + 0x0038>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM12_H */\n"
  name: TIM12
- content: "#ifndef DRAL_STM32F446_TIM10_H\n#define DRAL_STM32F446_TIM10_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim10\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40014400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DierReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n    using\
    \ uie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using dier = DierReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class SrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1of = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using cc1g\
    \ = FieldModel<address, 1, 0x00000001>;\n    using ug = FieldModel<address, 0,\
    \ 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ccr1 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM10_H\
    \ */\n"
  name: TIM10
- content: "#ifndef DRAL_STM32F446_TIM13_H\n#define DRAL_STM32F446_TIM13_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim13\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40001C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DierReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n    using\
    \ uie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using dier = DierReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class SrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1of = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using cc1g\
    \ = FieldModel<address, 1, 0x00000001>;\n    using ug = FieldModel<address, 0,\
    \ 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ccr1 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM13_H\
    \ */\n"
  name: TIM13
- content: "#ifndef DRAL_STM32F446_TIM14_H\n#define DRAL_STM32F446_TIM14_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim14\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40002000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DierReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n    using\
    \ uie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using dier = DierReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class SrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1of = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using cc1g\
    \ = FieldModel<address, 1, 0x00000001>;\n    using ug = FieldModel<address, 0,\
    \ 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ccr1 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM14_H\
    \ */\n"
  name: TIM14
- content: "#ifndef DRAL_STM32F446_TIM11_H\n#define DRAL_STM32F446_TIM11_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim11\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40014800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ckd = FieldModel<address, 8, 0x00000003>;\n    using arpe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DierReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cc1ie = FieldModel<address, 1, 0x00000001>;\n    using\
    \ uie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using dier = DierReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class SrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1of = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cc1if = FieldModel<address, 1, 0x00000001>;\n   \
    \ using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr\
    \ = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class EgrReg: public RegisterModel<address>\n  {\n  public:\n    using cc1g\
    \ = FieldModel<address, 1, 0x00000001>;\n    using ug = FieldModel<address, 0,\
    \ 0x00000001>;\n  };\n\npublic:\n  using egr = EgrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ccmr1_outputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using oc1m = FieldModel<address, 4, 0x00000007>;\n    using\
    \ oc1pe = FieldModel<address, 3, 0x00000001>;\n    using oc1fe = FieldModel<address,\
    \ 2, 0x00000001>;\n    using cc1s = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using ccmr1_output = Ccmr1_outputReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Ccmr1_inputReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ic1f = FieldModel<address, 4, 0x0000000F>;\n    using\
    \ icpcs = FieldModel<address, 2, 0x00000003>;\n    using cc1s = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using ccmr1_input = Ccmr1_inputReg<BaseAddress\
    \ + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n  class CcerReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cc1np = FieldModel<address,\
    \ 3, 0x00000001>;\n    using cc1p = FieldModel<address, 1, 0x00000001>;\n    using\
    \ cc1e = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ccer =\
    \ CcerReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ccr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ccr1 = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ ccr1 = Ccr1Reg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class OrReg: public RegisterModel<address>\n  {\n  public:\n    using rmp =\
    \ FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using or = OrReg<BaseAddress\
    \ + 0x0050>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM11_H */\n"
  name: TIM11
- content: "#ifndef DRAL_STM32F446_TIM6_H\n#define DRAL_STM32F446_TIM6_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim6\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40001000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using arpe = FieldModel<address, 7, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mms = FieldModel<address, 4, 0x00000007>;\n  };\n\n\
    public:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ude = FieldModel<address, 8, 0x00000001>;\n    using uie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using sr = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EgrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ug = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using egr\
    \ = EgrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM6_H\
    \ */\n"
  name: TIM6
- content: "#ifndef DRAL_STM32F446_TIM7_H\n#define DRAL_STM32F446_TIM7_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass tim7\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40001400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Cr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using arpe = FieldModel<address, 7, 0x00000001>;\n    using opm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using urs = FieldModel<address, 2, 0x00000001>;\n    using\
    \ udis = FieldModel<address, 1, 0x00000001>;\n    using cen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cr1 = Cr1Reg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mms = FieldModel<address, 4, 0x00000007>;\n  };\n\n\
    public:\n  using cr2 = Cr2Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class DierReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ude = FieldModel<address, 8, 0x00000001>;\n    using uie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using dier = DierReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class SrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using uif = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using sr = SrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class EgrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ug = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using egr\
    \ = EgrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CntReg: public RegisterModel<address>\n  {\n  public:\n    using cnt\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using cnt = CntReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class PscReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using psc = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using psc = PscReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ArrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using arr = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using arr = ArrReg<BaseAddress + 0x002C>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_TIM7_H\
    \ */\n"
  name: TIM7
- content: "#ifndef DRAL_STM32F446_CRC_H\n#define DRAL_STM32F446_CRC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass crc\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40023000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ dr = DrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class IdrReg: public RegisterModel<address>\n  {\n  public:\n    using idr\
    \ = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using idr = IdrReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class CrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cr = FieldModel<address, 0,\
    \ 0x00000001>;\n  };\n\npublic:\n  using cr = CrReg<BaseAddress + 0x0008>;\n\n\
    };\n\n}\n\n#endif /* DRAL_STM32F446_CRC_H */\n"
  name: CRC
- content: "#ifndef DRAL_STM32F446_OTG_FS_GLOBAL_H\n#define DRAL_STM32F446_OTG_FS_GLOBAL_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_fs_global\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x50000000;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_gotgctlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using srqscs = FieldModel<address, 0, 0x00000001>;\n    using\
    \ srq = FieldModel<address, 1, 0x00000001>;\n    using hngscs = FieldModel<address,\
    \ 8, 0x00000001>;\n    using hnprq = FieldModel<address, 9, 0x00000001>;\n   \
    \ using hshnpen = FieldModel<address, 10, 0x00000001>;\n    using dhnpen = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cidsts = FieldModel<address, 16, 0x00000001>;\n\
    \    using dbct = FieldModel<address, 17, 0x00000001>;\n    using asvld = FieldModel<address,\
    \ 18, 0x00000001>;\n    using bsvld = FieldModel<address, 19, 0x00000001>;\n \
    \ };\n\npublic:\n  using fs_gotgctl = Fs_gotgctlReg<BaseAddress + 0x0000>;\n\n\
    private:\n  template <uint32_t address>\n  class Fs_gotgintReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using sedet = FieldModel<address, 2, 0x00000001>;\n    using\
    \ srsschg = FieldModel<address, 8, 0x00000001>;\n    using hnsschg = FieldModel<address,\
    \ 9, 0x00000001>;\n    using hngdet = FieldModel<address, 17, 0x00000001>;\n \
    \   using adtochg = FieldModel<address, 18, 0x00000001>;\n    using dbcdne = FieldModel<address,\
    \ 19, 0x00000001>;\n  };\n\npublic:\n  using fs_gotgint = Fs_gotgintReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_gahbcfgReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using gint = FieldModel<address,\
    \ 0, 0x00000001>;\n    using txfelvl = FieldModel<address, 7, 0x00000001>;\n \
    \   using ptxfelvl = FieldModel<address, 8, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_gahbcfg = Fs_gahbcfgReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_gusbcfgReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using tocal = FieldModel<address, 0, 0x00000007>;\n    using physel = FieldModel<address,\
    \ 6, 0x00000001>;\n    using srpcap = FieldModel<address, 8, 0x00000001>;\n  \
    \  using hnpcap = FieldModel<address, 9, 0x00000001>;\n    using trdt = FieldModel<address,\
    \ 10, 0x0000000F>;\n    using fhmod = FieldModel<address, 29, 0x00000001>;\n \
    \   using fdmod = FieldModel<address, 30, 0x00000001>;\n    using ctxpkt = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using fs_gusbcfg = Fs_gusbcfgReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_grstctlReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using csrst = FieldModel<address,\
    \ 0, 0x00000001>;\n    using hsrst = FieldModel<address, 1, 0x00000001>;\n   \
    \ using fcrst = FieldModel<address, 2, 0x00000001>;\n    using rxfflsh = FieldModel<address,\
    \ 4, 0x00000001>;\n    using txfflsh = FieldModel<address, 5, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 6, 0x0000001F>;\n    using ahbidl = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using fs_grstctl = Fs_grstctlReg<BaseAddress\
    \ + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_gintstsReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using cmod = FieldModel<address,\
    \ 0, 0x00000001>;\n    using mmis = FieldModel<address, 1, 0x00000001>;\n    using\
    \ otgint = FieldModel<address, 2, 0x00000001>;\n    using sof = FieldModel<address,\
    \ 3, 0x00000001>;\n    using rxflvl = FieldModel<address, 4, 0x00000001>;\n  \
    \  using nptxfe = FieldModel<address, 5, 0x00000001>;\n    using ginakeff = FieldModel<address,\
    \ 6, 0x00000001>;\n    using goutnakeff = FieldModel<address, 7, 0x00000001>;\n\
    \    using esusp = FieldModel<address, 10, 0x00000001>;\n    using usbsusp = FieldModel<address,\
    \ 11, 0x00000001>;\n    using usbrst = FieldModel<address, 12, 0x00000001>;\n\
    \    using enumdne = FieldModel<address, 13, 0x00000001>;\n    using isoodrp =\
    \ FieldModel<address, 14, 0x00000001>;\n    using eopf = FieldModel<address, 15,\
    \ 0x00000001>;\n    using iepint = FieldModel<address, 18, 0x00000001>;\n    using\
    \ oepint = FieldModel<address, 19, 0x00000001>;\n    using iisoixfr = FieldModel<address,\
    \ 20, 0x00000001>;\n    using ipxfr_incompisoout = FieldModel<address, 21, 0x00000001>;\n\
    \    using hprtint = FieldModel<address, 24, 0x00000001>;\n    using hcint = FieldModel<address,\
    \ 25, 0x00000001>;\n    using ptxfe = FieldModel<address, 26, 0x00000001>;\n \
    \   using cidschg = FieldModel<address, 28, 0x00000001>;\n    using discint =\
    \ FieldModel<address, 29, 0x00000001>;\n    using srqint = FieldModel<address,\
    \ 30, 0x00000001>;\n    using wkupint = FieldModel<address, 31, 0x00000001>;\n\
    \  };\n\npublic:\n  using fs_gintsts = Fs_gintstsReg<BaseAddress + 0x0014>;\n\n\
    private:\n  template <uint32_t address>\n  class Fs_gintmskReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mmism = FieldModel<address, 1, 0x00000001>;\n    using\
    \ otgint = FieldModel<address, 2, 0x00000001>;\n    using sofm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using rxflvlm = FieldModel<address, 4, 0x00000001>;\n \
    \   using nptxfem = FieldModel<address, 5, 0x00000001>;\n    using ginakeffm =\
    \ FieldModel<address, 6, 0x00000001>;\n    using gonakeffm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using esuspm = FieldModel<address, 10, 0x00000001>;\n \
    \   using usbsuspm = FieldModel<address, 11, 0x00000001>;\n    using usbrst =\
    \ FieldModel<address, 12, 0x00000001>;\n    using enumdnem = FieldModel<address,\
    \ 13, 0x00000001>;\n    using isoodrpm = FieldModel<address, 14, 0x00000001>;\n\
    \    using eopfm = FieldModel<address, 15, 0x00000001>;\n    using epmism = FieldModel<address,\
    \ 17, 0x00000001>;\n    using iepint = FieldModel<address, 18, 0x00000001>;\n\
    \    using oepint = FieldModel<address, 19, 0x00000001>;\n    using iisoixfrm\
    \ = FieldModel<address, 20, 0x00000001>;\n    using ipxfrm_iisooxfrm = FieldModel<address,\
    \ 21, 0x00000001>;\n    using prtim = FieldModel<address, 24, 0x00000001>;\n \
    \   using hcim = FieldModel<address, 25, 0x00000001>;\n    using ptxfem = FieldModel<address,\
    \ 26, 0x00000001>;\n    using cidschgm = FieldModel<address, 28, 0x00000001>;\n\
    \    using discint = FieldModel<address, 29, 0x00000001>;\n    using srqim = FieldModel<address,\
    \ 30, 0x00000001>;\n    using wuim = FieldModel<address, 31, 0x00000001>;\n  };\n\
    \npublic:\n  using fs_gintmsk = Fs_gintmskReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_grxstsr_deviceReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ bcnt = FieldModel<address, 4, 0x000007FF>;\n    using dpid = FieldModel<address,\
    \ 15, 0x00000003>;\n    using pktsts = FieldModel<address, 17, 0x0000000F>;\n\
    \    using frmnum = FieldModel<address, 21, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ fs_grxstsr_device = Fs_grxstsr_deviceReg<BaseAddress + 0x001C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_grxstsp_deviceReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ bcnt = FieldModel<address, 4, 0x000007FF>;\n    using dpid = FieldModel<address,\
    \ 15, 0x00000003>;\n    using pktsts = FieldModel<address, 17, 0x0000000F>;\n\
    \    using frmnum = FieldModel<address, 21, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ fs_grxstsp_device = Fs_grxstsp_deviceReg<BaseAddress + 0x0020>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_grxstsr_hostReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ bcnt = FieldModel<address, 4, 0x000007FF>;\n    using dpid = FieldModel<address,\
    \ 15, 0x00000003>;\n    using pktsts = FieldModel<address, 17, 0x0000000F>;\n\
    \    using frmnum = FieldModel<address, 21, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ fs_grxstsr_host = Fs_grxstsr_hostReg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Fs_grxstsp_hostReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ bcnt = FieldModel<address, 4, 0x000007FF>;\n    using dpid = FieldModel<address,\
    \ 15, 0x00000003>;\n    using pktsts = FieldModel<address, 17, 0x0000000F>;\n\
    \    using frmnum = FieldModel<address, 21, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ fs_grxstsp_host = Fs_grxstsp_hostReg<BaseAddress + 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Fs_grxfsizReg: public RegisterModel<address>\n \
    \ {\n  public:\n    using rxfd = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\n\
    public:\n  using fs_grxfsiz = Fs_grxfsizReg<BaseAddress + 0x0024>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_gnptxfsiz_deviceReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tx0fsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ tx0fd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using fs_gnptxfsiz_device\
    \ = Fs_gnptxfsiz_deviceReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_gnptxfsiz_hostReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using nptxfsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ nptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using fs_gnptxfsiz_host\
    \ = Fs_gnptxfsiz_hostReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_gnptxstsReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using nptxfsav = FieldModel<address, 0, 0x0000FFFF>;\n    using nptqxsav\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using nptxqtop = FieldModel<address,\
    \ 24, 0x0000007F>;\n  };\n\npublic:\n  using fs_gnptxsts = Fs_gnptxstsReg<BaseAddress\
    \ + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_gccfgReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using pwrdwn = FieldModel<address,\
    \ 16, 0x00000001>;\n    using vbusasen = FieldModel<address, 18, 0x00000001>;\n\
    \    using vbusbsen = FieldModel<address, 19, 0x00000001>;\n    using sofouten\
    \ = FieldModel<address, 20, 0x00000001>;\n  };\n\npublic:\n  using fs_gccfg =\
    \ Fs_gccfgReg<BaseAddress + 0x0038>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Fs_cidReg: public RegisterModel<address>\n  {\n  public:\n    using product_id\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using fs_cid = Fs_cidReg<BaseAddress\
    \ + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hptxfsizReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ptxsa = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n    using ptxfsiz = FieldModel<address, 16, 0x0000FFFF>;\n\
    \  };\n\npublic:\n  using fs_hptxfsiz = Fs_hptxfsizReg<BaseAddress + 0x0100>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Fs_dieptxf1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n  \
    \  using ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ fs_dieptxf1 = Fs_dieptxf1Reg<BaseAddress + 0x0104>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Fs_dieptxf2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n  \
    \  using ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ fs_dieptxf2 = Fs_dieptxf2Reg<BaseAddress + 0x0108>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Fs_dieptxf3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n  \
    \  using ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ fs_dieptxf3 = Fs_dieptxf3Reg<BaseAddress + 0x010C>;\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class Fs_grxstsx_deviceBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F,\
    \ bankOffset>;\n    using bcnt = FieldModel<address, 4, 0x000007FF, bankOffset>;\n\
    \    using dpid = FieldModel<address, 15, 0x00000003, bankOffset>;\n    using\
    \ pktsts = FieldModel<address, 17, 0x0000000F, bankOffset>;\n    using frmnum\
    \ = FieldModel<address, 21, 0x0000000F, bankOffset>;\n  };\n\npublic:\n  using\
    \ fs_grxstsx_device = Fs_grxstsx_deviceBankReg<BaseAddress + 0x001C, 0x0004>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Fs_grxstsx_hostBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using epnum\
    \ = FieldModel<address, 0, 0x0000000F, bankOffset>;\n    using bcnt = FieldModel<address,\
    \ 4, 0x000007FF, bankOffset>;\n    using dpid = FieldModel<address, 15, 0x00000003,\
    \ bankOffset>;\n    using pktsts = FieldModel<address, 17, 0x0000000F, bankOffset>;\n\
    \    using frmnum = FieldModel<address, 21, 0x0000000F, bankOffset>;\n  };\n\n\
    public:\n  using fs_grxstsx_host = Fs_grxstsx_hostBankReg<BaseAddress + 0x001C,\
    \ 0x0004>;\n};\n\n}\n\n#endif /* DRAL_STM32F446_OTG_FS_GLOBAL_H */\n"
  name: OTG_FS_GLOBAL
- content: "#ifndef DRAL_STM32F446_OTG_FS_HOST_H\n#define DRAL_STM32F446_OTG_FS_HOST_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_fs_host\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x50000400;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_hcfgReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fslspcs = FieldModel<address, 0, 0x00000003>;\n   \
    \ using fslss = FieldModel<address, 2, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcfg = Fs_hcfgReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class HfirReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using frivl = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ hfir = HfirReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Fs_hfnumReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ frnum = FieldModel<address, 0, 0x0000FFFF>;\n    using ftrem = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n  };\n\npublic:\n  using fs_hfnum = Fs_hfnumReg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hptxstsReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ptxfsavl = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n    using ptxqsav = FieldModel<address, 16, 0x000000FF>;\n\
    \    using ptxqtop = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n \
    \ using fs_hptxsts = Fs_hptxstsReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class HaintReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using haint = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n\
    \  using haint = HaintReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class HaintmskReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using haintm = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ haintmsk = HaintmskReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hprtReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using pcsts = FieldModel<address, 0, 0x00000001>;\n    using pcdet = FieldModel<address,\
    \ 1, 0x00000001>;\n    using pena = FieldModel<address, 2, 0x00000001>;\n    using\
    \ penchng = FieldModel<address, 3, 0x00000001>;\n    using poca = FieldModel<address,\
    \ 4, 0x00000001>;\n    using pocchng = FieldModel<address, 5, 0x00000001>;\n \
    \   using pres = FieldModel<address, 6, 0x00000001>;\n    using psusp = FieldModel<address,\
    \ 7, 0x00000001>;\n    using prst = FieldModel<address, 8, 0x00000001>;\n    using\
    \ plsts = FieldModel<address, 10, 0x00000003>;\n    using ppwr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using ptctl = FieldModel<address, 13, 0x0000000F>;\n \
    \   using pspd = FieldModel<address, 17, 0x00000003>;\n  };\n\npublic:\n  using\
    \ fs_hprt = Fs_hprtReg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar0Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar0 = Fs_hcchar0Reg<BaseAddress + 0x0100>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar1 = Fs_hcchar1Reg<BaseAddress + 0x0120>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar2 = Fs_hcchar2Reg<BaseAddress + 0x0140>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar3 = Fs_hcchar3Reg<BaseAddress + 0x0160>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar4Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar4 = Fs_hcchar4Reg<BaseAddress + 0x0180>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar5Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar5 = Fs_hcchar5Reg<BaseAddress + 0x01A0>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar6Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar6 = Fs_hcchar6Reg<BaseAddress + 0x01C0>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcchar7Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F>;\n    using epdir = FieldModel<address, 15, 0x00000001>;\n \
    \   using lsdev = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using mcnt = FieldModel<address, 20, 0x00000003>;\n  \
    \  using dad = FieldModel<address, 22, 0x0000007F>;\n    using oddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using chdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using chena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcchar7 = Fs_hcchar7Reg<BaseAddress + 0x01E0>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcint0Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using chh = FieldModel<address,\
    \ 1, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using txerr = FieldModel<address, 7, 0x00000001>;\n   \
    \ using bberr = FieldModel<address, 8, 0x00000001>;\n    using frmor = FieldModel<address,\
    \ 9, 0x00000001>;\n    using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\
    \npublic:\n  using fs_hcint0 = Fs_hcint0Reg<BaseAddress + 0x0108>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_hcint1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using stall = FieldModel<address,\
    \ 3, 0x00000001>;\n    using nak = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ack = FieldModel<address, 5, 0x00000001>;\n    using txerr = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberr = FieldModel<address, 8, 0x00000001>;\n   \
    \ using frmor = FieldModel<address, 9, 0x00000001>;\n    using dterr = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcint1 = Fs_hcint1Reg<BaseAddress\
    \ + 0x0128>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcint2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chh = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stall = FieldModel<address, 3, 0x00000001>;\n    using nak = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ack = FieldModel<address, 5, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcint2 = Fs_hcint2Reg<BaseAddress + 0x0148>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcint3Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using chh = FieldModel<address,\
    \ 1, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using txerr = FieldModel<address, 7, 0x00000001>;\n   \
    \ using bberr = FieldModel<address, 8, 0x00000001>;\n    using frmor = FieldModel<address,\
    \ 9, 0x00000001>;\n    using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\
    \npublic:\n  using fs_hcint3 = Fs_hcint3Reg<BaseAddress + 0x0168>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_hcint4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using stall = FieldModel<address,\
    \ 3, 0x00000001>;\n    using nak = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ack = FieldModel<address, 5, 0x00000001>;\n    using txerr = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberr = FieldModel<address, 8, 0x00000001>;\n   \
    \ using frmor = FieldModel<address, 9, 0x00000001>;\n    using dterr = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcint4 = Fs_hcint4Reg<BaseAddress\
    \ + 0x0188>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcint5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chh = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stall = FieldModel<address, 3, 0x00000001>;\n    using nak = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ack = FieldModel<address, 5, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_hcint5 = Fs_hcint5Reg<BaseAddress + 0x01A8>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hcint6Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using chh = FieldModel<address,\
    \ 1, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using txerr = FieldModel<address, 7, 0x00000001>;\n   \
    \ using bberr = FieldModel<address, 8, 0x00000001>;\n    using frmor = FieldModel<address,\
    \ 9, 0x00000001>;\n    using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\
    \npublic:\n  using fs_hcint6 = Fs_hcint6Reg<BaseAddress + 0x01C8>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_hcint7Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using stall = FieldModel<address,\
    \ 3, 0x00000001>;\n    using nak = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ack = FieldModel<address, 5, 0x00000001>;\n    using txerr = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberr = FieldModel<address, 8, 0x00000001>;\n   \
    \ using frmor = FieldModel<address, 9, 0x00000001>;\n    using dterr = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcint7 = Fs_hcint7Reg<BaseAddress\
    \ + 0x01E8>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk0 = Fs_hcintmsk0Reg<BaseAddress\
    \ + 0x010C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk1 = Fs_hcintmsk1Reg<BaseAddress\
    \ + 0x012C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk2 = Fs_hcintmsk2Reg<BaseAddress\
    \ + 0x014C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk3 = Fs_hcintmsk3Reg<BaseAddress\
    \ + 0x016C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk4Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk4 = Fs_hcintmsk4Reg<BaseAddress\
    \ + 0x018C>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk5 = Fs_hcintmsk5Reg<BaseAddress\
    \ + 0x01AC>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk6Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk6 = Fs_hcintmsk6Reg<BaseAddress\
    \ + 0x01CC>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hcintmsk7Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chhm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stallm = FieldModel<address, 3, 0x00000001>;\n    using nakm = FieldModel<address,\
    \ 4, 0x00000001>;\n    using ackm = FieldModel<address, 5, 0x00000001>;\n    using\
    \ nyet = FieldModel<address, 6, 0x00000001>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using bberrm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using frmorm = FieldModel<address, 9, 0x00000001>;\n    using dterrm = FieldModel<address,\
    \ 10, 0x00000001>;\n  };\n\npublic:\n  using fs_hcintmsk7 = Fs_hcintmsk7Reg<BaseAddress\
    \ + 0x01EC>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hctsiz0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ fs_hctsiz0 = Fs_hctsiz0Reg<BaseAddress + 0x0110>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hctsiz1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address,\
    \ 19, 0x000003FF>;\n    using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\
    \npublic:\n  using fs_hctsiz1 = Fs_hctsiz1Reg<BaseAddress + 0x0130>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_hctsiz2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using fs_hctsiz2 = Fs_hctsiz2Reg<BaseAddress\
    \ + 0x0150>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hctsiz3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ fs_hctsiz3 = Fs_hctsiz3Reg<BaseAddress + 0x0170>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hctsiz4Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address,\
    \ 19, 0x000003FF>;\n    using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\
    \npublic:\n  using fs_hctsiz4 = Fs_hctsiz4Reg<BaseAddress + 0x0190>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_hctsiz5Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using fs_hctsiz5 = Fs_hctsiz5Reg<BaseAddress\
    \ + 0x01B0>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_hctsiz6Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ fs_hctsiz6 = Fs_hctsiz6Reg<BaseAddress + 0x01D0>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_hctsiz7Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address,\
    \ 19, 0x000003FF>;\n    using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\
    \npublic:\n  using fs_hctsiz7 = Fs_hctsiz7Reg<BaseAddress + 0x01F0>;\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class Fs_hccharxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using mpsiz\
    \ = FieldModel<address, 0, 0x000007FF, bankOffset>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F, bankOffset>;\n    using epdir = FieldModel<address, 15, 0x00000001,\
    \ bankOffset>;\n    using lsdev = FieldModel<address, 17, 0x00000001, bankOffset>;\n\
    \    using eptyp = FieldModel<address, 18, 0x00000003, bankOffset>;\n    using\
    \ mcnt = FieldModel<address, 20, 0x00000003, bankOffset>;\n    using dad = FieldModel<address,\
    \ 22, 0x0000007F, bankOffset>;\n    using oddfrm = FieldModel<address, 29, 0x00000001,\
    \ bankOffset>;\n    using chdis = FieldModel<address, 30, 0x00000001, bankOffset>;\n\
    \    using chena = FieldModel<address, 31, 0x00000001, bankOffset>;\n  };\n\n\
    public:\n  using fs_hccharx = Fs_hccharxBankReg<BaseAddress + 0x0100, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Fs_hcintxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using xfrc\
    \ = FieldModel<address, 0, 0x00000001, bankOffset>;\n    using chh = FieldModel<address,\
    \ 1, 0x00000001, bankOffset>;\n    using stall = FieldModel<address, 3, 0x00000001,\
    \ bankOffset>;\n    using nak = FieldModel<address, 4, 0x00000001, bankOffset>;\n\
    \    using ack = FieldModel<address, 5, 0x00000001, bankOffset>;\n    using txerr\
    \ = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001, bankOffset>;\n    using frmor = FieldModel<address, 9, 0x00000001,\
    \ bankOffset>;\n    using dterr = FieldModel<address, 10, 0x00000001, bankOffset>;\n\
    \  };\n\npublic:\n  using fs_hcintx = Fs_hcintxBankReg<BaseAddress + 0x0108, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Fs_hcintmskxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using xfrcm\
    \ = FieldModel<address, 0, 0x00000001, bankOffset>;\n    using chhm = FieldModel<address,\
    \ 1, 0x00000001, bankOffset>;\n    using stallm = FieldModel<address, 3, 0x00000001,\
    \ bankOffset>;\n    using nakm = FieldModel<address, 4, 0x00000001, bankOffset>;\n\
    \    using ackm = FieldModel<address, 5, 0x00000001, bankOffset>;\n    using nyet\
    \ = FieldModel<address, 6, 0x00000001, bankOffset>;\n    using txerrm = FieldModel<address,\
    \ 7, 0x00000001, bankOffset>;\n    using bberrm = FieldModel<address, 8, 0x00000001,\
    \ bankOffset>;\n    using frmorm = FieldModel<address, 9, 0x00000001, bankOffset>;\n\
    \    using dterrm = FieldModel<address, 10, 0x00000001, bankOffset>;\n  };\n\n\
    public:\n  using fs_hcintmskx = Fs_hcintmskxBankReg<BaseAddress + 0x010C, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Fs_hctsizxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using xfrsiz\
    \ = FieldModel<address, 0, 0x0007FFFF, bankOffset>;\n    using pktcnt = FieldModel<address,\
    \ 19, 0x000003FF, bankOffset>;\n    using dpid = FieldModel<address, 29, 0x00000003,\
    \ bankOffset>;\n  };\n\npublic:\n  using fs_hctsizx = Fs_hctsizxBankReg<BaseAddress\
    \ + 0x0110, 0x0020>;\n};\n\n}\n\n#endif /* DRAL_STM32F446_OTG_FS_HOST_H */\n"
  name: OTG_FS_HOST
- content: "#ifndef DRAL_STM32F446_OTG_FS_DEVICE_H\n#define DRAL_STM32F446_OTG_FS_DEVICE_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_fs_device\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x50000800;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_dcfgReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dspd = FieldModel<address, 0, 0x00000003>;\n    using\
    \ nzlsohsk = FieldModel<address, 2, 0x00000001>;\n    using dad = FieldModel<address,\
    \ 4, 0x0000007F>;\n    using pfivl = FieldModel<address, 11, 0x00000003>;\n  \
    \  using erratim = FieldModel<address, 15, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_dcfg = Fs_dcfgReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_dctlReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using rwusig = FieldModel<address, 0, 0x00000001>;\n    using sdis = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ginsts = FieldModel<address, 2, 0x00000001>;\n  \
    \  using gonsts = FieldModel<address, 3, 0x00000001>;\n    using tctl = FieldModel<address,\
    \ 4, 0x00000007>;\n    using sginak = FieldModel<address, 7, 0x00000001>;\n  \
    \  using cginak = FieldModel<address, 8, 0x00000001>;\n    using sgonak = FieldModel<address,\
    \ 9, 0x00000001>;\n    using cgonak = FieldModel<address, 10, 0x00000001>;\n \
    \   using poprgdne = FieldModel<address, 11, 0x00000001>;\n  };\n\npublic:\n \
    \ using fs_dctl = Fs_dctlReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Fs_dstsReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using suspsts = FieldModel<address, 0, 0x00000001>;\n    using enumspd =\
    \ FieldModel<address, 1, 0x00000003>;\n    using eerr = FieldModel<address, 3,\
    \ 0x00000001>;\n    using fnsof = FieldModel<address, 8, 0x00003FFF>;\n  };\n\n\
    public:\n  using fs_dsts = Fs_dstsReg<BaseAddress + 0x0008>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Fs_diepmskReg: public RegisterModel<address>\n \
    \ {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ epdm = FieldModel<address, 1, 0x00000001>;\n    using tom = FieldModel<address,\
    \ 3, 0x00000001>;\n    using ittxfemsk = FieldModel<address, 4, 0x00000001>;\n\
    \    using inepnmm = FieldModel<address, 5, 0x00000001>;\n    using inepnem =\
    \ FieldModel<address, 6, 0x00000001>;\n  };\n\npublic:\n  using fs_diepmsk = Fs_diepmskReg<BaseAddress\
    \ + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_doepmskReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ stupm = FieldModel<address, 3, 0x00000001>;\n    using otepdm = FieldModel<address,\
    \ 4, 0x00000001>;\n  };\n\npublic:\n  using fs_doepmsk = Fs_doepmskReg<BaseAddress\
    \ + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n  class Fs_daintReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using iepint = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n    using oepint = FieldModel<address, 16, 0x0000FFFF>;\n \
    \ };\n\npublic:\n  using fs_daint = Fs_daintReg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_daintmskReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using iepm = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ oepm = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using fs_daintmsk\
    \ = Fs_daintmskReg<BaseAddress + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class DvbusdisReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ vbusdt = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dvbusdis\
    \ = DvbusdisReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class DvbuspulseReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ dvbusp = FieldModel<address, 0, 0x00000FFF>;\n  };\n\npublic:\n  using dvbuspulse\
    \ = DvbuspulseReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class DiepempmskReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ ineptxfem = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using diepempmsk\
    \ = DiepempmskReg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Fs_diepctl0Reg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ mpsiz = FieldModel<address, 0, 0x00000003>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001>;\n    using naksts = FieldModel<address, 17, 0x00000001>;\n\
    \    using eptyp = FieldModel<address, 18, 0x00000003>;\n    using stall = FieldModel<address,\
    \ 21, 0x00000001>;\n    using txfnum = FieldModel<address, 22, 0x0000000F>;\n\
    \    using cnak = FieldModel<address, 26, 0x00000001>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001>;\n    using epdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using epena = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ fs_diepctl0 = Fs_diepctl0Reg<BaseAddress + 0x0100>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Diepctl1Reg: public RegisterModel<address>\n  {\n\
    \  public:\n    using epena = FieldModel<address, 31, 0x00000001>;\n    using\
    \ epdis = FieldModel<address, 30, 0x00000001>;\n    using soddfrm_sd1pid = FieldModel<address,\
    \ 29, 0x00000001>;\n    using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n\
    \    using snak = FieldModel<address, 27, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using txfnum = FieldModel<address, 22, 0x0000000F>;\n\
    \    using stall = FieldModel<address, 21, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using naksts = FieldModel<address, 17, 0x00000001>;\n\
    \    using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using usbaep\
    \ = FieldModel<address, 15, 0x00000001>;\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n  };\n\npublic:\n  using diepctl1 = Diepctl1Reg<BaseAddress\
    \ + 0x0120>;\n\nprivate:\n  template <uint32_t address>\n  class Diepctl2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using epena = FieldModel<address,\
    \ 31, 0x00000001>;\n    using epdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using soddfrm = FieldModel<address, 29, 0x00000001>;\n    using sd0pid_sevnfrm\
    \ = FieldModel<address, 28, 0x00000001>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001>;\n    using cnak = FieldModel<address, 26, 0x00000001>;\n  \
    \  using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using stall = FieldModel<address,\
    \ 21, 0x00000001>;\n    using eptyp = FieldModel<address, 18, 0x00000003>;\n \
    \   using naksts = FieldModel<address, 17, 0x00000001>;\n    using eonum_dpid\
    \ = FieldModel<address, 16, 0x00000001>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001>;\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n  };\n\
    \npublic:\n  using diepctl2 = Diepctl2Reg<BaseAddress + 0x0140>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Diepctl3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epena = FieldModel<address, 31, 0x00000001>;\n    using\
    \ epdis = FieldModel<address, 30, 0x00000001>;\n    using soddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n\
    \    using snak = FieldModel<address, 27, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using txfnum = FieldModel<address, 22, 0x0000000F>;\n\
    \    using stall = FieldModel<address, 21, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using naksts = FieldModel<address, 17, 0x00000001>;\n\
    \    using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using usbaep\
    \ = FieldModel<address, 15, 0x00000001>;\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n  };\n\npublic:\n  using diepctl3 = Diepctl3Reg<BaseAddress\
    \ + 0x0160>;\n\nprivate:\n  template <uint32_t address>\n  class Doepctl0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using epena = FieldModel<address,\
    \ 31, 0x00000001>;\n    using epdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using snak = FieldModel<address, 27, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using snpm = FieldModel<address, 20, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using naksts = FieldModel<address, 17, 0x00000001>;\n\
    \    using usbaep = FieldModel<address, 15, 0x00000001>;\n    using mpsiz = FieldModel<address,\
    \ 0, 0x00000003>;\n  };\n\npublic:\n  using doepctl0 = Doepctl0Reg<BaseAddress\
    \ + 0x0300>;\n\nprivate:\n  template <uint32_t address>\n  class Doepctl1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using epena = FieldModel<address,\
    \ 31, 0x00000001>;\n    using epdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using soddfrm = FieldModel<address, 29, 0x00000001>;\n    using sd0pid_sevnfrm\
    \ = FieldModel<address, 28, 0x00000001>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001>;\n    using cnak = FieldModel<address, 26, 0x00000001>;\n  \
    \  using stall = FieldModel<address, 21, 0x00000001>;\n    using snpm = FieldModel<address,\
    \ 20, 0x00000001>;\n    using eptyp = FieldModel<address, 18, 0x00000003>;\n \
    \   using naksts = FieldModel<address, 17, 0x00000001>;\n    using eonum_dpid\
    \ = FieldModel<address, 16, 0x00000001>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001>;\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n  };\n\
    \npublic:\n  using doepctl1 = Doepctl1Reg<BaseAddress + 0x0320>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Doepctl2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epena = FieldModel<address, 31, 0x00000001>;\n    using\
    \ epdis = FieldModel<address, 30, 0x00000001>;\n    using soddfrm = FieldModel<address,\
    \ 29, 0x00000001>;\n    using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n\
    \    using snak = FieldModel<address, 27, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using snpm = FieldModel<address, 20, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using naksts = FieldModel<address, 17, 0x00000001>;\n\
    \    using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using usbaep\
    \ = FieldModel<address, 15, 0x00000001>;\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n  };\n\npublic:\n  using doepctl2 = Doepctl2Reg<BaseAddress\
    \ + 0x0340>;\n\nprivate:\n  template <uint32_t address>\n  class Doepctl3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using epena = FieldModel<address,\
    \ 31, 0x00000001>;\n    using epdis = FieldModel<address, 30, 0x00000001>;\n \
    \   using soddfrm = FieldModel<address, 29, 0x00000001>;\n    using sd0pid_sevnfrm\
    \ = FieldModel<address, 28, 0x00000001>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001>;\n    using cnak = FieldModel<address, 26, 0x00000001>;\n  \
    \  using stall = FieldModel<address, 21, 0x00000001>;\n    using snpm = FieldModel<address,\
    \ 20, 0x00000001>;\n    using eptyp = FieldModel<address, 18, 0x00000003>;\n \
    \   using naksts = FieldModel<address, 17, 0x00000001>;\n    using eonum_dpid\
    \ = FieldModel<address, 16, 0x00000001>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001>;\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n  };\n\
    \npublic:\n  using doepctl3 = Doepctl3Reg<BaseAddress + 0x0360>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Diepint0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using txfe = FieldModel<address, 7, 0x00000001>;\n    using\
    \ inepne = FieldModel<address, 6, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using toc = FieldModel<address, 3, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using diepint0 = Diepint0Reg<BaseAddress\
    \ + 0x0108>;\n\nprivate:\n  template <uint32_t address>\n  class Diepint1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using txfe = FieldModel<address,\
    \ 7, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using ittxfe = FieldModel<address, 4, 0x00000001>;\n    using toc = FieldModel<address,\
    \ 3, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using xfrc = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ diepint1 = Diepint1Reg<BaseAddress + 0x0128>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Diepint2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using txfe = FieldModel<address, 7, 0x00000001>;\n    using inepne = FieldModel<address,\
    \ 6, 0x00000001>;\n    using ittxfe = FieldModel<address, 4, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using epdisd = FieldModel<address,\
    \ 1, 0x00000001>;\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using diepint2 = Diepint2Reg<BaseAddress + 0x0148>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Diepint3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using txfe = FieldModel<address, 7, 0x00000001>;\n    using\
    \ inepne = FieldModel<address, 6, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using toc = FieldModel<address, 3, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using diepint3 = Diepint3Reg<BaseAddress\
    \ + 0x0168>;\n\nprivate:\n  template <uint32_t address>\n  class Doepint0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using b2bstup = FieldModel<address,\
    \ 6, 0x00000001>;\n    using otepdis = FieldModel<address, 4, 0x00000001>;\n \
    \   using stup = FieldModel<address, 3, 0x00000001>;\n    using epdisd = FieldModel<address,\
    \ 1, 0x00000001>;\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using doepint0 = Doepint0Reg<BaseAddress + 0x0308>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Doepint1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using b2bstup = FieldModel<address, 6, 0x00000001>;\n   \
    \ using otepdis = FieldModel<address, 4, 0x00000001>;\n    using stup = FieldModel<address,\
    \ 3, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using xfrc = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ doepint1 = Doepint1Reg<BaseAddress + 0x0328>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Doepint2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using b2bstup = FieldModel<address, 6, 0x00000001>;\n    using otepdis =\
    \ FieldModel<address, 4, 0x00000001>;\n    using stup = FieldModel<address, 3,\
    \ 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n    using\
    \ xfrc = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using doepint2\
    \ = Doepint2Reg<BaseAddress + 0x0348>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Doepint3Reg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ b2bstup = FieldModel<address, 6, 0x00000001>;\n    using otepdis = FieldModel<address,\
    \ 4, 0x00000001>;\n    using stup = FieldModel<address, 3, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using doepint3 = Doepint3Reg<BaseAddress\
    \ + 0x0368>;\n\nprivate:\n  template <uint32_t address>\n  class Dieptsiz0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using pktcnt = FieldModel<address,\
    \ 19, 0x00000003>;\n    using xfrsiz = FieldModel<address, 0, 0x0000007F>;\n \
    \ };\n\npublic:\n  using dieptsiz0 = Dieptsiz0Reg<BaseAddress + 0x0110>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Doeptsiz0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using stupcnt = FieldModel<address, 29, 0x00000003>;\n  \
    \  using pktcnt = FieldModel<address, 19, 0x00000001>;\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0000007F>;\n  };\n\npublic:\n  using doeptsiz0 = Doeptsiz0Reg<BaseAddress\
    \ + 0x0310>;\n\nprivate:\n  template <uint32_t address>\n  class Dieptsiz1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using mcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n\
    \    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n  };\n\npublic:\n  using\
    \ dieptsiz1 = Dieptsiz1Reg<BaseAddress + 0x0130>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Dieptsiz2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mcnt = FieldModel<address, 29, 0x00000003>;\n    using pktcnt = FieldModel<address,\
    \ 19, 0x000003FF>;\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n \
    \ };\n\npublic:\n  using dieptsiz2 = Dieptsiz2Reg<BaseAddress + 0x0150>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Dieptsiz3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mcnt = FieldModel<address, 29, 0x00000003>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n  };\n\npublic:\n  using dieptsiz3 = Dieptsiz3Reg<BaseAddress\
    \ + 0x0170>;\n\nprivate:\n  template <uint32_t address>\n  class Dtxfsts0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dtxfsts0 = Dtxfsts0Reg<BaseAddress\
    \ + 0x0118>;\n\nprivate:\n  template <uint32_t address>\n  class Dtxfsts1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dtxfsts1 = Dtxfsts1Reg<BaseAddress\
    \ + 0x0138>;\n\nprivate:\n  template <uint32_t address>\n  class Dtxfsts2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dtxfsts2 = Dtxfsts2Reg<BaseAddress\
    \ + 0x0158>;\n\nprivate:\n  template <uint32_t address>\n  class Dtxfsts3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using dtxfsts3 = Dtxfsts3Reg<BaseAddress\
    \ + 0x0178>;\n\nprivate:\n  template <uint32_t address>\n  class Doeptsiz1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using rxdpid_stupcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n\
    \    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n  };\n\npublic:\n  using\
    \ doeptsiz1 = Doeptsiz1Reg<BaseAddress + 0x0330>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Doeptsiz2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using rxdpid_stupcnt = FieldModel<address, 29, 0x00000003>;\n    using pktcnt\
    \ = FieldModel<address, 19, 0x000003FF>;\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n  };\n\npublic:\n  using doeptsiz2 = Doeptsiz2Reg<BaseAddress\
    \ + 0x0350>;\n\nprivate:\n  template <uint32_t address>\n  class Doeptsiz3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using rxdpid_stupcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n\
    \    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n  };\n\npublic:\n  using\
    \ doeptsiz3 = Doeptsiz3Reg<BaseAddress + 0x0370>;\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class DiepctlxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using epena = FieldModel<address, 31, 0x00000001,\
    \ bankOffset>;\n    using epdis = FieldModel<address, 30, 0x00000001, bankOffset>;\n\
    \    using soddfrm = FieldModel<address, 29, 0x00000001, bankOffset>;\n    using\
    \ sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001, bankOffset>;\n    using\
    \ snak = FieldModel<address, 27, 0x00000001, bankOffset>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001, bankOffset>;\n    using txfnum = FieldModel<address, 22, 0x0000000F,\
    \ bankOffset>;\n    using stall = FieldModel<address, 21, 0x00000001, bankOffset>;\n\
    \    using eptyp = FieldModel<address, 18, 0x00000003, bankOffset>;\n    using\
    \ naksts = FieldModel<address, 17, 0x00000001, bankOffset>;\n    using eonum_dpid\
    \ = FieldModel<address, 16, 0x00000001, bankOffset>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001, bankOffset>;\n    using mpsiz = FieldModel<address, 0, 0x000007FF,\
    \ bankOffset>;\n  };\n\npublic:\n  using diepctlx = DiepctlxBankReg<BaseAddress\
    \ + 0x0140, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class DoepctlxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n\
    \  public:\n    using epena = FieldModel<address, 31, 0x00000001, bankOffset>;\n\
    \    using epdis = FieldModel<address, 30, 0x00000001, bankOffset>;\n    using\
    \ soddfrm = FieldModel<address, 29, 0x00000001, bankOffset>;\n    using sd0pid_sevnfrm\
    \ = FieldModel<address, 28, 0x00000001, bankOffset>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001, bankOffset>;\n    using cnak = FieldModel<address, 26, 0x00000001,\
    \ bankOffset>;\n    using stall = FieldModel<address, 21, 0x00000001, bankOffset>;\n\
    \    using snpm = FieldModel<address, 20, 0x00000001, bankOffset>;\n    using\
    \ eptyp = FieldModel<address, 18, 0x00000003, bankOffset>;\n    using naksts =\
    \ FieldModel<address, 17, 0x00000001, bankOffset>;\n    using eonum_dpid = FieldModel<address,\
    \ 16, 0x00000001, bankOffset>;\n    using usbaep = FieldModel<address, 15, 0x00000001,\
    \ bankOffset>;\n    using mpsiz = FieldModel<address, 0, 0x000007FF, bankOffset>;\n\
    \  };\n\npublic:\n  using doepctlx = DoepctlxBankReg<BaseAddress + 0x0320, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class DiepintxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using txfe\
    \ = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using inepne = FieldModel<address,\
    \ 6, 0x00000001, bankOffset>;\n    using ittxfe = FieldModel<address, 4, 0x00000001,\
    \ bankOffset>;\n    using toc = FieldModel<address, 3, 0x00000001, bankOffset>;\n\
    \    using epdisd = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using\
    \ xfrc = FieldModel<address, 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using\
    \ diepintx = DiepintxBankReg<BaseAddress + 0x0108, 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class DoepintxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using b2bstup = FieldModel<address, 6, 0x00000001,\
    \ bankOffset>;\n    using otepdis = FieldModel<address, 4, 0x00000001, bankOffset>;\n\
    \    using stup = FieldModel<address, 3, 0x00000001, bankOffset>;\n    using epdisd\
    \ = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using doepintx = DoepintxBankReg<BaseAddress\
    \ + 0x0308, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class DieptsizxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n\
    \  public:\n    using mcnt = FieldModel<address, 29, 0x00000003, bankOffset>;\n\
    \    using pktcnt = FieldModel<address, 19, 0x000003FF, bankOffset>;\n    using\
    \ xfrsiz = FieldModel<address, 0, 0x0007FFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using dieptsizx = DieptsizxBankReg<BaseAddress + 0x0130, 0x0020>;\n\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class DtxfstsxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using ineptfsav\
    \ = FieldModel<address, 0, 0x0000FFFF, bankOffset>;\n  };\n\npublic:\n  using\
    \ dtxfstsx = DtxfstsxBankReg<BaseAddress + 0x0118, 0x0020>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class DoeptsizxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using rxdpid_stupcnt = FieldModel<address,\
    \ 29, 0x00000003, bankOffset>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF,\
    \ bankOffset>;\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF, bankOffset>;\n\
    \  };\n\npublic:\n  using doeptsizx = DoeptsizxBankReg<BaseAddress + 0x0330, 0x0020>;\n\
    };\n\n}\n\n#endif /* DRAL_STM32F446_OTG_FS_DEVICE_H */\n"
  name: OTG_FS_DEVICE
- content: "#ifndef DRAL_STM32F446_OTG_FS_PWRCLK_H\n#define DRAL_STM32F446_OTG_FS_PWRCLK_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_fs_pwrclk\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x50000E00;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fs_pcgcctlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using stppclk = FieldModel<address, 0, 0x00000001>;\n   \
    \ using gatehclk = FieldModel<address, 1, 0x00000001>;\n    using physusp = FieldModel<address,\
    \ 4, 0x00000001>;\n  };\n\npublic:\n  using fs_pcgcctl = Fs_pcgcctlReg<BaseAddress\
    \ + 0x0000>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_OTG_FS_PWRCLK_H */\n"
  name: OTG_FS_PWRCLK
- content: "#ifndef DRAL_STM32F446_CAN1_H\n#define DRAL_STM32F446_CAN1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass can1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40006400;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class McrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dbf = FieldModel<address, 16, 0x00000001>;\n    using reset = FieldModel<address,\
    \ 15, 0x00000001>;\n    using ttcm = FieldModel<address, 7, 0x00000001>;\n   \
    \ using abom = FieldModel<address, 6, 0x00000001>;\n    using awum = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nart = FieldModel<address, 4, 0x00000001>;\n    using\
    \ rflm = FieldModel<address, 3, 0x00000001>;\n    using txfp = FieldModel<address,\
    \ 2, 0x00000001>;\n    using sleep = FieldModel<address, 1, 0x00000001>;\n   \
    \ using inrq = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using mcr\
    \ = McrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class MsrReg: public RegisterModel<address>\n  {\n  public:\n    using rx =\
    \ FieldModel<address, 11, 0x00000001>;\n    using samp = FieldModel<address, 10,\
    \ 0x00000001>;\n    using rxm = FieldModel<address, 9, 0x00000001>;\n    using\
    \ txm = FieldModel<address, 8, 0x00000001>;\n    using slaki = FieldModel<address,\
    \ 4, 0x00000001>;\n    using wkui = FieldModel<address, 3, 0x00000001>;\n    using\
    \ erri = FieldModel<address, 2, 0x00000001>;\n    using slak = FieldModel<address,\
    \ 1, 0x00000001>;\n    using inak = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using msr = MsrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class TsrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using low2 = FieldModel<address, 31, 0x00000001>;\n    using low1 = FieldModel<address,\
    \ 30, 0x00000001>;\n    using low0 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using tme2 = FieldModel<address, 28, 0x00000001>;\n    using tme1 = FieldModel<address,\
    \ 27, 0x00000001>;\n    using tme0 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using code = FieldModel<address, 24, 0x00000003>;\n    using abrq2 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using terr2 = FieldModel<address, 19, 0x00000001>;\n \
    \   using alst2 = FieldModel<address, 18, 0x00000001>;\n    using txok2 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using rqcp2 = FieldModel<address, 16, 0x00000001>;\n \
    \   using abrq1 = FieldModel<address, 15, 0x00000001>;\n    using terr1 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using alst1 = FieldModel<address, 10, 0x00000001>;\n \
    \   using txok1 = FieldModel<address, 9, 0x00000001>;\n    using rqcp1 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using abrq0 = FieldModel<address, 7, 0x00000001>;\n   \
    \ using terr0 = FieldModel<address, 3, 0x00000001>;\n    using alst0 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using txok0 = FieldModel<address, 1, 0x00000001>;\n   \
    \ using rqcp0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ tsr = TsrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rf0rReg: public RegisterModel<address>\n  {\n  public:\n    using rfom0\
    \ = FieldModel<address, 5, 0x00000001>;\n    using fovr0 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using full0 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using fmp0 = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using rf0r\
    \ = Rf0rReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rf1rReg: public RegisterModel<address>\n  {\n  public:\n    using rfom1\
    \ = FieldModel<address, 5, 0x00000001>;\n    using fovr1 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using full1 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using fmp1 = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using rf1r\
    \ = Rf1rReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class IerReg: public RegisterModel<address>\n  {\n  public:\n    using slkie\
    \ = FieldModel<address, 17, 0x00000001>;\n    using wkuie = FieldModel<address,\
    \ 16, 0x00000001>;\n    using errie = FieldModel<address, 15, 0x00000001>;\n \
    \   using lecie = FieldModel<address, 11, 0x00000001>;\n    using bofie = FieldModel<address,\
    \ 10, 0x00000001>;\n    using epvie = FieldModel<address, 9, 0x00000001>;\n  \
    \  using ewgie = FieldModel<address, 8, 0x00000001>;\n    using fovie1 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using ffie1 = FieldModel<address, 5, 0x00000001>;\n   \
    \ using fmpie1 = FieldModel<address, 4, 0x00000001>;\n    using fovie0 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using ffie0 = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fmpie0 = FieldModel<address, 1, 0x00000001>;\n    using tmeie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ier = IerReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class EsrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using rec = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ tec = FieldModel<address, 16, 0x000000FF>;\n    using lec = FieldModel<address,\
    \ 4, 0x00000007>;\n    using boff = FieldModel<address, 2, 0x00000001>;\n    using\
    \ epvf = FieldModel<address, 1, 0x00000001>;\n    using ewgf = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using esr = EsrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BtrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using silm = FieldModel<address, 31, 0x00000001>;\n    using\
    \ lbkm = FieldModel<address, 30, 0x00000001>;\n    using sjw = FieldModel<address,\
    \ 24, 0x00000003>;\n    using ts2 = FieldModel<address, 20, 0x00000007>;\n   \
    \ using ts1 = FieldModel<address, 16, 0x0000000F>;\n    using brp = FieldModel<address,\
    \ 0, 0x000003FF>;\n  };\n\npublic:\n  using btr = BtrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ti0rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using stid = FieldModel<address, 21, 0x000007FF>;\n    using\
    \ exid = FieldModel<address, 3, 0x0003FFFF>;\n    using ide = FieldModel<address,\
    \ 2, 0x00000001>;\n    using rtr = FieldModel<address, 1, 0x00000001>;\n    using\
    \ txrq = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ti0r =\
    \ Ti0rReg<BaseAddress + 0x0180>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Tdt0rReg: public RegisterModel<address>\n  {\n  public:\n    using time\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using tgt = FieldModel<address,\
    \ 8, 0x00000001>;\n    using dlc = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using tdt0r = Tdt0rReg<BaseAddress + 0x0184>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdl0rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data3 = FieldModel<address, 24, 0x000000FF>;\n    using data2\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdl0r = Tdl0rReg<BaseAddress + 0x0188>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdh0rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data7 = FieldModel<address, 24, 0x000000FF>;\n    using data6\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data5 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdh0r = Tdh0rReg<BaseAddress + 0x018C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ti1rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using stid = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n    using txrq = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ti1r = Ti1rReg<BaseAddress + 0x0190>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdt1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF>;\n    using\
    \ tgt = FieldModel<address, 8, 0x00000001>;\n    using dlc = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using tdt1r = Tdt1rReg<BaseAddress + 0x0194>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdl1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data3 = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ data2 = FieldModel<address, 16, 0x000000FF>;\n    using data1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdl1r = Tdl1rReg<BaseAddress + 0x0198>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdh1rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data7 = FieldModel<address, 24, 0x000000FF>;\n    using data6\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data5 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdh1r = Tdh1rReg<BaseAddress + 0x019C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ti2rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using stid = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n    using txrq = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ti2r = Ti2rReg<BaseAddress + 0x01A0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdt2rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF>;\n    using\
    \ tgt = FieldModel<address, 8, 0x00000001>;\n    using dlc = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using tdt2r = Tdt2rReg<BaseAddress + 0x01A4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdl2rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data3 = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ data2 = FieldModel<address, 16, 0x000000FF>;\n    using data1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdl2r = Tdl2rReg<BaseAddress + 0x01A8>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdh2rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data7 = FieldModel<address, 24, 0x000000FF>;\n    using data6\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data5 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdh2r = Tdh2rReg<BaseAddress + 0x01AC>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ri0rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using stid = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n  };\n\npublic:\n  using ri0r = Ri0rReg<BaseAddress\
    \ + 0x01B0>;\n\nprivate:\n  template <uint32_t address>\n  class Rdt0rReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using time = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n    using fmi = FieldModel<address, 8, 0x000000FF>;\n    using\
    \ dlc = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using rdt0r =\
    \ Rdt0rReg<BaseAddress + 0x01B4>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdl0rReg: public RegisterModel<address>\n  {\n  public:\n    using data3\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data2 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data1 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdl0r = Rdl0rReg<BaseAddress + 0x01B8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdh0rReg: public RegisterModel<address>\n  {\n  public:\n    using data7\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data6 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data5 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdh0r = Rdh0rReg<BaseAddress + 0x01BC>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ri1rReg: public RegisterModel<address>\n  {\n  public:\n    using stid\
    \ = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n  };\n\npublic:\n  using ri1r = Ri1rReg<BaseAddress\
    \ + 0x01C0>;\n\nprivate:\n  template <uint32_t address>\n  class Rdt1rReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using time = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n    using fmi = FieldModel<address, 8, 0x000000FF>;\n    using\
    \ dlc = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using rdt1r =\
    \ Rdt1rReg<BaseAddress + 0x01C4>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdl1rReg: public RegisterModel<address>\n  {\n  public:\n    using data3\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data2 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data1 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdl1r = Rdl1rReg<BaseAddress + 0x01C8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdh1rReg: public RegisterModel<address>\n  {\n  public:\n    using data7\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data6 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data5 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdh1r = Rdh1rReg<BaseAddress + 0x01CC>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class FmrReg: public RegisterModel<address>\n  {\n  public:\n    using can2sb\
    \ = FieldModel<address, 8, 0x0000003F>;\n    using finit = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using fmr = FmrReg<BaseAddress + 0x0200>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Fm1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fbm0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fbm1 = FieldModel<address, 1, 0x00000001>;\n    using fbm2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fbm3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fbm4 = FieldModel<address, 4, 0x00000001>;\n    using fbm5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fbm6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fbm7 = FieldModel<address, 7, 0x00000001>;\n    using fbm8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fbm9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fbm10 = FieldModel<address, 10, 0x00000001>;\n    using fbm11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fbm12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using fbm13 = FieldModel<address, 13, 0x00000001>;\n    using fbm14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fbm15 = FieldModel<address, 15, 0x00000001>;\n \
    \   using fbm16 = FieldModel<address, 16, 0x00000001>;\n    using fbm17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fbm18 = FieldModel<address, 18, 0x00000001>;\n \
    \   using fbm19 = FieldModel<address, 19, 0x00000001>;\n    using fbm20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fbm21 = FieldModel<address, 21, 0x00000001>;\n \
    \   using fbm22 = FieldModel<address, 22, 0x00000001>;\n    using fbm23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fbm24 = FieldModel<address, 24, 0x00000001>;\n \
    \   using fbm25 = FieldModel<address, 25, 0x00000001>;\n    using fbm26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fbm27 = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using fm1r = Fm1rReg<BaseAddress + 0x0204>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Fs1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fsc0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fsc1 = FieldModel<address, 1, 0x00000001>;\n    using fsc2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fsc3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fsc4 = FieldModel<address, 4, 0x00000001>;\n    using fsc5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fsc6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fsc7 = FieldModel<address, 7, 0x00000001>;\n    using fsc8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fsc9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fsc10 = FieldModel<address, 10, 0x00000001>;\n    using fsc11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fsc12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using fsc13 = FieldModel<address, 13, 0x00000001>;\n    using fsc14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fsc15 = FieldModel<address, 15, 0x00000001>;\n \
    \   using fsc16 = FieldModel<address, 16, 0x00000001>;\n    using fsc17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fsc18 = FieldModel<address, 18, 0x00000001>;\n \
    \   using fsc19 = FieldModel<address, 19, 0x00000001>;\n    using fsc20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fsc21 = FieldModel<address, 21, 0x00000001>;\n \
    \   using fsc22 = FieldModel<address, 22, 0x00000001>;\n    using fsc23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fsc24 = FieldModel<address, 24, 0x00000001>;\n \
    \   using fsc25 = FieldModel<address, 25, 0x00000001>;\n    using fsc26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fsc27 = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using fs1r = Fs1rReg<BaseAddress + 0x020C>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Ffa1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ffa0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ ffa1 = FieldModel<address, 1, 0x00000001>;\n    using ffa2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using ffa3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ffa4 = FieldModel<address, 4, 0x00000001>;\n    using ffa5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using ffa6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ffa7 = FieldModel<address, 7, 0x00000001>;\n    using ffa8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using ffa9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ffa10 = FieldModel<address, 10, 0x00000001>;\n    using ffa11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using ffa12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using ffa13 = FieldModel<address, 13, 0x00000001>;\n    using ffa14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using ffa15 = FieldModel<address, 15, 0x00000001>;\n \
    \   using ffa16 = FieldModel<address, 16, 0x00000001>;\n    using ffa17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using ffa18 = FieldModel<address, 18, 0x00000001>;\n \
    \   using ffa19 = FieldModel<address, 19, 0x00000001>;\n    using ffa20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using ffa21 = FieldModel<address, 21, 0x00000001>;\n \
    \   using ffa22 = FieldModel<address, 22, 0x00000001>;\n    using ffa23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using ffa24 = FieldModel<address, 24, 0x00000001>;\n \
    \   using ffa25 = FieldModel<address, 25, 0x00000001>;\n    using ffa26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using ffa27 = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using ffa1r = Ffa1rReg<BaseAddress + 0x0214>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fa1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fact0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fact1 = FieldModel<address, 1, 0x00000001>;\n    using fact2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fact3 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using fact4 = FieldModel<address, 4, 0x00000001>;\n    using fact5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fact6 = FieldModel<address, 6, 0x00000001>;\n   \
    \ using fact7 = FieldModel<address, 7, 0x00000001>;\n    using fact8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fact9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using fact10 = FieldModel<address, 10, 0x00000001>;\n    using fact11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fact12 = FieldModel<address, 12, 0x00000001>;\n\
    \    using fact13 = FieldModel<address, 13, 0x00000001>;\n    using fact14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fact15 = FieldModel<address, 15, 0x00000001>;\n\
    \    using fact16 = FieldModel<address, 16, 0x00000001>;\n    using fact17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fact18 = FieldModel<address, 18, 0x00000001>;\n\
    \    using fact19 = FieldModel<address, 19, 0x00000001>;\n    using fact20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fact21 = FieldModel<address, 21, 0x00000001>;\n\
    \    using fact22 = FieldModel<address, 22, 0x00000001>;\n    using fact23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fact24 = FieldModel<address, 24, 0x00000001>;\n\
    \    using fact25 = FieldModel<address, 25, 0x00000001>;\n    using fact26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fact27 = FieldModel<address, 27, 0x00000001>;\n\
    \  };\n\npublic:\n  using fa1r = Fa1rReg<BaseAddress + 0x021C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class F0r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f0r1 = F0r1Reg<BaseAddress + 0x0240>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F0r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f0r2 = F0r2Reg<BaseAddress + 0x0244>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F1r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f1r1 = F1r1Reg<BaseAddress + 0x0248>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F1r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f1r2 = F1r2Reg<BaseAddress + 0x024C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F2r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f2r1 = F2r1Reg<BaseAddress + 0x0250>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F2r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f2r2 = F2r2Reg<BaseAddress + 0x0254>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F3r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f3r1 = F3r1Reg<BaseAddress + 0x0258>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F3r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f3r2 = F3r2Reg<BaseAddress + 0x025C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F4r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f4r1 = F4r1Reg<BaseAddress + 0x0260>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F4r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f4r2 = F4r2Reg<BaseAddress + 0x0264>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F5r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f5r1 = F5r1Reg<BaseAddress + 0x0268>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F5r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f5r2 = F5r2Reg<BaseAddress + 0x026C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F6r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f6r1 = F6r1Reg<BaseAddress + 0x0270>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F6r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f6r2 = F6r2Reg<BaseAddress + 0x0274>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F7r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f7r1 = F7r1Reg<BaseAddress + 0x0278>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F7r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f7r2 = F7r2Reg<BaseAddress + 0x027C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F8r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f8r1 = F8r1Reg<BaseAddress + 0x0280>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F8r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f8r2 = F8r2Reg<BaseAddress + 0x0284>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F9r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f9r1 = F9r1Reg<BaseAddress + 0x0288>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F9r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f9r2 = F9r2Reg<BaseAddress + 0x028C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F10r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f10r1 = F10r1Reg<BaseAddress + 0x0290>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F10r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f10r2 = F10r2Reg<BaseAddress + 0x0294>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F11r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f11r1 = F11r1Reg<BaseAddress + 0x0298>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F11r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f11r2 = F11r2Reg<BaseAddress + 0x029C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F12r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f12r1 = F12r1Reg<BaseAddress + 0x02A0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F12r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f12r2 = F12r2Reg<BaseAddress + 0x02A4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F13r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f13r1 = F13r1Reg<BaseAddress + 0x02A8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F13r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f13r2 = F13r2Reg<BaseAddress + 0x02AC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F14r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f14r1 = F14r1Reg<BaseAddress + 0x02B0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F14r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f14r2 = F14r2Reg<BaseAddress + 0x02B4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F15r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f15r1 = F15r1Reg<BaseAddress + 0x02B8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F15r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f15r2 = F15r2Reg<BaseAddress + 0x02BC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F16r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f16r1 = F16r1Reg<BaseAddress + 0x02C0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F16r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f16r2 = F16r2Reg<BaseAddress + 0x02C4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F17r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f17r1 = F17r1Reg<BaseAddress + 0x02C8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F17r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f17r2 = F17r2Reg<BaseAddress + 0x02CC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F18r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f18r1 = F18r1Reg<BaseAddress + 0x02D0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F18r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f18r2 = F18r2Reg<BaseAddress + 0x02D4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F19r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f19r1 = F19r1Reg<BaseAddress + 0x02D8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F19r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f19r2 = F19r2Reg<BaseAddress + 0x02DC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F20r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f20r1 = F20r1Reg<BaseAddress + 0x02E0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F20r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f20r2 = F20r2Reg<BaseAddress + 0x02E4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F21r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f21r1 = F21r1Reg<BaseAddress + 0x02E8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F21r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f21r2 = F21r2Reg<BaseAddress + 0x02EC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F22r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f22r1 = F22r1Reg<BaseAddress + 0x02F0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F22r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f22r2 = F22r2Reg<BaseAddress + 0x02F4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F23r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f23r1 = F23r1Reg<BaseAddress + 0x02F8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F23r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f23r2 = F23r2Reg<BaseAddress + 0x02FC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F24r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f24r1 = F24r1Reg<BaseAddress + 0x0300>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F24r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f24r2 = F24r2Reg<BaseAddress + 0x0304>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F25r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f25r1 = F25r1Reg<BaseAddress + 0x0308>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F25r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f25r2 = F25r2Reg<BaseAddress + 0x030C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F26r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f26r1 = F26r1Reg<BaseAddress + 0x0310>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F26r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f26r2 = F26r2Reg<BaseAddress + 0x0314>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F27r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f27r1 = F27r1Reg<BaseAddress + 0x0318>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F27r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f27r2 = F27r2Reg<BaseAddress + 0x031C>;\n\
    private:\n  template <uint32_t address, uint32_t bankOffset>\n  class TixrBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using stid\
    \ = FieldModel<address, 21, 0x000007FF, bankOffset>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF, bankOffset>;\n    using ide = FieldModel<address, 2, 0x00000001,\
    \ bankOffset>;\n    using rtr = FieldModel<address, 1, 0x00000001, bankOffset>;\n\
    \    using txrq = FieldModel<address, 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n\
    \  using tixr = TixrBankReg<BaseAddress + 0x0180, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class TdtxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF,\
    \ bankOffset>;\n    using tgt = FieldModel<address, 8, 0x00000001, bankOffset>;\n\
    \    using dlc = FieldModel<address, 0, 0x0000000F, bankOffset>;\n  };\n\npublic:\n\
    \  using tdtxr = TdtxrBankReg<BaseAddress + 0x0184, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class TdlxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using data3 = FieldModel<address, 24, 0x000000FF,\
    \ bankOffset>;\n    using data2 = FieldModel<address, 16, 0x000000FF, bankOffset>;\n\
    \    using data1 = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using\
    \ data0 = FieldModel<address, 0, 0x000000FF, bankOffset>;\n  };\n\npublic:\n \
    \ using tdlxr = TdlxrBankReg<BaseAddress + 0x0188, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class TdhxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using data7 = FieldModel<address, 24, 0x000000FF,\
    \ bankOffset>;\n    using data6 = FieldModel<address, 16, 0x000000FF, bankOffset>;\n\
    \    using data5 = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using\
    \ data4 = FieldModel<address, 0, 0x000000FF, bankOffset>;\n  };\n\npublic:\n \
    \ using tdhxr = TdhxrBankReg<BaseAddress + 0x018C, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class RixrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using stid = FieldModel<address, 21, 0x000007FF,\
    \ bankOffset>;\n    using exid = FieldModel<address, 3, 0x0003FFFF, bankOffset>;\n\
    \    using ide = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using rtr\
    \ = FieldModel<address, 1, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using\
    \ rixr = RixrBankReg<BaseAddress + 0x01B0, 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class RdtxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF,\
    \ bankOffset>;\n    using fmi = FieldModel<address, 8, 0x000000FF, bankOffset>;\n\
    \    using dlc = FieldModel<address, 0, 0x0000000F, bankOffset>;\n  };\n\npublic:\n\
    \  using rdtxr = RdtxrBankReg<BaseAddress + 0x01B4, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class F0rxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001,\
    \ bankOffset>;\n    using fb1 = FieldModel<address, 1, 0x00000001, bankOffset>;\n\
    \    using fb2 = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using fb3\
    \ = FieldModel<address, 3, 0x00000001, bankOffset>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001, bankOffset>;\n    using fb5 = FieldModel<address, 5, 0x00000001,\
    \ bankOffset>;\n    using fb6 = FieldModel<address, 6, 0x00000001, bankOffset>;\n\
    \    using fb7 = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using fb8\
    \ = FieldModel<address, 8, 0x00000001, bankOffset>;\n    using fb9 = FieldModel<address,\
    \ 9, 0x00000001, bankOffset>;\n    using fb10 = FieldModel<address, 10, 0x00000001,\
    \ bankOffset>;\n    using fb11 = FieldModel<address, 11, 0x00000001, bankOffset>;\n\
    \    using fb12 = FieldModel<address, 12, 0x00000001, bankOffset>;\n    using\
    \ fb13 = FieldModel<address, 13, 0x00000001, bankOffset>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001, bankOffset>;\n    using fb15 = FieldModel<address, 15, 0x00000001,\
    \ bankOffset>;\n    using fb16 = FieldModel<address, 16, 0x00000001, bankOffset>;\n\
    \    using fb17 = FieldModel<address, 17, 0x00000001, bankOffset>;\n    using\
    \ fb18 = FieldModel<address, 18, 0x00000001, bankOffset>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001, bankOffset>;\n    using fb20 = FieldModel<address, 20, 0x00000001,\
    \ bankOffset>;\n    using fb21 = FieldModel<address, 21, 0x00000001, bankOffset>;\n\
    \    using fb22 = FieldModel<address, 22, 0x00000001, bankOffset>;\n    using\
    \ fb23 = FieldModel<address, 23, 0x00000001, bankOffset>;\n    using fb24 = FieldModel<address,\
    \ 24, 0x00000001, bankOffset>;\n    using fb25 = FieldModel<address, 25, 0x00000001,\
    \ bankOffset>;\n    using fb26 = FieldModel<address, 26, 0x00000001, bankOffset>;\n\
    \    using fb27 = FieldModel<address, 27, 0x00000001, bankOffset>;\n    using\
    \ fb28 = FieldModel<address, 28, 0x00000001, bankOffset>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001, bankOffset>;\n    using fb30 = FieldModel<address, 30, 0x00000001,\
    \ bankOffset>;\n    using fb31 = FieldModel<address, 31, 0x00000001, bankOffset>;\n\
    \  };\n\npublic:\n  using f0rx = F0rxBankReg<BaseAddress + 0x0240, 0x0004>;\n\
    };\n\n}\n\n#endif /* DRAL_STM32F446_CAN1_H */\n"
  name: CAN1
- content: "#ifndef DRAL_STM32F446_CAN2_H\n#define DRAL_STM32F446_CAN2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass can2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40006800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class McrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using dbf = FieldModel<address, 16, 0x00000001>;\n    using reset = FieldModel<address,\
    \ 15, 0x00000001>;\n    using ttcm = FieldModel<address, 7, 0x00000001>;\n   \
    \ using abom = FieldModel<address, 6, 0x00000001>;\n    using awum = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nart = FieldModel<address, 4, 0x00000001>;\n    using\
    \ rflm = FieldModel<address, 3, 0x00000001>;\n    using txfp = FieldModel<address,\
    \ 2, 0x00000001>;\n    using sleep = FieldModel<address, 1, 0x00000001>;\n   \
    \ using inrq = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using mcr\
    \ = McrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class MsrReg: public RegisterModel<address>\n  {\n  public:\n    using rx =\
    \ FieldModel<address, 11, 0x00000001>;\n    using samp = FieldModel<address, 10,\
    \ 0x00000001>;\n    using rxm = FieldModel<address, 9, 0x00000001>;\n    using\
    \ txm = FieldModel<address, 8, 0x00000001>;\n    using slaki = FieldModel<address,\
    \ 4, 0x00000001>;\n    using wkui = FieldModel<address, 3, 0x00000001>;\n    using\
    \ erri = FieldModel<address, 2, 0x00000001>;\n    using slak = FieldModel<address,\
    \ 1, 0x00000001>;\n    using inak = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using msr = MsrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class TsrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using low2 = FieldModel<address, 31, 0x00000001>;\n    using low1 = FieldModel<address,\
    \ 30, 0x00000001>;\n    using low0 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using tme2 = FieldModel<address, 28, 0x00000001>;\n    using tme1 = FieldModel<address,\
    \ 27, 0x00000001>;\n    using tme0 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using code = FieldModel<address, 24, 0x00000003>;\n    using abrq2 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using terr2 = FieldModel<address, 19, 0x00000001>;\n \
    \   using alst2 = FieldModel<address, 18, 0x00000001>;\n    using txok2 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using rqcp2 = FieldModel<address, 16, 0x00000001>;\n \
    \   using abrq1 = FieldModel<address, 15, 0x00000001>;\n    using terr1 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using alst1 = FieldModel<address, 10, 0x00000001>;\n \
    \   using txok1 = FieldModel<address, 9, 0x00000001>;\n    using rqcp1 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using abrq0 = FieldModel<address, 7, 0x00000001>;\n   \
    \ using terr0 = FieldModel<address, 3, 0x00000001>;\n    using alst0 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using txok0 = FieldModel<address, 1, 0x00000001>;\n   \
    \ using rqcp0 = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ tsr = TsrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rf0rReg: public RegisterModel<address>\n  {\n  public:\n    using rfom0\
    \ = FieldModel<address, 5, 0x00000001>;\n    using fovr0 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using full0 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using fmp0 = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using rf0r\
    \ = Rf0rReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rf1rReg: public RegisterModel<address>\n  {\n  public:\n    using rfom1\
    \ = FieldModel<address, 5, 0x00000001>;\n    using fovr1 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using full1 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using fmp1 = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n  using rf1r\
    \ = Rf1rReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class IerReg: public RegisterModel<address>\n  {\n  public:\n    using slkie\
    \ = FieldModel<address, 17, 0x00000001>;\n    using wkuie = FieldModel<address,\
    \ 16, 0x00000001>;\n    using errie = FieldModel<address, 15, 0x00000001>;\n \
    \   using lecie = FieldModel<address, 11, 0x00000001>;\n    using bofie = FieldModel<address,\
    \ 10, 0x00000001>;\n    using epvie = FieldModel<address, 9, 0x00000001>;\n  \
    \  using ewgie = FieldModel<address, 8, 0x00000001>;\n    using fovie1 = FieldModel<address,\
    \ 6, 0x00000001>;\n    using ffie1 = FieldModel<address, 5, 0x00000001>;\n   \
    \ using fmpie1 = FieldModel<address, 4, 0x00000001>;\n    using fovie0 = FieldModel<address,\
    \ 3, 0x00000001>;\n    using ffie0 = FieldModel<address, 2, 0x00000001>;\n   \
    \ using fmpie0 = FieldModel<address, 1, 0x00000001>;\n    using tmeie = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ier = IerReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class EsrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using rec = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ tec = FieldModel<address, 16, 0x000000FF>;\n    using lec = FieldModel<address,\
    \ 4, 0x00000007>;\n    using boff = FieldModel<address, 2, 0x00000001>;\n    using\
    \ epvf = FieldModel<address, 1, 0x00000001>;\n    using ewgf = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using esr = EsrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BtrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using silm = FieldModel<address, 31, 0x00000001>;\n    using\
    \ lbkm = FieldModel<address, 30, 0x00000001>;\n    using sjw = FieldModel<address,\
    \ 24, 0x00000003>;\n    using ts2 = FieldModel<address, 20, 0x00000007>;\n   \
    \ using ts1 = FieldModel<address, 16, 0x0000000F>;\n    using brp = FieldModel<address,\
    \ 0, 0x000003FF>;\n  };\n\npublic:\n  using btr = BtrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ti0rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using stid = FieldModel<address, 21, 0x000007FF>;\n    using\
    \ exid = FieldModel<address, 3, 0x0003FFFF>;\n    using ide = FieldModel<address,\
    \ 2, 0x00000001>;\n    using rtr = FieldModel<address, 1, 0x00000001>;\n    using\
    \ txrq = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using ti0r =\
    \ Ti0rReg<BaseAddress + 0x0180>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Tdt0rReg: public RegisterModel<address>\n  {\n  public:\n    using time\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using tgt = FieldModel<address,\
    \ 8, 0x00000001>;\n    using dlc = FieldModel<address, 0, 0x0000000F>;\n  };\n\
    \npublic:\n  using tdt0r = Tdt0rReg<BaseAddress + 0x0184>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdl0rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data3 = FieldModel<address, 24, 0x000000FF>;\n    using data2\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdl0r = Tdl0rReg<BaseAddress + 0x0188>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdh0rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data7 = FieldModel<address, 24, 0x000000FF>;\n    using data6\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data5 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdh0r = Tdh0rReg<BaseAddress + 0x018C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ti1rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using stid = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n    using txrq = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ti1r = Ti1rReg<BaseAddress + 0x0190>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdt1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF>;\n    using\
    \ tgt = FieldModel<address, 8, 0x00000001>;\n    using dlc = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using tdt1r = Tdt1rReg<BaseAddress + 0x0194>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdl1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data3 = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ data2 = FieldModel<address, 16, 0x000000FF>;\n    using data1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdl1r = Tdl1rReg<BaseAddress + 0x0198>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdh1rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data7 = FieldModel<address, 24, 0x000000FF>;\n    using data6\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data5 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdh1r = Tdh1rReg<BaseAddress + 0x019C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ti2rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using stid = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n    using txrq = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using ti2r = Ti2rReg<BaseAddress + 0x01A0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdt2rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF>;\n    using\
    \ tgt = FieldModel<address, 8, 0x00000001>;\n    using dlc = FieldModel<address,\
    \ 0, 0x0000000F>;\n  };\n\npublic:\n  using tdt2r = Tdt2rReg<BaseAddress + 0x01A4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Tdl2rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data3 = FieldModel<address, 24, 0x000000FF>;\n    using\
    \ data2 = FieldModel<address, 16, 0x000000FF>;\n    using data1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdl2r = Tdl2rReg<BaseAddress + 0x01A8>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Tdh2rReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using data7 = FieldModel<address, 24, 0x000000FF>;\n    using data6\
    \ = FieldModel<address, 16, 0x000000FF>;\n    using data5 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using tdh2r = Tdh2rReg<BaseAddress + 0x01AC>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ri0rReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using stid = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n  };\n\npublic:\n  using ri0r = Ri0rReg<BaseAddress\
    \ + 0x01B0>;\n\nprivate:\n  template <uint32_t address>\n  class Rdt0rReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using time = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n    using fmi = FieldModel<address, 8, 0x000000FF>;\n    using\
    \ dlc = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using rdt0r =\
    \ Rdt0rReg<BaseAddress + 0x01B4>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdl0rReg: public RegisterModel<address>\n  {\n  public:\n    using data3\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data2 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data1 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdl0r = Rdl0rReg<BaseAddress + 0x01B8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdh0rReg: public RegisterModel<address>\n  {\n  public:\n    using data7\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data6 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data5 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdh0r = Rdh0rReg<BaseAddress + 0x01BC>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ri1rReg: public RegisterModel<address>\n  {\n  public:\n    using stid\
    \ = FieldModel<address, 21, 0x000007FF>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF>;\n    using ide = FieldModel<address, 2, 0x00000001>;\n    using\
    \ rtr = FieldModel<address, 1, 0x00000001>;\n  };\n\npublic:\n  using ri1r = Ri1rReg<BaseAddress\
    \ + 0x01C0>;\n\nprivate:\n  template <uint32_t address>\n  class Rdt1rReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using time = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n    using fmi = FieldModel<address, 8, 0x000000FF>;\n    using\
    \ dlc = FieldModel<address, 0, 0x0000000F>;\n  };\n\npublic:\n  using rdt1r =\
    \ Rdt1rReg<BaseAddress + 0x01C4>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdl1rReg: public RegisterModel<address>\n  {\n  public:\n    using data3\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data2 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data1 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data0 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdl1r = Rdl1rReg<BaseAddress + 0x01C8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Rdh1rReg: public RegisterModel<address>\n  {\n  public:\n    using data7\
    \ = FieldModel<address, 24, 0x000000FF>;\n    using data6 = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using data5 = FieldModel<address, 8, 0x000000FF>;\n  \
    \  using data4 = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ rdh1r = Rdh1rReg<BaseAddress + 0x01CC>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class FmrReg: public RegisterModel<address>\n  {\n  public:\n    using can2sb\
    \ = FieldModel<address, 8, 0x0000003F>;\n    using finit = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using fmr = FmrReg<BaseAddress + 0x0200>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Fm1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fbm0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fbm1 = FieldModel<address, 1, 0x00000001>;\n    using fbm2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fbm3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fbm4 = FieldModel<address, 4, 0x00000001>;\n    using fbm5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fbm6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fbm7 = FieldModel<address, 7, 0x00000001>;\n    using fbm8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fbm9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fbm10 = FieldModel<address, 10, 0x00000001>;\n    using fbm11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fbm12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using fbm13 = FieldModel<address, 13, 0x00000001>;\n    using fbm14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fbm15 = FieldModel<address, 15, 0x00000001>;\n \
    \   using fbm16 = FieldModel<address, 16, 0x00000001>;\n    using fbm17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fbm18 = FieldModel<address, 18, 0x00000001>;\n \
    \   using fbm19 = FieldModel<address, 19, 0x00000001>;\n    using fbm20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fbm21 = FieldModel<address, 21, 0x00000001>;\n \
    \   using fbm22 = FieldModel<address, 22, 0x00000001>;\n    using fbm23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fbm24 = FieldModel<address, 24, 0x00000001>;\n \
    \   using fbm25 = FieldModel<address, 25, 0x00000001>;\n    using fbm26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fbm27 = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using fm1r = Fm1rReg<BaseAddress + 0x0204>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Fs1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fsc0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fsc1 = FieldModel<address, 1, 0x00000001>;\n    using fsc2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fsc3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fsc4 = FieldModel<address, 4, 0x00000001>;\n    using fsc5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fsc6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fsc7 = FieldModel<address, 7, 0x00000001>;\n    using fsc8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fsc9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fsc10 = FieldModel<address, 10, 0x00000001>;\n    using fsc11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fsc12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using fsc13 = FieldModel<address, 13, 0x00000001>;\n    using fsc14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fsc15 = FieldModel<address, 15, 0x00000001>;\n \
    \   using fsc16 = FieldModel<address, 16, 0x00000001>;\n    using fsc17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fsc18 = FieldModel<address, 18, 0x00000001>;\n \
    \   using fsc19 = FieldModel<address, 19, 0x00000001>;\n    using fsc20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fsc21 = FieldModel<address, 21, 0x00000001>;\n \
    \   using fsc22 = FieldModel<address, 22, 0x00000001>;\n    using fsc23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fsc24 = FieldModel<address, 24, 0x00000001>;\n \
    \   using fsc25 = FieldModel<address, 25, 0x00000001>;\n    using fsc26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fsc27 = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using fs1r = Fs1rReg<BaseAddress + 0x020C>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Ffa1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ffa0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ ffa1 = FieldModel<address, 1, 0x00000001>;\n    using ffa2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using ffa3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ffa4 = FieldModel<address, 4, 0x00000001>;\n    using ffa5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using ffa6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ ffa7 = FieldModel<address, 7, 0x00000001>;\n    using ffa8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using ffa9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ ffa10 = FieldModel<address, 10, 0x00000001>;\n    using ffa11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using ffa12 = FieldModel<address, 12, 0x00000001>;\n \
    \   using ffa13 = FieldModel<address, 13, 0x00000001>;\n    using ffa14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using ffa15 = FieldModel<address, 15, 0x00000001>;\n \
    \   using ffa16 = FieldModel<address, 16, 0x00000001>;\n    using ffa17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using ffa18 = FieldModel<address, 18, 0x00000001>;\n \
    \   using ffa19 = FieldModel<address, 19, 0x00000001>;\n    using ffa20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using ffa21 = FieldModel<address, 21, 0x00000001>;\n \
    \   using ffa22 = FieldModel<address, 22, 0x00000001>;\n    using ffa23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using ffa24 = FieldModel<address, 24, 0x00000001>;\n \
    \   using ffa25 = FieldModel<address, 25, 0x00000001>;\n    using ffa26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using ffa27 = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using ffa1r = Ffa1rReg<BaseAddress + 0x0214>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Fa1rReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fact0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fact1 = FieldModel<address, 1, 0x00000001>;\n    using fact2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fact3 = FieldModel<address, 3, 0x00000001>;\n   \
    \ using fact4 = FieldModel<address, 4, 0x00000001>;\n    using fact5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fact6 = FieldModel<address, 6, 0x00000001>;\n   \
    \ using fact7 = FieldModel<address, 7, 0x00000001>;\n    using fact8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fact9 = FieldModel<address, 9, 0x00000001>;\n   \
    \ using fact10 = FieldModel<address, 10, 0x00000001>;\n    using fact11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fact12 = FieldModel<address, 12, 0x00000001>;\n\
    \    using fact13 = FieldModel<address, 13, 0x00000001>;\n    using fact14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fact15 = FieldModel<address, 15, 0x00000001>;\n\
    \    using fact16 = FieldModel<address, 16, 0x00000001>;\n    using fact17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fact18 = FieldModel<address, 18, 0x00000001>;\n\
    \    using fact19 = FieldModel<address, 19, 0x00000001>;\n    using fact20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fact21 = FieldModel<address, 21, 0x00000001>;\n\
    \    using fact22 = FieldModel<address, 22, 0x00000001>;\n    using fact23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fact24 = FieldModel<address, 24, 0x00000001>;\n\
    \    using fact25 = FieldModel<address, 25, 0x00000001>;\n    using fact26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fact27 = FieldModel<address, 27, 0x00000001>;\n\
    \  };\n\npublic:\n  using fa1r = Fa1rReg<BaseAddress + 0x021C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class F0r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f0r1 = F0r1Reg<BaseAddress + 0x0240>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F0r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f0r2 = F0r2Reg<BaseAddress + 0x0244>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F1r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f1r1 = F1r1Reg<BaseAddress + 0x0248>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F1r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f1r2 = F1r2Reg<BaseAddress + 0x024C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F2r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f2r1 = F2r1Reg<BaseAddress + 0x0250>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F2r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f2r2 = F2r2Reg<BaseAddress + 0x0254>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F3r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f3r1 = F3r1Reg<BaseAddress + 0x0258>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F3r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f3r2 = F3r2Reg<BaseAddress + 0x025C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F4r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f4r1 = F4r1Reg<BaseAddress + 0x0260>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F4r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f4r2 = F4r2Reg<BaseAddress + 0x0264>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F5r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f5r1 = F5r1Reg<BaseAddress + 0x0268>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F5r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f5r2 = F5r2Reg<BaseAddress + 0x026C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F6r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f6r1 = F6r1Reg<BaseAddress + 0x0270>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F6r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f6r2 = F6r2Reg<BaseAddress + 0x0274>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F7r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f7r1 = F7r1Reg<BaseAddress + 0x0278>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F7r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f7r2 = F7r2Reg<BaseAddress + 0x027C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F8r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f8r1 = F8r1Reg<BaseAddress + 0x0280>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F8r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f8r2 = F8r2Reg<BaseAddress + 0x0284>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F9r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f9r1 = F9r1Reg<BaseAddress + 0x0288>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F9r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f9r2 = F9r2Reg<BaseAddress + 0x028C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F10r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f10r1 = F10r1Reg<BaseAddress + 0x0290>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F10r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f10r2 = F10r2Reg<BaseAddress + 0x0294>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F11r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f11r1 = F11r1Reg<BaseAddress + 0x0298>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F11r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f11r2 = F11r2Reg<BaseAddress + 0x029C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F12r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f12r1 = F12r1Reg<BaseAddress + 0x02A0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F12r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f12r2 = F12r2Reg<BaseAddress + 0x02A4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F13r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f13r1 = F13r1Reg<BaseAddress + 0x02A8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F13r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f13r2 = F13r2Reg<BaseAddress + 0x02AC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F14r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f14r1 = F14r1Reg<BaseAddress + 0x02B0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F14r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f14r2 = F14r2Reg<BaseAddress + 0x02B4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F15r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f15r1 = F15r1Reg<BaseAddress + 0x02B8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F15r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f15r2 = F15r2Reg<BaseAddress + 0x02BC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F16r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f16r1 = F16r1Reg<BaseAddress + 0x02C0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F16r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f16r2 = F16r2Reg<BaseAddress + 0x02C4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F17r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f17r1 = F17r1Reg<BaseAddress + 0x02C8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F17r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f17r2 = F17r2Reg<BaseAddress + 0x02CC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F18r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f18r1 = F18r1Reg<BaseAddress + 0x02D0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F18r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f18r2 = F18r2Reg<BaseAddress + 0x02D4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F19r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f19r1 = F19r1Reg<BaseAddress + 0x02D8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F19r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f19r2 = F19r2Reg<BaseAddress + 0x02DC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F20r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f20r1 = F20r1Reg<BaseAddress + 0x02E0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F20r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f20r2 = F20r2Reg<BaseAddress + 0x02E4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F21r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f21r1 = F21r1Reg<BaseAddress + 0x02E8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F21r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f21r2 = F21r2Reg<BaseAddress + 0x02EC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F22r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f22r1 = F22r1Reg<BaseAddress + 0x02F0>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F22r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f22r2 = F22r2Reg<BaseAddress + 0x02F4>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F23r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f23r1 = F23r1Reg<BaseAddress + 0x02F8>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F23r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f23r2 = F23r2Reg<BaseAddress + 0x02FC>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F24r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f24r1 = F24r1Reg<BaseAddress + 0x0300>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F24r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f24r2 = F24r2Reg<BaseAddress + 0x0304>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F25r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f25r1 = F25r1Reg<BaseAddress + 0x0308>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F25r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f25r2 = F25r2Reg<BaseAddress + 0x030C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F26r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f26r1 = F26r1Reg<BaseAddress + 0x0310>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F26r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f26r2 = F26r2Reg<BaseAddress + 0x0314>;\n\
    \nprivate:\n  template <uint32_t address>\n  class F27r1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ fb1 = FieldModel<address, 1, 0x00000001>;\n    using fb2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using fb3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ fb4 = FieldModel<address, 4, 0x00000001>;\n    using fb5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using fb6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ fb7 = FieldModel<address, 7, 0x00000001>;\n    using fb8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using fb9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ fb10 = FieldModel<address, 10, 0x00000001>;\n    using fb11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using fb12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using fb13 = FieldModel<address, 13, 0x00000001>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using fb15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using fb16 = FieldModel<address, 16, 0x00000001>;\n    using fb17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using fb18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using fb19 = FieldModel<address, 19, 0x00000001>;\n    using fb20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using fb21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using fb22 = FieldModel<address, 22, 0x00000001>;\n    using fb23 = FieldModel<address,\
    \ 23, 0x00000001>;\n    using fb24 = FieldModel<address, 24, 0x00000001>;\n  \
    \  using fb25 = FieldModel<address, 25, 0x00000001>;\n    using fb26 = FieldModel<address,\
    \ 26, 0x00000001>;\n    using fb27 = FieldModel<address, 27, 0x00000001>;\n  \
    \  using fb28 = FieldModel<address, 28, 0x00000001>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fb30 = FieldModel<address, 30, 0x00000001>;\n  \
    \  using fb31 = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ f27r1 = F27r1Reg<BaseAddress + 0x0318>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class F27r2Reg: public RegisterModel<address>\n  {\n  public:\n    using fb0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using fb1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using fb2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ fb3 = FieldModel<address, 3, 0x00000001>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using fb5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ fb6 = FieldModel<address, 6, 0x00000001>;\n    using fb7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using fb8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ fb9 = FieldModel<address, 9, 0x00000001>;\n    using fb10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using fb11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using fb12 = FieldModel<address, 12, 0x00000001>;\n    using fb13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using fb14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using fb15 = FieldModel<address, 15, 0x00000001>;\n    using fb16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fb17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using fb18 = FieldModel<address, 18, 0x00000001>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using fb20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using fb21 = FieldModel<address, 21, 0x00000001>;\n    using fb22 = FieldModel<address,\
    \ 22, 0x00000001>;\n    using fb23 = FieldModel<address, 23, 0x00000001>;\n  \
    \  using fb24 = FieldModel<address, 24, 0x00000001>;\n    using fb25 = FieldModel<address,\
    \ 25, 0x00000001>;\n    using fb26 = FieldModel<address, 26, 0x00000001>;\n  \
    \  using fb27 = FieldModel<address, 27, 0x00000001>;\n    using fb28 = FieldModel<address,\
    \ 28, 0x00000001>;\n    using fb29 = FieldModel<address, 29, 0x00000001>;\n  \
    \  using fb30 = FieldModel<address, 30, 0x00000001>;\n    using fb31 = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using f27r2 = F27r2Reg<BaseAddress + 0x031C>;\n\
    private:\n  template <uint32_t address, uint32_t bankOffset>\n  class TixrBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using stid\
    \ = FieldModel<address, 21, 0x000007FF, bankOffset>;\n    using exid = FieldModel<address,\
    \ 3, 0x0003FFFF, bankOffset>;\n    using ide = FieldModel<address, 2, 0x00000001,\
    \ bankOffset>;\n    using rtr = FieldModel<address, 1, 0x00000001, bankOffset>;\n\
    \    using txrq = FieldModel<address, 0, 0x00000001, bankOffset>;\n  };\n\npublic:\n\
    \  using tixr = TixrBankReg<BaseAddress + 0x0180, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class TdtxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF,\
    \ bankOffset>;\n    using tgt = FieldModel<address, 8, 0x00000001, bankOffset>;\n\
    \    using dlc = FieldModel<address, 0, 0x0000000F, bankOffset>;\n  };\n\npublic:\n\
    \  using tdtxr = TdtxrBankReg<BaseAddress + 0x0184, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class TdlxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using data3 = FieldModel<address, 24, 0x000000FF,\
    \ bankOffset>;\n    using data2 = FieldModel<address, 16, 0x000000FF, bankOffset>;\n\
    \    using data1 = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using\
    \ data0 = FieldModel<address, 0, 0x000000FF, bankOffset>;\n  };\n\npublic:\n \
    \ using tdlxr = TdlxrBankReg<BaseAddress + 0x0188, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class TdhxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using data7 = FieldModel<address, 24, 0x000000FF,\
    \ bankOffset>;\n    using data6 = FieldModel<address, 16, 0x000000FF, bankOffset>;\n\
    \    using data5 = FieldModel<address, 8, 0x000000FF, bankOffset>;\n    using\
    \ data4 = FieldModel<address, 0, 0x000000FF, bankOffset>;\n  };\n\npublic:\n \
    \ using tdhxr = TdhxrBankReg<BaseAddress + 0x018C, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class RixrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using stid = FieldModel<address, 21, 0x000007FF,\
    \ bankOffset>;\n    using exid = FieldModel<address, 3, 0x0003FFFF, bankOffset>;\n\
    \    using ide = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using rtr\
    \ = FieldModel<address, 1, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using\
    \ rixr = RixrBankReg<BaseAddress + 0x01B0, 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class RdtxrBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using time = FieldModel<address, 16, 0x0000FFFF,\
    \ bankOffset>;\n    using fmi = FieldModel<address, 8, 0x000000FF, bankOffset>;\n\
    \    using dlc = FieldModel<address, 0, 0x0000000F, bankOffset>;\n  };\n\npublic:\n\
    \  using rdtxr = RdtxrBankReg<BaseAddress + 0x01B4, 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class F0rxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using fb0 = FieldModel<address, 0, 0x00000001,\
    \ bankOffset>;\n    using fb1 = FieldModel<address, 1, 0x00000001, bankOffset>;\n\
    \    using fb2 = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using fb3\
    \ = FieldModel<address, 3, 0x00000001, bankOffset>;\n    using fb4 = FieldModel<address,\
    \ 4, 0x00000001, bankOffset>;\n    using fb5 = FieldModel<address, 5, 0x00000001,\
    \ bankOffset>;\n    using fb6 = FieldModel<address, 6, 0x00000001, bankOffset>;\n\
    \    using fb7 = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using fb8\
    \ = FieldModel<address, 8, 0x00000001, bankOffset>;\n    using fb9 = FieldModel<address,\
    \ 9, 0x00000001, bankOffset>;\n    using fb10 = FieldModel<address, 10, 0x00000001,\
    \ bankOffset>;\n    using fb11 = FieldModel<address, 11, 0x00000001, bankOffset>;\n\
    \    using fb12 = FieldModel<address, 12, 0x00000001, bankOffset>;\n    using\
    \ fb13 = FieldModel<address, 13, 0x00000001, bankOffset>;\n    using fb14 = FieldModel<address,\
    \ 14, 0x00000001, bankOffset>;\n    using fb15 = FieldModel<address, 15, 0x00000001,\
    \ bankOffset>;\n    using fb16 = FieldModel<address, 16, 0x00000001, bankOffset>;\n\
    \    using fb17 = FieldModel<address, 17, 0x00000001, bankOffset>;\n    using\
    \ fb18 = FieldModel<address, 18, 0x00000001, bankOffset>;\n    using fb19 = FieldModel<address,\
    \ 19, 0x00000001, bankOffset>;\n    using fb20 = FieldModel<address, 20, 0x00000001,\
    \ bankOffset>;\n    using fb21 = FieldModel<address, 21, 0x00000001, bankOffset>;\n\
    \    using fb22 = FieldModel<address, 22, 0x00000001, bankOffset>;\n    using\
    \ fb23 = FieldModel<address, 23, 0x00000001, bankOffset>;\n    using fb24 = FieldModel<address,\
    \ 24, 0x00000001, bankOffset>;\n    using fb25 = FieldModel<address, 25, 0x00000001,\
    \ bankOffset>;\n    using fb26 = FieldModel<address, 26, 0x00000001, bankOffset>;\n\
    \    using fb27 = FieldModel<address, 27, 0x00000001, bankOffset>;\n    using\
    \ fb28 = FieldModel<address, 28, 0x00000001, bankOffset>;\n    using fb29 = FieldModel<address,\
    \ 29, 0x00000001, bankOffset>;\n    using fb30 = FieldModel<address, 30, 0x00000001,\
    \ bankOffset>;\n    using fb31 = FieldModel<address, 31, 0x00000001, bankOffset>;\n\
    \  };\n\npublic:\n  using f0rx = F0rxBankReg<BaseAddress + 0x0240, 0x0004>;\n\
    };\n\n}\n\n#endif /* DRAL_STM32F446_CAN2_H */\n"
  name: CAN2
- content: "#ifndef DRAL_STM32F446_NVIC_H\n#define DRAL_STM32F446_NVIC_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass nvic\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xE000E100;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Iser0Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using setena = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using iser0 = Iser0Reg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Iser1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using setena = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ iser1 = Iser1Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Iser2Reg: public RegisterModel<address>\n  {\n  public:\n    using setena\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using iser2 = Iser2Reg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Icer0Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using clrena = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using icer0 = Icer0Reg<BaseAddress + 0x0080>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Icer1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using clrena = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using icer1 = Icer1Reg<BaseAddress + 0x0084>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Icer2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using clrena = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using icer2 = Icer2Reg<BaseAddress + 0x0088>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Ispr0Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using setpend = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ ispr0 = Ispr0Reg<BaseAddress + 0x0100>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ispr1Reg: public RegisterModel<address>\n  {\n  public:\n    using setpend\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using ispr1 = Ispr1Reg<BaseAddress\
    \ + 0x0104>;\n\nprivate:\n  template <uint32_t address>\n  class Ispr2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using setpend = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using ispr2 = Ispr2Reg<BaseAddress + 0x0108>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Icpr0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using clrpend = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using icpr0 = Icpr0Reg<BaseAddress + 0x0180>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Icpr1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using clrpend = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using icpr1 = Icpr1Reg<BaseAddress + 0x0184>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Icpr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using clrpend = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ icpr2 = Icpr2Reg<BaseAddress + 0x0188>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Iabr0Reg: public RegisterModel<address>\n  {\n  public:\n    using active\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using iabr0 = Iabr0Reg<BaseAddress\
    \ + 0x0200>;\n\nprivate:\n  template <uint32_t address>\n  class Iabr1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using active = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using iabr1 = Iabr1Reg<BaseAddress + 0x0204>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Iabr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using active = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using iabr2 = Iabr2Reg<BaseAddress + 0x0208>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ipr0Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using ipr_n0 = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr0 = Ipr0Reg<BaseAddress + 0x0300>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr1Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr1 = Ipr1Reg<BaseAddress + 0x0304>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr2Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr2 = Ipr2Reg<BaseAddress + 0x0308>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr3Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr3 = Ipr3Reg<BaseAddress + 0x030C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr4Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr4 = Ipr4Reg<BaseAddress + 0x0310>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr5Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr5 = Ipr5Reg<BaseAddress + 0x0314>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr6Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr6 = Ipr6Reg<BaseAddress + 0x0318>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr7Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr7 = Ipr7Reg<BaseAddress + 0x031C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr8Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr8 = Ipr8Reg<BaseAddress + 0x0320>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr9Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr9 = Ipr9Reg<BaseAddress + 0x0324>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr10Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr10 = Ipr10Reg<BaseAddress + 0x0328>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr11Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr11 = Ipr11Reg<BaseAddress + 0x032C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr12Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr12 = Ipr12Reg<BaseAddress + 0x0330>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr13Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr13 = Ipr13Reg<BaseAddress + 0x0334>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr14Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr14 = Ipr14Reg<BaseAddress + 0x0338>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr15Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr15 = Ipr15Reg<BaseAddress + 0x033C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr16Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr16 = Ipr16Reg<BaseAddress + 0x0340>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr17Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr17 = Ipr17Reg<BaseAddress + 0x0344>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr18Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr18 = Ipr18Reg<BaseAddress + 0x0348>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr19Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr19 = Ipr19Reg<BaseAddress + 0x034C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr20Reg: public RegisterModel<address>\n  {\n  public:\n    using ipr_n0\
    \ = FieldModel<address, 0, 0x000000FF>;\n    using ipr_n1 = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF>;\n \
    \   using ipr_n3 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using\
    \ ipr20 = Ipr20Reg<BaseAddress + 0x0350>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr21Reg: public RegisterModel<address>\n  {\n  public:\n    \n  };\n\
    \npublic:\n  using ipr21 = Ipr21Reg<BaseAddress + 0x0354>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Ipr22Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    \n  };\n\npublic:\n  using ipr22 = Ipr22Reg<BaseAddress + 0x0358>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Ipr23Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    \n  };\n\npublic:\n  using ipr23 = Ipr23Reg<BaseAddress +\
    \ 0x035C>;\n\nprivate:\n  template <uint32_t address>\n  class Ipr24Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    \n  };\n\npublic:\n  using ipr24\
    \ = Ipr24Reg<BaseAddress + 0x0360>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Ipr25Reg: public RegisterModel<address>\n  {\n  public:\n    \n  };\n\
    \npublic:\n  using ipr25 = Ipr25Reg<BaseAddress + 0x0364>;\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class IserxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using setena = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using iserx = IserxBankReg<BaseAddress + 0x0000,\
    \ 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class IcerxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using clrena = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\n\
    public:\n  using icerx = IcerxBankReg<BaseAddress + 0x0080, 0x0004>;\n\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class IsprxBankReg: public\
    \ RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using setpend =\
    \ FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n  using isprx\
    \ = IsprxBankReg<BaseAddress + 0x0100, 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address, uint32_t bankOffset>\n  class IcprxBankReg: public RegisterBankModel<address,\
    \ bankOffset>\n  {\n  public:\n    using clrpend = FieldModel<address, 0, 0xFFFFFFFF,\
    \ bankOffset>;\n  };\n\npublic:\n  using icprx = IcprxBankReg<BaseAddress + 0x0180,\
    \ 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class IabrxBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using active = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\n\
    public:\n  using iabrx = IabrxBankReg<BaseAddress + 0x0200, 0x0004>;\n\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class IprxBankReg: public\
    \ RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using ipr_n0 = FieldModel<address,\
    \ 0, 0x000000FF, bankOffset>;\n    using ipr_n1 = FieldModel<address, 8, 0x000000FF,\
    \ bankOffset>;\n    using ipr_n2 = FieldModel<address, 16, 0x000000FF, bankOffset>;\n\
    \    using ipr_n3 = FieldModel<address, 24, 0x000000FF, bankOffset>;\n  };\n\n\
    public:\n  using iprx = IprxBankReg<BaseAddress + 0x0300, 0x0004>;\n\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class Ipr2xBankReg: public\
    \ RegisterBankModel<address, bankOffset>\n  {\n  public:\n    \n  };\n\npublic:\n\
    \  using ipr2x = Ipr2xBankReg<BaseAddress + 0x0354, 0x0004>;\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_NVIC_H */\n"
  name: NVIC
- content: "#ifndef DRAL_STM32F446_FLASH_H\n#define DRAL_STM32F446_FLASH_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass flash\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40023C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class AcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using latency = FieldModel<address, 0, 0x00000007>;\n    using prften = FieldModel<address,\
    \ 8, 0x00000001>;\n    using icen = FieldModel<address, 9, 0x00000001>;\n    using\
    \ dcen = FieldModel<address, 10, 0x00000001>;\n    using icrst = FieldModel<address,\
    \ 11, 0x00000001>;\n    using dcrst = FieldModel<address, 12, 0x00000001>;\n \
    \ };\n\npublic:\n  using acr = AcrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class KeyrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using key = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ keyr = KeyrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class OptkeyrReg: public RegisterModel<address>\n  {\n  public:\n    using\
    \ optkey = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using optkeyr\
    \ = OptkeyrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SrReg: public RegisterModel<address>\n  {\n  public:\n    using eop =\
    \ FieldModel<address, 0, 0x00000001>;\n    using operr = FieldModel<address, 1,\
    \ 0x00000001>;\n    using wrperr = FieldModel<address, 4, 0x00000001>;\n    using\
    \ pgaerr = FieldModel<address, 5, 0x00000001>;\n    using pgperr = FieldModel<address,\
    \ 6, 0x00000001>;\n    using pgserr = FieldModel<address, 7, 0x00000001>;\n  \
    \  using rderr = FieldModel<address, 8, 0x00000001>;\n    using bsy = FieldModel<address,\
    \ 16, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pg = FieldModel<address, 0, 0x00000001>;\n    using\
    \ ser = FieldModel<address, 1, 0x00000001>;\n    using mer = FieldModel<address,\
    \ 2, 0x00000001>;\n    using snb = FieldModel<address, 3, 0x0000000F>;\n    using\
    \ psize = FieldModel<address, 8, 0x00000003>;\n    using strt = FieldModel<address,\
    \ 16, 0x00000001>;\n    using eopie = FieldModel<address, 24, 0x00000001>;\n \
    \   using errie = FieldModel<address, 25, 0x00000001>;\n    using lock = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using cr = CrReg<BaseAddress + 0x0010>;\n\
    \nprivate:\n  template <uint32_t address>\n  class OptcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using optlock = FieldModel<address, 0, 0x00000001>;\n   \
    \ using optstrt = FieldModel<address, 1, 0x00000001>;\n    using bor_lev = FieldModel<address,\
    \ 2, 0x00000003>;\n    using wdg_sw = FieldModel<address, 5, 0x00000001>;\n  \
    \  using nrst_stop = FieldModel<address, 6, 0x00000001>;\n    using nrst_stdby\
    \ = FieldModel<address, 7, 0x00000001>;\n    using rdp = FieldModel<address, 8,\
    \ 0x000000FF>;\n    using nwrp = FieldModel<address, 16, 0x000000FF>;\n    using\
    \ sprmod = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using optcr\
    \ = OptcrReg<BaseAddress + 0x0014>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_FLASH_H\
    \ */\n"
  name: FLASH
- content: "#ifndef DRAL_STM32F446_EXTI_H\n#define DRAL_STM32F446_EXTI_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass exti\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40013C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ImrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mr0 = FieldModel<address, 0, 0x00000001>;\n    using mr1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using mr2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ mr3 = FieldModel<address, 3, 0x00000001>;\n    using mr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using mr5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ mr6 = FieldModel<address, 6, 0x00000001>;\n    using mr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using mr8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ mr9 = FieldModel<address, 9, 0x00000001>;\n    using mr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using mr11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using mr12 = FieldModel<address, 12, 0x00000001>;\n    using mr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mr14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using mr15 = FieldModel<address, 15, 0x00000001>;\n    using mr16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using mr17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using mr18 = FieldModel<address, 18, 0x00000001>;\n    using mr19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using mr20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using mr21 = FieldModel<address, 21, 0x00000001>;\n    using mr22 = FieldModel<address,\
    \ 22, 0x00000001>;\n  };\n\npublic:\n  using imr = ImrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class EmrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mr0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ mr1 = FieldModel<address, 1, 0x00000001>;\n    using mr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using mr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ mr4 = FieldModel<address, 4, 0x00000001>;\n    using mr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using mr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ mr7 = FieldModel<address, 7, 0x00000001>;\n    using mr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using mr9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ mr10 = FieldModel<address, 10, 0x00000001>;\n    using mr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using mr12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using mr13 = FieldModel<address, 13, 0x00000001>;\n    using mr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using mr15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using mr16 = FieldModel<address, 16, 0x00000001>;\n    using mr17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using mr18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using mr19 = FieldModel<address, 19, 0x00000001>;\n    using mr20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using mr21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using mr22 = FieldModel<address, 22, 0x00000001>;\n  };\n\npublic:\n  using\
    \ emr = EmrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class RtsrReg: public RegisterModel<address>\n  {\n  public:\n    using tr0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using tr1 = FieldModel<address, 1,\
    \ 0x00000001>;\n    using tr2 = FieldModel<address, 2, 0x00000001>;\n    using\
    \ tr3 = FieldModel<address, 3, 0x00000001>;\n    using tr4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using tr5 = FieldModel<address, 5, 0x00000001>;\n    using\
    \ tr6 = FieldModel<address, 6, 0x00000001>;\n    using tr7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using tr8 = FieldModel<address, 8, 0x00000001>;\n    using\
    \ tr9 = FieldModel<address, 9, 0x00000001>;\n    using tr10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using tr11 = FieldModel<address, 11, 0x00000001>;\n  \
    \  using tr12 = FieldModel<address, 12, 0x00000001>;\n    using tr13 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using tr14 = FieldModel<address, 14, 0x00000001>;\n  \
    \  using tr15 = FieldModel<address, 15, 0x00000001>;\n    using tr16 = FieldModel<address,\
    \ 16, 0x00000001>;\n    using tr17 = FieldModel<address, 17, 0x00000001>;\n  \
    \  using tr18 = FieldModel<address, 18, 0x00000001>;\n    using tr19 = FieldModel<address,\
    \ 19, 0x00000001>;\n    using tr20 = FieldModel<address, 20, 0x00000001>;\n  \
    \  using tr21 = FieldModel<address, 21, 0x00000001>;\n    using tr22 = FieldModel<address,\
    \ 22, 0x00000001>;\n  };\n\npublic:\n  using rtsr = RtsrReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class FtsrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tr0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ tr1 = FieldModel<address, 1, 0x00000001>;\n    using tr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using tr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ tr4 = FieldModel<address, 4, 0x00000001>;\n    using tr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ tr7 = FieldModel<address, 7, 0x00000001>;\n    using tr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using tr9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ tr10 = FieldModel<address, 10, 0x00000001>;\n    using tr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using tr12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using tr13 = FieldModel<address, 13, 0x00000001>;\n    using tr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using tr15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using tr16 = FieldModel<address, 16, 0x00000001>;\n    using tr17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using tr18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using tr19 = FieldModel<address, 19, 0x00000001>;\n    using tr20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using tr21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using tr22 = FieldModel<address, 22, 0x00000001>;\n  };\n\npublic:\n  using\
    \ ftsr = FtsrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SwierReg: public RegisterModel<address>\n  {\n  public:\n    using swier0\
    \ = FieldModel<address, 0, 0x00000001>;\n    using swier1 = FieldModel<address,\
    \ 1, 0x00000001>;\n    using swier2 = FieldModel<address, 2, 0x00000001>;\n  \
    \  using swier3 = FieldModel<address, 3, 0x00000001>;\n    using swier4 = FieldModel<address,\
    \ 4, 0x00000001>;\n    using swier5 = FieldModel<address, 5, 0x00000001>;\n  \
    \  using swier6 = FieldModel<address, 6, 0x00000001>;\n    using swier7 = FieldModel<address,\
    \ 7, 0x00000001>;\n    using swier8 = FieldModel<address, 8, 0x00000001>;\n  \
    \  using swier9 = FieldModel<address, 9, 0x00000001>;\n    using swier10 = FieldModel<address,\
    \ 10, 0x00000001>;\n    using swier11 = FieldModel<address, 11, 0x00000001>;\n\
    \    using swier12 = FieldModel<address, 12, 0x00000001>;\n    using swier13 =\
    \ FieldModel<address, 13, 0x00000001>;\n    using swier14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using swier15 = FieldModel<address, 15, 0x00000001>;\n\
    \    using swier16 = FieldModel<address, 16, 0x00000001>;\n    using swier17 =\
    \ FieldModel<address, 17, 0x00000001>;\n    using swier18 = FieldModel<address,\
    \ 18, 0x00000001>;\n    using swier19 = FieldModel<address, 19, 0x00000001>;\n\
    \    using swier20 = FieldModel<address, 20, 0x00000001>;\n    using swier21 =\
    \ FieldModel<address, 21, 0x00000001>;\n    using swier22 = FieldModel<address,\
    \ 22, 0x00000001>;\n  };\n\npublic:\n  using swier = SwierReg<BaseAddress + 0x0010>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pr0 = FieldModel<address, 0, 0x00000001>;\n    using\
    \ pr1 = FieldModel<address, 1, 0x00000001>;\n    using pr2 = FieldModel<address,\
    \ 2, 0x00000001>;\n    using pr3 = FieldModel<address, 3, 0x00000001>;\n    using\
    \ pr4 = FieldModel<address, 4, 0x00000001>;\n    using pr5 = FieldModel<address,\
    \ 5, 0x00000001>;\n    using pr6 = FieldModel<address, 6, 0x00000001>;\n    using\
    \ pr7 = FieldModel<address, 7, 0x00000001>;\n    using pr8 = FieldModel<address,\
    \ 8, 0x00000001>;\n    using pr9 = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pr10 = FieldModel<address, 10, 0x00000001>;\n    using pr11 = FieldModel<address,\
    \ 11, 0x00000001>;\n    using pr12 = FieldModel<address, 12, 0x00000001>;\n  \
    \  using pr13 = FieldModel<address, 13, 0x00000001>;\n    using pr14 = FieldModel<address,\
    \ 14, 0x00000001>;\n    using pr15 = FieldModel<address, 15, 0x00000001>;\n  \
    \  using pr16 = FieldModel<address, 16, 0x00000001>;\n    using pr17 = FieldModel<address,\
    \ 17, 0x00000001>;\n    using pr18 = FieldModel<address, 18, 0x00000001>;\n  \
    \  using pr19 = FieldModel<address, 19, 0x00000001>;\n    using pr20 = FieldModel<address,\
    \ 20, 0x00000001>;\n    using pr21 = FieldModel<address, 21, 0x00000001>;\n  \
    \  using pr22 = FieldModel<address, 22, 0x00000001>;\n  };\n\npublic:\n  using\
    \ pr = PrReg<BaseAddress + 0x0014>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_EXTI_H\
    \ */\n"
  name: EXTI
- content: "#ifndef DRAL_STM32F446_OTG_HS_GLOBAL_H\n#define DRAL_STM32F446_OTG_HS_GLOBAL_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_hs_global\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x40040000;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_gotgctlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using srqscs = FieldModel<address, 0, 0x00000001>;\n    using\
    \ srq = FieldModel<address, 1, 0x00000001>;\n    using hngscs = FieldModel<address,\
    \ 8, 0x00000001>;\n    using hnprq = FieldModel<address, 9, 0x00000001>;\n   \
    \ using hshnpen = FieldModel<address, 10, 0x00000001>;\n    using dhnpen = FieldModel<address,\
    \ 11, 0x00000001>;\n    using cidsts = FieldModel<address, 16, 0x00000001>;\n\
    \    using dbct = FieldModel<address, 17, 0x00000001>;\n    using asvld = FieldModel<address,\
    \ 18, 0x00000001>;\n    using bsvld = FieldModel<address, 19, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_gotgctl = Otg_hs_gotgctlReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_gotgintReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using sedet = FieldModel<address, 2, 0x00000001>;\n    using\
    \ srsschg = FieldModel<address, 8, 0x00000001>;\n    using hnsschg = FieldModel<address,\
    \ 9, 0x00000001>;\n    using hngdet = FieldModel<address, 17, 0x00000001>;\n \
    \   using adtochg = FieldModel<address, 18, 0x00000001>;\n    using dbcdne = FieldModel<address,\
    \ 19, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_gotgint = Otg_hs_gotgintReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_gahbcfgReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using gint = FieldModel<address,\
    \ 0, 0x00000001>;\n    using hbstlen = FieldModel<address, 1, 0x0000000F>;\n \
    \   using dmaen = FieldModel<address, 5, 0x00000001>;\n    using txfelvl = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ptxfelvl = FieldModel<address, 8, 0x00000001>;\n\
    \  };\n\npublic:\n  using otg_hs_gahbcfg = Otg_hs_gahbcfgReg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_gusbcfgReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using tocal = FieldModel<address, 0, 0x00000007>;\n    using\
    \ physel = FieldModel<address, 6, 0x00000001>;\n    using srpcap = FieldModel<address,\
    \ 8, 0x00000001>;\n    using hnpcap = FieldModel<address, 9, 0x00000001>;\n  \
    \  using trdt = FieldModel<address, 10, 0x0000000F>;\n    using phylpcs = FieldModel<address,\
    \ 15, 0x00000001>;\n    using ulpifsls = FieldModel<address, 17, 0x00000001>;\n\
    \    using ulpiar = FieldModel<address, 18, 0x00000001>;\n    using ulpicsm =\
    \ FieldModel<address, 19, 0x00000001>;\n    using ulpievbusd = FieldModel<address,\
    \ 20, 0x00000001>;\n    using ulpievbusi = FieldModel<address, 21, 0x00000001>;\n\
    \    using tsdps = FieldModel<address, 22, 0x00000001>;\n    using pcci = FieldModel<address,\
    \ 23, 0x00000001>;\n    using ptci = FieldModel<address, 24, 0x00000001>;\n  \
    \  using ulpiipd = FieldModel<address, 25, 0x00000001>;\n    using fhmod = FieldModel<address,\
    \ 29, 0x00000001>;\n    using fdmod = FieldModel<address, 30, 0x00000001>;\n \
    \   using ctxpkt = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_gusbcfg = Otg_hs_gusbcfgReg<BaseAddress + 0x000C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_grstctlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using csrst = FieldModel<address, 0, 0x00000001>;\n    using\
    \ hsrst = FieldModel<address, 1, 0x00000001>;\n    using fcrst = FieldModel<address,\
    \ 2, 0x00000001>;\n    using rxfflsh = FieldModel<address, 4, 0x00000001>;\n \
    \   using txfflsh = FieldModel<address, 5, 0x00000001>;\n    using txfnum = FieldModel<address,\
    \ 6, 0x0000001F>;\n    using dmareq = FieldModel<address, 30, 0x00000001>;\n \
    \   using ahbidl = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_grstctl = Otg_hs_grstctlReg<BaseAddress + 0x0010>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_gintstsReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cmod = FieldModel<address, 0, 0x00000001>;\n    using\
    \ mmis = FieldModel<address, 1, 0x00000001>;\n    using otgint = FieldModel<address,\
    \ 2, 0x00000001>;\n    using sof = FieldModel<address, 3, 0x00000001>;\n    using\
    \ rxflvl = FieldModel<address, 4, 0x00000001>;\n    using nptxfe = FieldModel<address,\
    \ 5, 0x00000001>;\n    using ginakeff = FieldModel<address, 6, 0x00000001>;\n\
    \    using boutnakeff = FieldModel<address, 7, 0x00000001>;\n    using esusp =\
    \ FieldModel<address, 10, 0x00000001>;\n    using usbsusp = FieldModel<address,\
    \ 11, 0x00000001>;\n    using usbrst = FieldModel<address, 12, 0x00000001>;\n\
    \    using enumdne = FieldModel<address, 13, 0x00000001>;\n    using isoodrp =\
    \ FieldModel<address, 14, 0x00000001>;\n    using eopf = FieldModel<address, 15,\
    \ 0x00000001>;\n    using iepint = FieldModel<address, 18, 0x00000001>;\n    using\
    \ oepint = FieldModel<address, 19, 0x00000001>;\n    using iisoixfr = FieldModel<address,\
    \ 20, 0x00000001>;\n    using pxfr_incompisoout = FieldModel<address, 21, 0x00000001>;\n\
    \    using datafsusp = FieldModel<address, 22, 0x00000001>;\n    using hprtint\
    \ = FieldModel<address, 24, 0x00000001>;\n    using hcint = FieldModel<address,\
    \ 25, 0x00000001>;\n    using ptxfe = FieldModel<address, 26, 0x00000001>;\n \
    \   using cidschg = FieldModel<address, 28, 0x00000001>;\n    using discint =\
    \ FieldModel<address, 29, 0x00000001>;\n    using srqint = FieldModel<address,\
    \ 30, 0x00000001>;\n    using wkuint = FieldModel<address, 31, 0x00000001>;\n\
    \  };\n\npublic:\n  using otg_hs_gintsts = Otg_hs_gintstsReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_gintmskReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mmism = FieldModel<address, 1, 0x00000001>;\n    using\
    \ otgint = FieldModel<address, 2, 0x00000001>;\n    using sofm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using rxflvlm = FieldModel<address, 4, 0x00000001>;\n \
    \   using nptxfem = FieldModel<address, 5, 0x00000001>;\n    using ginakeffm =\
    \ FieldModel<address, 6, 0x00000001>;\n    using gonakeffm = FieldModel<address,\
    \ 7, 0x00000001>;\n    using esuspm = FieldModel<address, 10, 0x00000001>;\n \
    \   using usbsuspm = FieldModel<address, 11, 0x00000001>;\n    using usbrst =\
    \ FieldModel<address, 12, 0x00000001>;\n    using enumdnem = FieldModel<address,\
    \ 13, 0x00000001>;\n    using isoodrpm = FieldModel<address, 14, 0x00000001>;\n\
    \    using eopfm = FieldModel<address, 15, 0x00000001>;\n    using epmism = FieldModel<address,\
    \ 17, 0x00000001>;\n    using iepint = FieldModel<address, 18, 0x00000001>;\n\
    \    using oepint = FieldModel<address, 19, 0x00000001>;\n    using iisoixfrm\
    \ = FieldModel<address, 20, 0x00000001>;\n    using pxfrm_iisooxfrm = FieldModel<address,\
    \ 21, 0x00000001>;\n    using fsuspm = FieldModel<address, 22, 0x00000001>;\n\
    \    using prtim = FieldModel<address, 24, 0x00000001>;\n    using hcim = FieldModel<address,\
    \ 25, 0x00000001>;\n    using ptxfem = FieldModel<address, 26, 0x00000001>;\n\
    \    using cidschgm = FieldModel<address, 28, 0x00000001>;\n    using discint\
    \ = FieldModel<address, 29, 0x00000001>;\n    using srqim = FieldModel<address,\
    \ 30, 0x00000001>;\n    using wuim = FieldModel<address, 31, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_gintmsk = Otg_hs_gintmskReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_grxstsr_hostReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using chnum = FieldModel<address,\
    \ 0, 0x0000000F>;\n    using bcnt = FieldModel<address, 4, 0x000007FF>;\n    using\
    \ dpid = FieldModel<address, 15, 0x00000003>;\n    using pktsts = FieldModel<address,\
    \ 17, 0x0000000F>;\n  };\n\npublic:\n  using otg_hs_grxstsr_host = Otg_hs_grxstsr_hostReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_grxstsp_hostReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using chnum = FieldModel<address,\
    \ 0, 0x0000000F>;\n    using bcnt = FieldModel<address, 4, 0x000007FF>;\n    using\
    \ dpid = FieldModel<address, 15, 0x00000003>;\n    using pktsts = FieldModel<address,\
    \ 17, 0x0000000F>;\n  };\n\npublic:\n  using otg_hs_grxstsp_host = Otg_hs_grxstsp_hostReg<BaseAddress\
    \ + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_grxfsizReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using rxfd = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_grxfsiz = Otg_hs_grxfsizReg<BaseAddress\
    \ + 0x0024>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_gnptxfsiz_hostReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using nptxfsa = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n    using nptxfd = FieldModel<address, 16, 0x0000FFFF>;\n \
    \ };\n\npublic:\n  using otg_hs_gnptxfsiz_host = Otg_hs_gnptxfsiz_hostReg<BaseAddress\
    \ + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_tx0fsiz_peripheralReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using tx0fsa = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n    using tx0fd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using otg_hs_tx0fsiz_peripheral = Otg_hs_tx0fsiz_peripheralReg<BaseAddress\
    \ + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_gnptxstsReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using nptxfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n    using nptqxsav = FieldModel<address, 16, 0x000000FF>;\n\
    \    using nptxqtop = FieldModel<address, 24, 0x0000007F>;\n  };\n\npublic:\n\
    \  using otg_hs_gnptxsts = Otg_hs_gnptxstsReg<BaseAddress + 0x002C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_gccfgReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pwrdwn = FieldModel<address, 16, 0x00000001>;\n   \
    \ using i2cpaden = FieldModel<address, 17, 0x00000001>;\n    using vbusasen =\
    \ FieldModel<address, 18, 0x00000001>;\n    using vbusbsen = FieldModel<address,\
    \ 19, 0x00000001>;\n    using sofouten = FieldModel<address, 20, 0x00000001>;\n\
    \    using novbussens = FieldModel<address, 21, 0x00000001>;\n  };\n\npublic:\n\
    \  using otg_hs_gccfg = Otg_hs_gccfgReg<BaseAddress + 0x0038>;\n\nprivate:\n \
    \ template <uint32_t address>\n  class Otg_hs_cidReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using product_id = FieldModel<address, 0, 0xFFFFFFFF>;\n\
    \  };\n\npublic:\n  using otg_hs_cid = Otg_hs_cidReg<BaseAddress + 0x003C>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hptxfsizReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_hptxfsiz\
    \ = Otg_hs_hptxfsizReg<BaseAddress + 0x0100>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf1\
    \ = Otg_hs_dieptxf1Reg<BaseAddress + 0x0104>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf2Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf2\
    \ = Otg_hs_dieptxf2Reg<BaseAddress + 0x0108>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf3Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf3\
    \ = Otg_hs_dieptxf3Reg<BaseAddress + 0x010C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf4Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf4\
    \ = Otg_hs_dieptxf4Reg<BaseAddress + 0x0110>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf5Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf5\
    \ = Otg_hs_dieptxf5Reg<BaseAddress + 0x0114>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf6Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf6\
    \ = Otg_hs_dieptxf6Reg<BaseAddress + 0x0118>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_dieptxf7Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ineptxsa = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ineptxfd = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dieptxf7\
    \ = Otg_hs_dieptxf7Reg<BaseAddress + 0x011C>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_grxstsr_peripheralReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ bcnt = FieldModel<address, 4, 0x000007FF>;\n    using dpid = FieldModel<address,\
    \ 15, 0x00000003>;\n    using pktsts = FieldModel<address, 17, 0x0000000F>;\n\
    \    using frmnum = FieldModel<address, 21, 0x0000000F>;\n  };\n\npublic:\n  using\
    \ otg_hs_grxstsr_peripheral = Otg_hs_grxstsr_peripheralReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_grxstsp_peripheralReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using epnum = FieldModel<address,\
    \ 0, 0x0000000F>;\n    using bcnt = FieldModel<address, 4, 0x000007FF>;\n    using\
    \ dpid = FieldModel<address, 15, 0x00000003>;\n    using pktsts = FieldModel<address,\
    \ 17, 0x0000000F>;\n    using frmnum = FieldModel<address, 21, 0x0000000F>;\n\
    \  };\n\npublic:\n  using otg_hs_grxstsp_peripheral = Otg_hs_grxstsp_peripheralReg<BaseAddress\
    \ + 0x0020>;\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class Otg_hs_grxstsx_hostBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using chnum = FieldModel<address, 0, 0x0000000F, bankOffset>;\n\
    \    using bcnt = FieldModel<address, 4, 0x000007FF, bankOffset>;\n    using dpid\
    \ = FieldModel<address, 15, 0x00000003, bankOffset>;\n    using pktsts = FieldModel<address,\
    \ 17, 0x0000000F, bankOffset>;\n  };\n\npublic:\n  using otg_hs_grxstsx_host =\
    \ Otg_hs_grxstsx_hostBankReg<BaseAddress + 0x001C, 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_dieptxfxBankReg: public\
    \ RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using ineptxsa =\
    \ FieldModel<address, 0, 0x0000FFFF, bankOffset>;\n    using ineptxfd = FieldModel<address,\
    \ 16, 0x0000FFFF, bankOffset>;\n  };\n\npublic:\n  using otg_hs_dieptxfx = Otg_hs_dieptxfxBankReg<BaseAddress\
    \ + 0x0104, 0x0004>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Otg_hs_grxstsx_peripheralBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using epnum = FieldModel<address, 0, 0x0000000F, bankOffset>;\n\
    \    using bcnt = FieldModel<address, 4, 0x000007FF, bankOffset>;\n    using dpid\
    \ = FieldModel<address, 15, 0x00000003, bankOffset>;\n    using pktsts = FieldModel<address,\
    \ 17, 0x0000000F, bankOffset>;\n    using frmnum = FieldModel<address, 21, 0x0000000F,\
    \ bankOffset>;\n  };\n\npublic:\n  using otg_hs_grxstsx_peripheral = Otg_hs_grxstsx_peripheralBankReg<BaseAddress\
    \ + 0x001C, 0x0004>;\n};\n\n}\n\n#endif /* DRAL_STM32F446_OTG_HS_GLOBAL_H */\n"
  name: OTG_HS_GLOBAL
- content: "#ifndef DRAL_STM32F446_OTG_HS_HOST_H\n#define DRAL_STM32F446_OTG_HS_HOST_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_hs_host\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x40040400;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcfgReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fslspcs = FieldModel<address, 0, 0x00000003>;\n   \
    \ using fslss = FieldModel<address, 2, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcfg = Otg_hs_hcfgReg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hfirReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using frivl = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hfir = Otg_hs_hfirReg<BaseAddress + 0x0004>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hfnumReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using frnum = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ ftrem = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_hfnum\
    \ = Otg_hs_hfnumReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Otg_hs_hptxstsReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ptxfsavl = FieldModel<address, 0, 0x0000FFFF>;\n    using ptxqsav = FieldModel<address,\
    \ 16, 0x000000FF>;\n    using ptxqtop = FieldModel<address, 24, 0x000000FF>;\n\
    \  };\n\npublic:\n  using otg_hs_hptxsts = Otg_hs_hptxstsReg<BaseAddress + 0x0010>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_haintReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using haint = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using otg_hs_haint = Otg_hs_haintReg<BaseAddress + 0x0014>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_haintmskReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using haintm = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\
    \npublic:\n  using otg_hs_haintmsk = Otg_hs_haintmskReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hprtReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pcsts = FieldModel<address, 0, 0x00000001>;\n    using\
    \ pcdet = FieldModel<address, 1, 0x00000001>;\n    using pena = FieldModel<address,\
    \ 2, 0x00000001>;\n    using penchng = FieldModel<address, 3, 0x00000001>;\n \
    \   using poca = FieldModel<address, 4, 0x00000001>;\n    using pocchng = FieldModel<address,\
    \ 5, 0x00000001>;\n    using pres = FieldModel<address, 6, 0x00000001>;\n    using\
    \ psusp = FieldModel<address, 7, 0x00000001>;\n    using prst = FieldModel<address,\
    \ 8, 0x00000001>;\n    using plsts = FieldModel<address, 10, 0x00000003>;\n  \
    \  using ppwr = FieldModel<address, 12, 0x00000001>;\n    using ptctl = FieldModel<address,\
    \ 13, 0x0000000F>;\n    using pspd = FieldModel<address, 17, 0x00000003>;\n  };\n\
    \npublic:\n  using otg_hs_hprt = Otg_hs_hprtReg<BaseAddress + 0x0040>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcchar0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar0 = Otg_hs_hcchar0Reg<BaseAddress + 0x0100>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar1 = Otg_hs_hcchar1Reg<BaseAddress + 0x0120>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar2 = Otg_hs_hcchar2Reg<BaseAddress + 0x0140>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar3 = Otg_hs_hcchar3Reg<BaseAddress + 0x0160>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar4 = Otg_hs_hcchar4Reg<BaseAddress + 0x0180>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar5Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar5 = Otg_hs_hcchar5Reg<BaseAddress + 0x01A0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar6Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar6 = Otg_hs_hcchar6Reg<BaseAddress + 0x01C0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar7Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar7 = Otg_hs_hcchar7Reg<BaseAddress + 0x01E0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar8Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar8 = Otg_hs_hcchar8Reg<BaseAddress + 0x0200>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar9Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ epnum = FieldModel<address, 11, 0x0000000F>;\n    using epdir = FieldModel<address,\
    \ 15, 0x00000001>;\n    using lsdev = FieldModel<address, 17, 0x00000001>;\n \
    \   using eptyp = FieldModel<address, 18, 0x00000003>;\n    using mc = FieldModel<address,\
    \ 20, 0x00000003>;\n    using dad = FieldModel<address, 22, 0x0000007F>;\n   \
    \ using oddfrm = FieldModel<address, 29, 0x00000001>;\n    using chdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using chena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_hcchar9 = Otg_hs_hcchar9Reg<BaseAddress + 0x0220>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar10Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using epnum = FieldModel<address, 11, 0x0000000F>;\n  \
    \  using epdir = FieldModel<address, 15, 0x00000001>;\n    using lsdev = FieldModel<address,\
    \ 17, 0x00000001>;\n    using eptyp = FieldModel<address, 18, 0x00000003>;\n \
    \   using mc = FieldModel<address, 20, 0x00000003>;\n    using dad = FieldModel<address,\
    \ 22, 0x0000007F>;\n    using oddfrm = FieldModel<address, 29, 0x00000001>;\n\
    \    using chdis = FieldModel<address, 30, 0x00000001>;\n    using chena = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcchar10 = Otg_hs_hcchar10Reg<BaseAddress\
    \ + 0x0240>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcchar11Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using epnum = FieldModel<address, 11, 0x0000000F>;\n  \
    \  using epdir = FieldModel<address, 15, 0x00000001>;\n    using lsdev = FieldModel<address,\
    \ 17, 0x00000001>;\n    using eptyp = FieldModel<address, 18, 0x00000003>;\n \
    \   using mc = FieldModel<address, 20, 0x00000003>;\n    using dad = FieldModel<address,\
    \ 22, 0x0000007F>;\n    using oddfrm = FieldModel<address, 29, 0x00000001>;\n\
    \    using chdis = FieldModel<address, 30, 0x00000001>;\n    using chena = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcchar11 = Otg_hs_hcchar11Reg<BaseAddress\
    \ + 0x0260>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt0 = Otg_hs_hcsplt0Reg<BaseAddress\
    \ + 0x0104>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt1 = Otg_hs_hcsplt1Reg<BaseAddress\
    \ + 0x0124>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt2 = Otg_hs_hcsplt2Reg<BaseAddress\
    \ + 0x0144>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt3 = Otg_hs_hcsplt3Reg<BaseAddress\
    \ + 0x0164>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt4Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt4 = Otg_hs_hcsplt4Reg<BaseAddress\
    \ + 0x0184>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt5 = Otg_hs_hcsplt5Reg<BaseAddress\
    \ + 0x01A4>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt6Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt6 = Otg_hs_hcsplt6Reg<BaseAddress\
    \ + 0x01C4>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt7Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt7 = Otg_hs_hcsplt7Reg<BaseAddress\
    \ + 0x01E4>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt8Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt8 = Otg_hs_hcsplt8Reg<BaseAddress\
    \ + 0x0204>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt9Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt9 = Otg_hs_hcsplt9Reg<BaseAddress\
    \ + 0x0224>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt10Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt10 = Otg_hs_hcsplt10Reg<BaseAddress\
    \ + 0x0244>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcsplt11Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using prtaddr = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using hubaddr = FieldModel<address, 7, 0x0000007F>;\n \
    \   using xactpos = FieldModel<address, 14, 0x00000003>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_hcsplt11 = Otg_hs_hcsplt11Reg<BaseAddress\
    \ + 0x0264>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcint0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using chh = FieldModel<address, 1, 0x00000001>;\n    using\
    \ ahberr = FieldModel<address, 2, 0x00000001>;\n    using stall = FieldModel<address,\
    \ 3, 0x00000001>;\n    using nak = FieldModel<address, 4, 0x00000001>;\n    using\
    \ ack = FieldModel<address, 5, 0x00000001>;\n    using nyet = FieldModel<address,\
    \ 6, 0x00000001>;\n    using txerr = FieldModel<address, 7, 0x00000001>;\n   \
    \ using bberr = FieldModel<address, 8, 0x00000001>;\n    using frmor = FieldModel<address,\
    \ 9, 0x00000001>;\n    using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_hcint0 = Otg_hs_hcint0Reg<BaseAddress + 0x0108>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcint1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint1 = Otg_hs_hcint1Reg<BaseAddress + 0x0128>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint2 = Otg_hs_hcint2Reg<BaseAddress + 0x0148>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint3 = Otg_hs_hcint3Reg<BaseAddress + 0x0168>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint4 = Otg_hs_hcint4Reg<BaseAddress + 0x0188>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint5Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint5 = Otg_hs_hcint5Reg<BaseAddress + 0x01A8>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint6Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint6 = Otg_hs_hcint6Reg<BaseAddress + 0x01C8>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint7Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint7 = Otg_hs_hcint7Reg<BaseAddress + 0x01E8>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint8Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint8 = Otg_hs_hcint8Reg<BaseAddress + 0x0208>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint9Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint9 = Otg_hs_hcint9Reg<BaseAddress + 0x0228>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint10Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint10 = Otg_hs_hcint10Reg<BaseAddress + 0x0248>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcint11Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chh = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stall = FieldModel<address, 3, 0x00000001>;\n   \
    \ using nak = FieldModel<address, 4, 0x00000001>;\n    using ack = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerr = FieldModel<address, 7, 0x00000001>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmor = FieldModel<address, 9, 0x00000001>;\n   \
    \ using dterr = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcint11 = Otg_hs_hcint11Reg<BaseAddress + 0x0268>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcintmsk0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk0 = Otg_hs_hcintmsk0Reg<BaseAddress + 0x010C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk1 = Otg_hs_hcintmsk1Reg<BaseAddress + 0x012C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk2 = Otg_hs_hcintmsk2Reg<BaseAddress + 0x014C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk3 = Otg_hs_hcintmsk3Reg<BaseAddress + 0x016C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk4 = Otg_hs_hcintmsk4Reg<BaseAddress + 0x018C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk5Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk5 = Otg_hs_hcintmsk5Reg<BaseAddress + 0x01AC>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk6Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk6 = Otg_hs_hcintmsk6Reg<BaseAddress + 0x01CC>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk7Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk7 = Otg_hs_hcintmsk7Reg<BaseAddress + 0x01EC>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk8Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk8 = Otg_hs_hcintmsk8Reg<BaseAddress + 0x020C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk9Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk9 = Otg_hs_hcintmsk9Reg<BaseAddress + 0x022C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk10Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk10 = Otg_hs_hcintmsk10Reg<BaseAddress + 0x024C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hcintmsk11Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ chhm = FieldModel<address, 1, 0x00000001>;\n    using ahberr = FieldModel<address,\
    \ 2, 0x00000001>;\n    using stallm = FieldModel<address, 3, 0x00000001>;\n  \
    \  using nakm = FieldModel<address, 4, 0x00000001>;\n    using ackm = FieldModel<address,\
    \ 5, 0x00000001>;\n    using nyet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ txerrm = FieldModel<address, 7, 0x00000001>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using frmorm = FieldModel<address, 9, 0x00000001>;\n  \
    \  using dterrm = FieldModel<address, 10, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcintmsk11 = Otg_hs_hcintmsk11Reg<BaseAddress + 0x026C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_hctsiz0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_hctsiz0 = Otg_hs_hctsiz0Reg<BaseAddress\
    \ + 0x0110>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hctsiz1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_hctsiz1 = Otg_hs_hctsiz1Reg<BaseAddress + 0x0130>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hctsiz2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_hctsiz2 = Otg_hs_hctsiz2Reg<BaseAddress\
    \ + 0x0150>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hctsiz3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_hctsiz3 = Otg_hs_hctsiz3Reg<BaseAddress + 0x0170>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hctsiz4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_hctsiz4 = Otg_hs_hctsiz4Reg<BaseAddress\
    \ + 0x0190>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hctsiz5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_hctsiz5 = Otg_hs_hctsiz5Reg<BaseAddress + 0x01B0>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hctsiz6Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_hctsiz6 = Otg_hs_hctsiz6Reg<BaseAddress\
    \ + 0x01D0>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hctsiz7Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_hctsiz7 = Otg_hs_hctsiz7Reg<BaseAddress + 0x01F0>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hctsiz8Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_hctsiz8 = Otg_hs_hctsiz8Reg<BaseAddress\
    \ + 0x0210>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hctsiz9Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_hctsiz9 = Otg_hs_hctsiz9Reg<BaseAddress + 0x0230>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hctsiz10Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using dpid = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_hctsiz10 = Otg_hs_hctsiz10Reg<BaseAddress\
    \ + 0x0250>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_hctsiz11Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using dpid = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_hctsiz11 = Otg_hs_hctsiz11Reg<BaseAddress + 0x0270>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_hcdma0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma0 = Otg_hs_hcdma0Reg<BaseAddress + 0x0114>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma1 = Otg_hs_hcdma1Reg<BaseAddress + 0x0134>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma2 = Otg_hs_hcdma2Reg<BaseAddress + 0x0154>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma3 = Otg_hs_hcdma3Reg<BaseAddress + 0x0174>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma4 = Otg_hs_hcdma4Reg<BaseAddress + 0x0194>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma5Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma5 = Otg_hs_hcdma5Reg<BaseAddress + 0x01B4>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma6Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma6 = Otg_hs_hcdma6Reg<BaseAddress + 0x01D4>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma7Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma7 = Otg_hs_hcdma7Reg<BaseAddress + 0x01F4>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma8Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma8 = Otg_hs_hcdma8Reg<BaseAddress + 0x0214>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma9Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma9 = Otg_hs_hcdma9Reg<BaseAddress + 0x0234>;\n\n\
    private:\n  template <uint32_t address>\n  class Otg_hs_hcdma10Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma10 = Otg_hs_hcdma10Reg<BaseAddress + 0x0254>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_hcdma11Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using otg_hs_hcdma11 = Otg_hs_hcdma11Reg<BaseAddress + 0x0274>;\n\
    private:\n  template <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_hccharxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using mpsiz\
    \ = FieldModel<address, 0, 0x000007FF, bankOffset>;\n    using epnum = FieldModel<address,\
    \ 11, 0x0000000F, bankOffset>;\n    using epdir = FieldModel<address, 15, 0x00000001,\
    \ bankOffset>;\n    using lsdev = FieldModel<address, 17, 0x00000001, bankOffset>;\n\
    \    using eptyp = FieldModel<address, 18, 0x00000003, bankOffset>;\n    using\
    \ mc = FieldModel<address, 20, 0x00000003, bankOffset>;\n    using dad = FieldModel<address,\
    \ 22, 0x0000007F, bankOffset>;\n    using oddfrm = FieldModel<address, 29, 0x00000001,\
    \ bankOffset>;\n    using chdis = FieldModel<address, 30, 0x00000001, bankOffset>;\n\
    \    using chena = FieldModel<address, 31, 0x00000001, bankOffset>;\n  };\n\n\
    public:\n  using otg_hs_hccharx = Otg_hs_hccharxBankReg<BaseAddress + 0x0100,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class Otg_hs_hcspltxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using prtaddr = FieldModel<address, 0, 0x0000007F, bankOffset>;\n\
    \    using hubaddr = FieldModel<address, 7, 0x0000007F, bankOffset>;\n    using\
    \ xactpos = FieldModel<address, 14, 0x00000003, bankOffset>;\n    using complsplt\
    \ = FieldModel<address, 16, 0x00000001, bankOffset>;\n    using spliten = FieldModel<address,\
    \ 31, 0x00000001, bankOffset>;\n  };\n\npublic:\n  using otg_hs_hcspltx = Otg_hs_hcspltxBankReg<BaseAddress\
    \ + 0x0104, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Otg_hs_hcintxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001, bankOffset>;\n\
    \    using chh = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using ahberr\
    \ = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using stall = FieldModel<address,\
    \ 3, 0x00000001, bankOffset>;\n    using nak = FieldModel<address, 4, 0x00000001,\
    \ bankOffset>;\n    using ack = FieldModel<address, 5, 0x00000001, bankOffset>;\n\
    \    using nyet = FieldModel<address, 6, 0x00000001, bankOffset>;\n    using txerr\
    \ = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using bberr = FieldModel<address,\
    \ 8, 0x00000001, bankOffset>;\n    using frmor = FieldModel<address, 9, 0x00000001,\
    \ bankOffset>;\n    using dterr = FieldModel<address, 10, 0x00000001, bankOffset>;\n\
    \  };\n\npublic:\n  using otg_hs_hcintx = Otg_hs_hcintxBankReg<BaseAddress + 0x0108,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class Otg_hs_hcintmskxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001, bankOffset>;\n\
    \    using chhm = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using ahberr\
    \ = FieldModel<address, 2, 0x00000001, bankOffset>;\n    using stallm = FieldModel<address,\
    \ 3, 0x00000001, bankOffset>;\n    using nakm = FieldModel<address, 4, 0x00000001,\
    \ bankOffset>;\n    using ackm = FieldModel<address, 5, 0x00000001, bankOffset>;\n\
    \    using nyet = FieldModel<address, 6, 0x00000001, bankOffset>;\n    using txerrm\
    \ = FieldModel<address, 7, 0x00000001, bankOffset>;\n    using bberrm = FieldModel<address,\
    \ 8, 0x00000001, bankOffset>;\n    using frmorm = FieldModel<address, 9, 0x00000001,\
    \ bankOffset>;\n    using dterrm = FieldModel<address, 10, 0x00000001, bankOffset>;\n\
    \  };\n\npublic:\n  using otg_hs_hcintmskx = Otg_hs_hcintmskxBankReg<BaseAddress\
    \ + 0x010C, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Otg_hs_hctsizxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF, bankOffset>;\n\
    \    using pktcnt = FieldModel<address, 19, 0x000003FF, bankOffset>;\n    using\
    \ dpid = FieldModel<address, 29, 0x00000003, bankOffset>;\n  };\n\npublic:\n \
    \ using otg_hs_hctsizx = Otg_hs_hctsizxBankReg<BaseAddress + 0x0110, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_hcdmaxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using dmaaddr\
    \ = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n  using\
    \ otg_hs_hcdmax = Otg_hs_hcdmaxBankReg<BaseAddress + 0x0114, 0x0020>;\n};\n\n\
    }\n\n#endif /* DRAL_STM32F446_OTG_HS_HOST_H */\n"
  name: OTG_HS_HOST
- content: "#ifndef DRAL_STM32F446_OTG_HS_DEVICE_H\n#define DRAL_STM32F446_OTG_HS_DEVICE_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_hs_device\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x40040800;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_dcfgReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dspd = FieldModel<address, 0, 0x00000003>;\n    using\
    \ nzlsohsk = FieldModel<address, 2, 0x00000001>;\n    using dad = FieldModel<address,\
    \ 4, 0x0000007F>;\n    using pfivl = FieldModel<address, 11, 0x00000003>;\n  \
    \  using perschivl = FieldModel<address, 24, 0x00000003>;\n    using xcvrdly =\
    \ FieldModel<address, 14, 0x00000001>;\n    using erratim = FieldModel<address,\
    \ 15, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_dcfg = Otg_hs_dcfgReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dctlReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using rwusig = FieldModel<address,\
    \ 0, 0x00000001>;\n    using sdis = FieldModel<address, 1, 0x00000001>;\n    using\
    \ ginsts = FieldModel<address, 2, 0x00000001>;\n    using gonsts = FieldModel<address,\
    \ 3, 0x00000001>;\n    using tctl = FieldModel<address, 4, 0x00000007>;\n    using\
    \ sginak = FieldModel<address, 7, 0x00000001>;\n    using cginak = FieldModel<address,\
    \ 8, 0x00000001>;\n    using sgonak = FieldModel<address, 9, 0x00000001>;\n  \
    \  using cgonak = FieldModel<address, 10, 0x00000001>;\n    using poprgdne = FieldModel<address,\
    \ 11, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_dctl = Otg_hs_dctlReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dstsReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using suspsts = FieldModel<address,\
    \ 0, 0x00000001>;\n    using enumspd = FieldModel<address, 1, 0x00000003>;\n \
    \   using eerr = FieldModel<address, 3, 0x00000001>;\n    using fnsof = FieldModel<address,\
    \ 8, 0x00003FFF>;\n  };\n\npublic:\n  using otg_hs_dsts = Otg_hs_dstsReg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepmskReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ tom = FieldModel<address, 3, 0x00000001>;\n    using ittxfemsk = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepnmm = FieldModel<address, 5, 0x00000001>;\n \
    \   using inepnem = FieldModel<address, 6, 0x00000001>;\n    using txfurm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bim = FieldModel<address, 9, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepmsk = Otg_hs_diepmskReg<BaseAddress + 0x0010>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepmskReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using\
    \ epdm = FieldModel<address, 1, 0x00000001>;\n    using stupm = FieldModel<address,\
    \ 3, 0x00000001>;\n    using otepdm = FieldModel<address, 4, 0x00000001>;\n  \
    \  using b2bstup = FieldModel<address, 6, 0x00000001>;\n    using opem = FieldModel<address,\
    \ 8, 0x00000001>;\n    using boim = FieldModel<address, 9, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_doepmsk = Otg_hs_doepmskReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_daintReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using iepint = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ oepint = FieldModel<address, 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_daint\
    \ = Otg_hs_daintReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class Otg_hs_daintmskReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using iepm = FieldModel<address, 0, 0x0000FFFF>;\n    using oepm = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_daintmsk = Otg_hs_daintmskReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dvbusdisReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using vbusdt = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dvbusdis = Otg_hs_dvbusdisReg<BaseAddress\
    \ + 0x0028>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dvbuspulseReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dvbusp = FieldModel<address,\
    \ 0, 0x00000FFF>;\n  };\n\npublic:\n  using otg_hs_dvbuspulse = Otg_hs_dvbuspulseReg<BaseAddress\
    \ + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dthrctlReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using nonisothren = FieldModel<address,\
    \ 0, 0x00000001>;\n    using isothren = FieldModel<address, 1, 0x00000001>;\n\
    \    using txthrlen = FieldModel<address, 2, 0x000001FF>;\n    using rxthren =\
    \ FieldModel<address, 16, 0x00000001>;\n    using rxthrlen = FieldModel<address,\
    \ 17, 0x000001FF>;\n    using arpen = FieldModel<address, 27, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_dthrctl = Otg_hs_dthrctlReg<BaseAddress + 0x0030>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepempmskReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using ineptxfem = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_diepempmsk = Otg_hs_diepempmskReg<BaseAddress\
    \ + 0x0034>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_deachintReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using iep1int = FieldModel<address,\
    \ 1, 0x00000001>;\n    using oep1int = FieldModel<address, 17, 0x00000001>;\n\
    \  };\n\npublic:\n  using otg_hs_deachint = Otg_hs_deachintReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_deachintmskReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using iep1intm = FieldModel<address,\
    \ 1, 0x00000001>;\n    using oep1intm = FieldModel<address, 17, 0x00000001>;\n\
    \  };\n\npublic:\n  using otg_hs_deachintmsk = Otg_hs_deachintmskReg<BaseAddress\
    \ + 0x003C>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepeachmsk1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrcm = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdm = FieldModel<address, 1, 0x00000001>;\n    using\
    \ tom = FieldModel<address, 3, 0x00000001>;\n    using ittxfemsk = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepnmm = FieldModel<address, 5, 0x00000001>;\n \
    \   using inepnem = FieldModel<address, 6, 0x00000001>;\n    using txfurm = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bim = FieldModel<address, 9, 0x00000001>;\n    using\
    \ nakm = FieldModel<address, 13, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_diepeachmsk1\
    \ = Otg_hs_diepeachmsk1Reg<BaseAddress + 0x0044>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Otg_hs_doepeachmsk1Reg: public RegisterModel<address>\n  {\n\
    \  public:\n    using xfrcm = FieldModel<address, 0, 0x00000001>;\n    using epdm\
    \ = FieldModel<address, 1, 0x00000001>;\n    using tom = FieldModel<address, 3,\
    \ 0x00000001>;\n    using ittxfemsk = FieldModel<address, 4, 0x00000001>;\n  \
    \  using inepnmm = FieldModel<address, 5, 0x00000001>;\n    using inepnem = FieldModel<address,\
    \ 6, 0x00000001>;\n    using txfurm = FieldModel<address, 8, 0x00000001>;\n  \
    \  using bim = FieldModel<address, 9, 0x00000001>;\n    using berrm = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nakm = FieldModel<address, 13, 0x00000001>;\n  \
    \  using nyetm = FieldModel<address, 14, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_doepeachmsk1 = Otg_hs_doepeachmsk1Reg<BaseAddress + 0x0084>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_diepctl0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x000007FF>;\n    using\
    \ usbaep = FieldModel<address, 15, 0x00000001>;\n    using eonum_dpid = FieldModel<address,\
    \ 16, 0x00000001>;\n    using naksts = FieldModel<address, 17, 0x00000001>;\n\
    \    using eptyp = FieldModel<address, 18, 0x00000003>;\n    using stall = FieldModel<address,\
    \ 21, 0x00000001>;\n    using txfnum = FieldModel<address, 22, 0x0000000F>;\n\
    \    using cnak = FieldModel<address, 26, 0x00000001>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001>;\n    using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n\
    \    using soddfrm = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl0 = Otg_hs_diepctl0Reg<BaseAddress + 0x0100>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl1 = Otg_hs_diepctl1Reg<BaseAddress + 0x0120>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl2 = Otg_hs_diepctl2Reg<BaseAddress + 0x0140>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl3Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl3 = Otg_hs_diepctl3Reg<BaseAddress + 0x0160>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl4Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl4 = Otg_hs_diepctl4Reg<BaseAddress + 0x0180>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl5Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl5 = Otg_hs_diepctl5Reg<BaseAddress + 0x01A0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl6Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl6 = Otg_hs_diepctl6Reg<BaseAddress + 0x01C0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepctl7Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using stall = FieldModel<address, 21, 0x00000001>;\n \
    \   using txfnum = FieldModel<address, 22, 0x0000000F>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_diepctl7 = Otg_hs_diepctl7Reg<BaseAddress + 0x01E0>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint0Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint0 = Otg_hs_diepint0Reg<BaseAddress + 0x0108>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint1 = Otg_hs_diepint1Reg<BaseAddress + 0x0128>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint2 = Otg_hs_diepint2Reg<BaseAddress + 0x0148>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint3Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint3 = Otg_hs_diepint3Reg<BaseAddress + 0x0168>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint4Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint4 = Otg_hs_diepint4Reg<BaseAddress + 0x0188>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint5Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint5 = Otg_hs_diepint5Reg<BaseAddress + 0x01A8>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint6Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint6 = Otg_hs_diepint6Reg<BaseAddress + 0x01C8>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepint7Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using toc = FieldModel<address, 3, 0x00000001>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001>;\n    using inepne = FieldModel<address, 6, 0x00000001>;\n  \
    \  using txfe = FieldModel<address, 7, 0x00000001>;\n    using txfifoudrn = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bna = FieldModel<address, 9, 0x00000001>;\n    using\
    \ pktdrpsts = FieldModel<address, 11, 0x00000001>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001>;\n    using nak = FieldModel<address, 13, 0x00000001>;\n  };\n\
    \npublic:\n  using otg_hs_diepint7 = Otg_hs_diepint7Reg<BaseAddress + 0x01E8>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_dieptsiz0Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using pktcnt = FieldModel<address, 19, 0x00000003>;\n \
    \ };\n\npublic:\n  using otg_hs_dieptsiz0 = Otg_hs_dieptsiz0Reg<BaseAddress +\
    \ 0x0110>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepdma1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dmaaddr = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using otg_hs_diepdma1 = Otg_hs_diepdma1Reg<BaseAddress\
    \ + 0x0114>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepdma2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dmaaddr = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using otg_hs_diepdma2 = Otg_hs_diepdma2Reg<BaseAddress\
    \ + 0x0134>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepdma3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dmaaddr = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using otg_hs_diepdma3 = Otg_hs_diepdma3Reg<BaseAddress\
    \ + 0x0154>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepdma4Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dmaaddr = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using otg_hs_diepdma4 = Otg_hs_diepdma4Reg<BaseAddress\
    \ + 0x0174>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_diepdma5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using dmaaddr = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using otg_hs_diepdma5 = Otg_hs_diepdma5Reg<BaseAddress\
    \ + 0x0194>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dtxfsts0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dtxfsts0 = Otg_hs_dtxfsts0Reg<BaseAddress\
    \ + 0x0118>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dtxfsts1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dtxfsts1 = Otg_hs_dtxfsts1Reg<BaseAddress\
    \ + 0x0138>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dtxfsts2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dtxfsts2 = Otg_hs_dtxfsts2Reg<BaseAddress\
    \ + 0x0158>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dtxfsts3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dtxfsts3 = Otg_hs_dtxfsts3Reg<BaseAddress\
    \ + 0x0178>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dtxfsts4Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dtxfsts4 = Otg_hs_dtxfsts4Reg<BaseAddress\
    \ + 0x0198>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dtxfsts5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using ineptfsav = FieldModel<address,\
    \ 0, 0x0000FFFF>;\n  };\n\npublic:\n  using otg_hs_dtxfsts5 = Otg_hs_dtxfsts5Reg<BaseAddress\
    \ + 0x01B8>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dieptsiz1Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using mcnt = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_dieptsiz1 = Otg_hs_dieptsiz1Reg<BaseAddress + 0x0130>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_dieptsiz2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using mcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_dieptsiz2 = Otg_hs_dieptsiz2Reg<BaseAddress\
    \ + 0x0150>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dieptsiz3Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using mcnt = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_dieptsiz3 = Otg_hs_dieptsiz3Reg<BaseAddress + 0x0170>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_dieptsiz4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using mcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_dieptsiz4 = Otg_hs_dieptsiz4Reg<BaseAddress\
    \ + 0x0190>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_dieptsiz5Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using mcnt = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_dieptsiz5 = Otg_hs_dieptsiz5Reg<BaseAddress + 0x01B0>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_doepctl0Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mpsiz = FieldModel<address, 0, 0x00000003>;\n    using\
    \ usbaep = FieldModel<address, 15, 0x00000001>;\n    using naksts = FieldModel<address,\
    \ 17, 0x00000001>;\n    using eptyp = FieldModel<address, 18, 0x00000003>;\n \
    \   using snpm = FieldModel<address, 20, 0x00000001>;\n    using stall = FieldModel<address,\
    \ 21, 0x00000001>;\n    using cnak = FieldModel<address, 26, 0x00000001>;\n  \
    \  using snak = FieldModel<address, 27, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_doepctl0 = Otg_hs_doepctl0Reg<BaseAddress + 0x0300>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepctl1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using snpm = FieldModel<address, 20, 0x00000001>;\n  \
    \  using stall = FieldModel<address, 21, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_doepctl1 = Otg_hs_doepctl1Reg<BaseAddress + 0x0320>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepctl2Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using snpm = FieldModel<address, 20, 0x00000001>;\n  \
    \  using stall = FieldModel<address, 21, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_doepctl2 = Otg_hs_doepctl2Reg<BaseAddress + 0x0340>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepctl3Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using mpsiz = FieldModel<address,\
    \ 0, 0x000007FF>;\n    using usbaep = FieldModel<address, 15, 0x00000001>;\n \
    \   using eonum_dpid = FieldModel<address, 16, 0x00000001>;\n    using naksts\
    \ = FieldModel<address, 17, 0x00000001>;\n    using eptyp = FieldModel<address,\
    \ 18, 0x00000003>;\n    using snpm = FieldModel<address, 20, 0x00000001>;\n  \
    \  using stall = FieldModel<address, 21, 0x00000001>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001>;\n    using snak = FieldModel<address, 27, 0x00000001>;\n  \
    \  using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001>;\n    using soddfrm\
    \ = FieldModel<address, 29, 0x00000001>;\n    using epdis = FieldModel<address,\
    \ 30, 0x00000001>;\n    using epena = FieldModel<address, 31, 0x00000001>;\n \
    \ };\n\npublic:\n  using otg_hs_doepctl3 = Otg_hs_doepctl3Reg<BaseAddress + 0x0360>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepint0Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using stup = FieldModel<address, 3, 0x00000001>;\n    using otepdis = FieldModel<address,\
    \ 4, 0x00000001>;\n    using b2bstup = FieldModel<address, 6, 0x00000001>;\n \
    \   using nyet = FieldModel<address, 14, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_doepint0 = Otg_hs_doepint0Reg<BaseAddress + 0x0308>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_doepint1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using stup = FieldModel<address,\
    \ 3, 0x00000001>;\n    using otepdis = FieldModel<address, 4, 0x00000001>;\n \
    \   using b2bstup = FieldModel<address, 6, 0x00000001>;\n    using nyet = FieldModel<address,\
    \ 14, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_doepint1 = Otg_hs_doepint1Reg<BaseAddress\
    \ + 0x0328>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepint2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using stup = FieldModel<address, 3, 0x00000001>;\n    using otepdis = FieldModel<address,\
    \ 4, 0x00000001>;\n    using b2bstup = FieldModel<address, 6, 0x00000001>;\n \
    \   using nyet = FieldModel<address, 14, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_doepint2 = Otg_hs_doepint2Reg<BaseAddress + 0x0348>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_doepint3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using stup = FieldModel<address,\
    \ 3, 0x00000001>;\n    using otepdis = FieldModel<address, 4, 0x00000001>;\n \
    \   using b2bstup = FieldModel<address, 6, 0x00000001>;\n    using nyet = FieldModel<address,\
    \ 14, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_doepint3 = Otg_hs_doepint3Reg<BaseAddress\
    \ + 0x0368>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepint4Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using stup = FieldModel<address, 3, 0x00000001>;\n    using otepdis = FieldModel<address,\
    \ 4, 0x00000001>;\n    using b2bstup = FieldModel<address, 6, 0x00000001>;\n \
    \   using nyet = FieldModel<address, 14, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_doepint4 = Otg_hs_doepint4Reg<BaseAddress + 0x0388>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_doepint5Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using stup = FieldModel<address,\
    \ 3, 0x00000001>;\n    using otepdis = FieldModel<address, 4, 0x00000001>;\n \
    \   using b2bstup = FieldModel<address, 6, 0x00000001>;\n    using nyet = FieldModel<address,\
    \ 14, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_doepint5 = Otg_hs_doepint5Reg<BaseAddress\
    \ + 0x03A8>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_doepint6Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrc = FieldModel<address,\
    \ 0, 0x00000001>;\n    using epdisd = FieldModel<address, 1, 0x00000001>;\n  \
    \  using stup = FieldModel<address, 3, 0x00000001>;\n    using otepdis = FieldModel<address,\
    \ 4, 0x00000001>;\n    using b2bstup = FieldModel<address, 6, 0x00000001>;\n \
    \   using nyet = FieldModel<address, 14, 0x00000001>;\n  };\n\npublic:\n  using\
    \ otg_hs_doepint6 = Otg_hs_doepint6Reg<BaseAddress + 0x03C8>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Otg_hs_doepint7Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001>;\n    using\
    \ epdisd = FieldModel<address, 1, 0x00000001>;\n    using stup = FieldModel<address,\
    \ 3, 0x00000001>;\n    using otepdis = FieldModel<address, 4, 0x00000001>;\n \
    \   using b2bstup = FieldModel<address, 6, 0x00000001>;\n    using nyet = FieldModel<address,\
    \ 14, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_doepint7 = Otg_hs_doepint7Reg<BaseAddress\
    \ + 0x03E8>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_doeptsiz0Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0000007F>;\n    using pktcnt = FieldModel<address, 19, 0x00000001>;\n \
    \   using stupcnt = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n  using\
    \ otg_hs_doeptsiz0 = Otg_hs_doeptsiz0Reg<BaseAddress + 0x0310>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_doeptsiz1Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using rxdpid_stupcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_doeptsiz1 = Otg_hs_doeptsiz1Reg<BaseAddress\
    \ + 0x0330>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_doeptsiz2Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using rxdpid_stupcnt = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n\
    \  using otg_hs_doeptsiz2 = Otg_hs_doeptsiz2Reg<BaseAddress + 0x0350>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_doeptsiz3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF>;\n    using\
    \ pktcnt = FieldModel<address, 19, 0x000003FF>;\n    using rxdpid_stupcnt = FieldModel<address,\
    \ 29, 0x00000003>;\n  };\n\npublic:\n  using otg_hs_doeptsiz3 = Otg_hs_doeptsiz3Reg<BaseAddress\
    \ + 0x0370>;\n\nprivate:\n  template <uint32_t address>\n  class Otg_hs_doeptsiz4Reg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using xfrsiz = FieldModel<address,\
    \ 0, 0x0007FFFF>;\n    using pktcnt = FieldModel<address, 19, 0x000003FF>;\n \
    \   using rxdpid_stupcnt = FieldModel<address, 29, 0x00000003>;\n  };\n\npublic:\n\
    \  using otg_hs_doeptsiz4 = Otg_hs_doeptsiz4Reg<BaseAddress + 0x0390>;\nprivate:\n\
    \  template <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_diepctlxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using mpsiz\
    \ = FieldModel<address, 0, 0x000007FF, bankOffset>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001, bankOffset>;\n    using eonum_dpid = FieldModel<address, 16,\
    \ 0x00000001, bankOffset>;\n    using naksts = FieldModel<address, 17, 0x00000001,\
    \ bankOffset>;\n    using eptyp = FieldModel<address, 18, 0x00000003, bankOffset>;\n\
    \    using stall = FieldModel<address, 21, 0x00000001, bankOffset>;\n    using\
    \ txfnum = FieldModel<address, 22, 0x0000000F, bankOffset>;\n    using cnak =\
    \ FieldModel<address, 26, 0x00000001, bankOffset>;\n    using snak = FieldModel<address,\
    \ 27, 0x00000001, bankOffset>;\n    using sd0pid_sevnfrm = FieldModel<address,\
    \ 28, 0x00000001, bankOffset>;\n    using soddfrm = FieldModel<address, 29, 0x00000001,\
    \ bankOffset>;\n    using epdis = FieldModel<address, 30, 0x00000001, bankOffset>;\n\
    \    using epena = FieldModel<address, 31, 0x00000001, bankOffset>;\n  };\n\n\
    public:\n  using otg_hs_diepctlx = Otg_hs_diepctlxBankReg<BaseAddress + 0x0100,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class Otg_hs_diepintxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using xfrc = FieldModel<address, 0, 0x00000001, bankOffset>;\n\
    \    using epdisd = FieldModel<address, 1, 0x00000001, bankOffset>;\n    using\
    \ toc = FieldModel<address, 3, 0x00000001, bankOffset>;\n    using ittxfe = FieldModel<address,\
    \ 4, 0x00000001, bankOffset>;\n    using inepne = FieldModel<address, 6, 0x00000001,\
    \ bankOffset>;\n    using txfe = FieldModel<address, 7, 0x00000001, bankOffset>;\n\
    \    using txfifoudrn = FieldModel<address, 8, 0x00000001, bankOffset>;\n    using\
    \ bna = FieldModel<address, 9, 0x00000001, bankOffset>;\n    using pktdrpsts =\
    \ FieldModel<address, 11, 0x00000001, bankOffset>;\n    using berr = FieldModel<address,\
    \ 12, 0x00000001, bankOffset>;\n    using nak = FieldModel<address, 13, 0x00000001,\
    \ bankOffset>;\n  };\n\npublic:\n  using otg_hs_diepintx = Otg_hs_diepintxBankReg<BaseAddress\
    \ + 0x0108, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Otg_hs_diepdmaxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using dmaaddr = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n\
    \  };\n\npublic:\n  using otg_hs_diepdmax = Otg_hs_diepdmaxBankReg<BaseAddress\
    \ + 0x0114, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Otg_hs_dtxfstsxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using ineptfsav = FieldModel<address, 0, 0x0000FFFF, bankOffset>;\n\
    \  };\n\npublic:\n  using otg_hs_dtxfstsx = Otg_hs_dtxfstsxBankReg<BaseAddress\
    \ + 0x0118, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class Otg_hs_dieptsizxBankReg: public RegisterBankModel<address, bankOffset>\n\
    \  {\n  public:\n    using xfrsiz = FieldModel<address, 0, 0x0007FFFF, bankOffset>;\n\
    \    using pktcnt = FieldModel<address, 19, 0x000003FF, bankOffset>;\n    using\
    \ mcnt = FieldModel<address, 29, 0x00000003, bankOffset>;\n  };\n\npublic:\n \
    \ using otg_hs_dieptsizx = Otg_hs_dieptsizxBankReg<BaseAddress + 0x0130, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_doepctlxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using mpsiz\
    \ = FieldModel<address, 0, 0x000007FF, bankOffset>;\n    using usbaep = FieldModel<address,\
    \ 15, 0x00000001, bankOffset>;\n    using eonum_dpid = FieldModel<address, 16,\
    \ 0x00000001, bankOffset>;\n    using naksts = FieldModel<address, 17, 0x00000001,\
    \ bankOffset>;\n    using eptyp = FieldModel<address, 18, 0x00000003, bankOffset>;\n\
    \    using snpm = FieldModel<address, 20, 0x00000001, bankOffset>;\n    using\
    \ stall = FieldModel<address, 21, 0x00000001, bankOffset>;\n    using cnak = FieldModel<address,\
    \ 26, 0x00000001, bankOffset>;\n    using snak = FieldModel<address, 27, 0x00000001,\
    \ bankOffset>;\n    using sd0pid_sevnfrm = FieldModel<address, 28, 0x00000001,\
    \ bankOffset>;\n    using soddfrm = FieldModel<address, 29, 0x00000001, bankOffset>;\n\
    \    using epdis = FieldModel<address, 30, 0x00000001, bankOffset>;\n    using\
    \ epena = FieldModel<address, 31, 0x00000001, bankOffset>;\n  };\n\npublic:\n\
    \  using otg_hs_doepctlx = Otg_hs_doepctlxBankReg<BaseAddress + 0x0320, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_doepintxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using xfrc\
    \ = FieldModel<address, 0, 0x00000001, bankOffset>;\n    using epdisd = FieldModel<address,\
    \ 1, 0x00000001, bankOffset>;\n    using stup = FieldModel<address, 3, 0x00000001,\
    \ bankOffset>;\n    using otepdis = FieldModel<address, 4, 0x00000001, bankOffset>;\n\
    \    using b2bstup = FieldModel<address, 6, 0x00000001, bankOffset>;\n    using\
    \ nyet = FieldModel<address, 14, 0x00000001, bankOffset>;\n  };\n\npublic:\n \
    \ using otg_hs_doepintx = Otg_hs_doepintxBankReg<BaseAddress + 0x0308, 0x0020>;\n\
    \nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n  class Otg_hs_doeptsizxBankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using xfrsiz\
    \ = FieldModel<address, 0, 0x0007FFFF, bankOffset>;\n    using pktcnt = FieldModel<address,\
    \ 19, 0x000003FF, bankOffset>;\n    using rxdpid_stupcnt = FieldModel<address,\
    \ 29, 0x00000003, bankOffset>;\n  };\n\npublic:\n  using otg_hs_doeptsizx = Otg_hs_doeptsizxBankReg<BaseAddress\
    \ + 0x0330, 0x0020>;\n};\n\n}\n\n#endif /* DRAL_STM32F446_OTG_HS_DEVICE_H */\n"
  name: OTG_HS_DEVICE
- content: "#ifndef DRAL_STM32F446_OTG_HS_PWRCLK_H\n#define DRAL_STM32F446_OTG_HS_PWRCLK_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass otg_hs_pwrclk\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x40040E00;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Otg_hs_pcgcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using stppclk = FieldModel<address, 0, 0x00000001>;\n   \
    \ using gatehclk = FieldModel<address, 1, 0x00000001>;\n    using physusp = FieldModel<address,\
    \ 4, 0x00000001>;\n  };\n\npublic:\n  using otg_hs_pcgcr = Otg_hs_pcgcrReg<BaseAddress\
    \ + 0x0000>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_OTG_HS_PWRCLK_H */\n"
  name: OTG_HS_PWRCLK
- content: "#ifndef DRAL_STM32F446_SAI1_H\n#define DRAL_STM32F446_SAI1_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass sai1\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40015800;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mcjdiv = FieldModel<address, 20, 0x0000000F>;\n    using nodiv = FieldModel<address,\
    \ 19, 0x00000001>;\n    using dmaen = FieldModel<address, 17, 0x00000001>;\n \
    \   using saiben = FieldModel<address, 16, 0x00000001>;\n    using outdri = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mono = FieldModel<address, 12, 0x00000001>;\n  \
    \  using syncen = FieldModel<address, 10, 0x00000003>;\n    using ckstr = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lsbfirst = FieldModel<address, 8, 0x00000001>;\n\
    \    using ds = FieldModel<address, 5, 0x00000007>;\n    using prtcfg = FieldModel<address,\
    \ 2, 0x00000003>;\n    using mode = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using bcr1 = Bcr1Reg<BaseAddress + 0x0024>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using comp = FieldModel<address, 14, 0x00000003>;\n    using cpl = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mutecn = FieldModel<address, 7, 0x0000003F>;\n \
    \   using muteval = FieldModel<address, 6, 0x00000001>;\n    using mute = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tris = FieldModel<address, 4, 0x00000001>;\n    using\
    \ fflus = FieldModel<address, 3, 0x00000001>;\n    using fth = FieldModel<address,\
    \ 0, 0x00000007>;\n  };\n\npublic:\n  using bcr2 = Bcr2Reg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BfrcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fsoff = FieldModel<address, 18, 0x00000001>;\n    using\
    \ fspol = FieldModel<address, 17, 0x00000001>;\n    using fsdef = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fsall = FieldModel<address, 8, 0x0000007F>;\n  \
    \  using frl = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using bfrcr\
    \ = BfrcrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class BslotrReg: public RegisterModel<address>\n  {\n  public:\n    using sloten\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using nbslot = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using slotsz = FieldModel<address, 6, 0x00000003>;\n  \
    \  using fboff = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using\
    \ bslotr = BslotrReg<BaseAddress + 0x0030>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class BimReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using lfsdetie = FieldModel<address, 6, 0x00000001>;\n    using afsdetie =\
    \ FieldModel<address, 5, 0x00000001>;\n    using cnrdyie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using freqie = FieldModel<address, 3, 0x00000001>;\n  \
    \  using wckcfg = FieldModel<address, 2, 0x00000001>;\n    using mutedet = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ovrudrie = FieldModel<address, 0, 0x00000001>;\n\
    \  };\n\npublic:\n  using bim = BimReg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class BsrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using flvl = FieldModel<address, 16, 0x00000007>;\n    using lfsdet = FieldModel<address,\
    \ 6, 0x00000001>;\n    using afsdet = FieldModel<address, 5, 0x00000001>;\n  \
    \  using cnrdy = FieldModel<address, 4, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 3, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using bsr = BsrReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BclrfrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using lfsdet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cafsdet = FieldModel<address, 5, 0x00000001>;\n    using cnrdy = FieldModel<address,\
    \ 4, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using bclrfr = BclrfrReg<BaseAddress + 0x003C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using bdr = BdrReg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Acr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using mcjdiv = FieldModel<address, 20, 0x0000000F>;\n    using nodiv = FieldModel<address,\
    \ 19, 0x00000001>;\n    using dmaen = FieldModel<address, 17, 0x00000001>;\n \
    \   using saiaen = FieldModel<address, 16, 0x00000001>;\n    using outdri = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mono = FieldModel<address, 12, 0x00000001>;\n  \
    \  using syncen = FieldModel<address, 10, 0x00000003>;\n    using ckstr = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lsbfirst = FieldModel<address, 8, 0x00000001>;\n\
    \    using ds = FieldModel<address, 5, 0x00000007>;\n    using prtcfg = FieldModel<address,\
    \ 2, 0x00000003>;\n    using mode = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using acr1 = Acr1Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Acr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using comp = FieldModel<address, 14, 0x00000003>;\n    using cpl = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mutecn = FieldModel<address, 7, 0x0000003F>;\n \
    \   using muteval = FieldModel<address, 6, 0x00000001>;\n    using mute = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tris = FieldModel<address, 4, 0x00000001>;\n    using\
    \ fflus = FieldModel<address, 3, 0x00000001>;\n    using fth = FieldModel<address,\
    \ 0, 0x00000007>;\n  };\n\npublic:\n  using acr2 = Acr2Reg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fsoff = FieldModel<address, 18, 0x00000001>;\n    using\
    \ fspol = FieldModel<address, 17, 0x00000001>;\n    using fsdef = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fsall = FieldModel<address, 8, 0x0000007F>;\n  \
    \  using frl = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using afrcr\
    \ = AfrcrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AslotrReg: public RegisterModel<address>\n  {\n  public:\n    using sloten\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using nbslot = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using slotsz = FieldModel<address, 6, 0x00000003>;\n  \
    \  using fboff = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using\
    \ aslotr = AslotrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class AimReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using lfsdet = FieldModel<address, 6, 0x00000001>;\n    using afsdetie = FieldModel<address,\
    \ 5, 0x00000001>;\n    using cnrdyie = FieldModel<address, 4, 0x00000001>;\n \
    \   using freqie = FieldModel<address, 3, 0x00000001>;\n    using wckcfg = FieldModel<address,\
    \ 2, 0x00000001>;\n    using mutedet = FieldModel<address, 1, 0x00000001>;\n \
    \   using ovrudrie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ aim = AimReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AsrReg: public RegisterModel<address>\n  {\n  public:\n    using flvl\
    \ = FieldModel<address, 16, 0x00000007>;\n    using lfsdet = FieldModel<address,\
    \ 6, 0x00000001>;\n    using afsdet = FieldModel<address, 5, 0x00000001>;\n  \
    \  using cnrdy = FieldModel<address, 4, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 3, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using asr = AsrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AclrfrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using lfsdet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cafsdet = FieldModel<address, 5, 0x00000001>;\n    using cnrdy = FieldModel<address,\
    \ 4, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using aclrfr = AclrfrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using adr = AdrReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class GcrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using syncin = FieldModel<address, 0, 0x00000003>;\n    using syncout = FieldModel<address,\
    \ 4, 0x00000003>;\n  };\n\npublic:\n  using gcr = GcrReg<BaseAddress + 0x0000>;\n\
    private:\n  template <uint32_t address, uint32_t bankOffset>\n  class Xcr2BankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using comp\
    \ = FieldModel<address, 14, 0x00000003, bankOffset>;\n    using cpl = FieldModel<address,\
    \ 13, 0x00000001, bankOffset>;\n    using mutecn = FieldModel<address, 7, 0x0000003F,\
    \ bankOffset>;\n    using muteval = FieldModel<address, 6, 0x00000001, bankOffset>;\n\
    \    using mute = FieldModel<address, 5, 0x00000001, bankOffset>;\n    using tris\
    \ = FieldModel<address, 4, 0x00000001, bankOffset>;\n    using fflus = FieldModel<address,\
    \ 3, 0x00000001, bankOffset>;\n    using fth = FieldModel<address, 0, 0x00000007,\
    \ bankOffset>;\n  };\n\npublic:\n  using xcr2 = Xcr2BankReg<BaseAddress + 0x0008,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class XfrcrBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using fsoff = FieldModel<address, 18, 0x00000001, bankOffset>;\n    using\
    \ fspol = FieldModel<address, 17, 0x00000001, bankOffset>;\n    using fsdef =\
    \ FieldModel<address, 16, 0x00000001, bankOffset>;\n    using fsall = FieldModel<address,\
    \ 8, 0x0000007F, bankOffset>;\n    using frl = FieldModel<address, 0, 0x000000FF,\
    \ bankOffset>;\n  };\n\npublic:\n  using xfrcr = XfrcrBankReg<BaseAddress + 0x000C,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class XslotrBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using sloten = FieldModel<address, 16, 0x0000FFFF, bankOffset>;\n    using\
    \ nbslot = FieldModel<address, 8, 0x0000000F, bankOffset>;\n    using slotsz =\
    \ FieldModel<address, 6, 0x00000003, bankOffset>;\n    using fboff = FieldModel<address,\
    \ 0, 0x0000001F, bankOffset>;\n  };\n\npublic:\n  using xslotr = XslotrBankReg<BaseAddress\
    \ + 0x0010, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class XdrBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using data = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using xdr = XdrBankReg<BaseAddress + 0x0020, 0x0020>;\n};\n\n}\n\n#endif /*\
    \ DRAL_STM32F446_SAI1_H */\n"
  name: SAI1
- content: "#ifndef DRAL_STM32F446_SAI2_H\n#define DRAL_STM32F446_SAI2_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass sai2\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40015C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr1Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using mcjdiv = FieldModel<address, 20, 0x0000000F>;\n    using nodiv = FieldModel<address,\
    \ 19, 0x00000001>;\n    using dmaen = FieldModel<address, 17, 0x00000001>;\n \
    \   using saiben = FieldModel<address, 16, 0x00000001>;\n    using outdri = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mono = FieldModel<address, 12, 0x00000001>;\n  \
    \  using syncen = FieldModel<address, 10, 0x00000003>;\n    using ckstr = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lsbfirst = FieldModel<address, 8, 0x00000001>;\n\
    \    using ds = FieldModel<address, 5, 0x00000007>;\n    using prtcfg = FieldModel<address,\
    \ 2, 0x00000003>;\n    using mode = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using bcr1 = Bcr1Reg<BaseAddress + 0x0024>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Bcr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using comp = FieldModel<address, 14, 0x00000003>;\n    using cpl = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mutecn = FieldModel<address, 7, 0x0000003F>;\n \
    \   using muteval = FieldModel<address, 6, 0x00000001>;\n    using mute = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tris = FieldModel<address, 4, 0x00000001>;\n    using\
    \ fflus = FieldModel<address, 3, 0x00000001>;\n    using fth = FieldModel<address,\
    \ 0, 0x00000007>;\n  };\n\npublic:\n  using bcr2 = Bcr2Reg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BfrcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fsoff = FieldModel<address, 18, 0x00000001>;\n    using\
    \ fspol = FieldModel<address, 17, 0x00000001>;\n    using fsdef = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fsall = FieldModel<address, 8, 0x0000007F>;\n  \
    \  using frl = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using bfrcr\
    \ = BfrcrReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class BslotrReg: public RegisterModel<address>\n  {\n  public:\n    using sloten\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using nbslot = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using slotsz = FieldModel<address, 6, 0x00000003>;\n  \
    \  using fboff = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using\
    \ bslotr = BslotrReg<BaseAddress + 0x0030>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class BimReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using lfsdetie = FieldModel<address, 6, 0x00000001>;\n    using afsdetie =\
    \ FieldModel<address, 5, 0x00000001>;\n    using cnrdyie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using freqie = FieldModel<address, 3, 0x00000001>;\n  \
    \  using wckcfg = FieldModel<address, 2, 0x00000001>;\n    using mutedet = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ovrudrie = FieldModel<address, 0, 0x00000001>;\n\
    \  };\n\npublic:\n  using bim = BimReg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class BsrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using flvl = FieldModel<address, 16, 0x00000007>;\n    using lfsdet = FieldModel<address,\
    \ 6, 0x00000001>;\n    using afsdet = FieldModel<address, 5, 0x00000001>;\n  \
    \  using cnrdy = FieldModel<address, 4, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 3, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using bsr = BsrReg<BaseAddress + 0x0038>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BclrfrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using lfsdet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cafsdet = FieldModel<address, 5, 0x00000001>;\n    using cnrdy = FieldModel<address,\
    \ 4, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using bclrfr = BclrfrReg<BaseAddress + 0x003C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class BdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using bdr = BdrReg<BaseAddress + 0x0040>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Acr1Reg: public RegisterModel<address>\n  {\n  public:\n \
    \   using mcjdiv = FieldModel<address, 20, 0x0000000F>;\n    using nodiv = FieldModel<address,\
    \ 19, 0x00000001>;\n    using dmaen = FieldModel<address, 17, 0x00000001>;\n \
    \   using saiaen = FieldModel<address, 16, 0x00000001>;\n    using outdri = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mono = FieldModel<address, 12, 0x00000001>;\n  \
    \  using syncen = FieldModel<address, 10, 0x00000003>;\n    using ckstr = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lsbfirst = FieldModel<address, 8, 0x00000001>;\n\
    \    using ds = FieldModel<address, 5, 0x00000007>;\n    using prtcfg = FieldModel<address,\
    \ 2, 0x00000003>;\n    using mode = FieldModel<address, 0, 0x00000003>;\n  };\n\
    \npublic:\n  using acr1 = Acr1Reg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Acr2Reg: public RegisterModel<address>\n  {\n  public:\n\
    \    using comp = FieldModel<address, 14, 0x00000003>;\n    using cpl = FieldModel<address,\
    \ 13, 0x00000001>;\n    using mutecn = FieldModel<address, 7, 0x0000003F>;\n \
    \   using muteval = FieldModel<address, 6, 0x00000001>;\n    using mute = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tris = FieldModel<address, 4, 0x00000001>;\n    using\
    \ fflus = FieldModel<address, 3, 0x00000001>;\n    using fth = FieldModel<address,\
    \ 0, 0x00000007>;\n  };\n\npublic:\n  using acr2 = Acr2Reg<BaseAddress + 0x0008>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AfrcrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fsoff = FieldModel<address, 18, 0x00000001>;\n    using\
    \ fspol = FieldModel<address, 17, 0x00000001>;\n    using fsdef = FieldModel<address,\
    \ 16, 0x00000001>;\n    using fsall = FieldModel<address, 8, 0x0000007F>;\n  \
    \  using frl = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n  using afrcr\
    \ = AfrcrReg<BaseAddress + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AslotrReg: public RegisterModel<address>\n  {\n  public:\n    using sloten\
    \ = FieldModel<address, 16, 0x0000FFFF>;\n    using nbslot = FieldModel<address,\
    \ 8, 0x0000000F>;\n    using slotsz = FieldModel<address, 6, 0x00000003>;\n  \
    \  using fboff = FieldModel<address, 0, 0x0000001F>;\n  };\n\npublic:\n  using\
    \ aslotr = AslotrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class AimReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using lfsdet = FieldModel<address, 6, 0x00000001>;\n    using afsdetie = FieldModel<address,\
    \ 5, 0x00000001>;\n    using cnrdyie = FieldModel<address, 4, 0x00000001>;\n \
    \   using freqie = FieldModel<address, 3, 0x00000001>;\n    using wckcfg = FieldModel<address,\
    \ 2, 0x00000001>;\n    using mutedet = FieldModel<address, 1, 0x00000001>;\n \
    \   using ovrudrie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ aim = AimReg<BaseAddress + 0x0014>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AsrReg: public RegisterModel<address>\n  {\n  public:\n    using flvl\
    \ = FieldModel<address, 16, 0x00000007>;\n    using lfsdet = FieldModel<address,\
    \ 6, 0x00000001>;\n    using afsdet = FieldModel<address, 5, 0x00000001>;\n  \
    \  using cnrdy = FieldModel<address, 4, 0x00000001>;\n    using freq = FieldModel<address,\
    \ 3, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using asr = AsrReg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AclrfrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using lfsdet = FieldModel<address, 6, 0x00000001>;\n    using\
    \ cafsdet = FieldModel<address, 5, 0x00000001>;\n    using cnrdy = FieldModel<address,\
    \ 4, 0x00000001>;\n    using wckcfg = FieldModel<address, 2, 0x00000001>;\n  \
    \  using mutedet = FieldModel<address, 1, 0x00000001>;\n    using ovrudr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using aclrfr = AclrfrReg<BaseAddress + 0x001C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class AdrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using data = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using adr = AdrReg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class GcrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using syncin = FieldModel<address, 0, 0x00000003>;\n    using syncout = FieldModel<address,\
    \ 4, 0x00000003>;\n  };\n\npublic:\n  using gcr = GcrReg<BaseAddress + 0x0000>;\n\
    private:\n  template <uint32_t address, uint32_t bankOffset>\n  class Xcr2BankReg:\
    \ public RegisterBankModel<address, bankOffset>\n  {\n  public:\n    using comp\
    \ = FieldModel<address, 14, 0x00000003, bankOffset>;\n    using cpl = FieldModel<address,\
    \ 13, 0x00000001, bankOffset>;\n    using mutecn = FieldModel<address, 7, 0x0000003F,\
    \ bankOffset>;\n    using muteval = FieldModel<address, 6, 0x00000001, bankOffset>;\n\
    \    using mute = FieldModel<address, 5, 0x00000001, bankOffset>;\n    using tris\
    \ = FieldModel<address, 4, 0x00000001, bankOffset>;\n    using fflus = FieldModel<address,\
    \ 3, 0x00000001, bankOffset>;\n    using fth = FieldModel<address, 0, 0x00000007,\
    \ bankOffset>;\n  };\n\npublic:\n  using xcr2 = Xcr2BankReg<BaseAddress + 0x0008,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class XfrcrBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using fsoff = FieldModel<address, 18, 0x00000001, bankOffset>;\n    using\
    \ fspol = FieldModel<address, 17, 0x00000001, bankOffset>;\n    using fsdef =\
    \ FieldModel<address, 16, 0x00000001, bankOffset>;\n    using fsall = FieldModel<address,\
    \ 8, 0x0000007F, bankOffset>;\n    using frl = FieldModel<address, 0, 0x000000FF,\
    \ bankOffset>;\n  };\n\npublic:\n  using xfrcr = XfrcrBankReg<BaseAddress + 0x000C,\
    \ 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n \
    \ class XslotrBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using sloten = FieldModel<address, 16, 0x0000FFFF, bankOffset>;\n    using\
    \ nbslot = FieldModel<address, 8, 0x0000000F, bankOffset>;\n    using slotsz =\
    \ FieldModel<address, 6, 0x00000003, bankOffset>;\n    using fboff = FieldModel<address,\
    \ 0, 0x0000001F, bankOffset>;\n  };\n\npublic:\n  using xslotr = XslotrBankReg<BaseAddress\
    \ + 0x0010, 0x0020>;\n\nprivate:\n  template <uint32_t address, uint32_t bankOffset>\n\
    \  class XdrBankReg: public RegisterBankModel<address, bankOffset>\n  {\n  public:\n\
    \    using data = FieldModel<address, 0, 0xFFFFFFFF, bankOffset>;\n  };\n\npublic:\n\
    \  using xdr = XdrBankReg<BaseAddress + 0x0020, 0x0020>;\n};\n\n}\n\n#endif /*\
    \ DRAL_STM32F446_SAI2_H */\n"
  name: SAI2
- content: "#ifndef DRAL_STM32F446_PWR_H\n#define DRAL_STM32F446_PWR_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass pwr\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40007000;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using lpds = FieldModel<address, 0, 0x00000001>;\n    using pdds = FieldModel<address,\
    \ 1, 0x00000001>;\n    using cwuf = FieldModel<address, 2, 0x00000001>;\n    using\
    \ csbf = FieldModel<address, 3, 0x00000001>;\n    using pvde = FieldModel<address,\
    \ 4, 0x00000001>;\n    using pls = FieldModel<address, 5, 0x00000007>;\n    using\
    \ dbp = FieldModel<address, 8, 0x00000001>;\n    using fpds = FieldModel<address,\
    \ 9, 0x00000001>;\n    using lplvds = FieldModel<address, 10, 0x00000001>;\n \
    \   using mrlvds = FieldModel<address, 11, 0x00000001>;\n    using adcdc1 = FieldModel<address,\
    \ 13, 0x00000001>;\n    using vos = FieldModel<address, 14, 0x00000003>;\n   \
    \ using oden = FieldModel<address, 16, 0x00000001>;\n    using odswen = FieldModel<address,\
    \ 17, 0x00000001>;\n    using uden = FieldModel<address, 18, 0x00000003>;\n  \
    \  using fmssr = FieldModel<address, 20, 0x00000001>;\n    using fissr = FieldModel<address,\
    \ 21, 0x00000001>;\n  };\n\npublic:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CsrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using wuf = FieldModel<address, 0, 0x00000001>;\n    using\
    \ sbf = FieldModel<address, 1, 0x00000001>;\n    using pvdo = FieldModel<address,\
    \ 2, 0x00000001>;\n    using brr = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ewup2 = FieldModel<address, 7, 0x00000001>;\n    using ewup = FieldModel<address,\
    \ 8, 0x00000001>;\n    using bre = FieldModel<address, 9, 0x00000001>;\n    using\
    \ vosrdy = FieldModel<address, 14, 0x00000001>;\n    using odrdy = FieldModel<address,\
    \ 16, 0x00000001>;\n    using odswrdy = FieldModel<address, 17, 0x00000001>;\n\
    \    using udrdy = FieldModel<address, 18, 0x00000003>;\n  };\n\npublic:\n  using\
    \ csr = CsrReg<BaseAddress + 0x0004>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_PWR_H\
    \ */\n"
  name: PWR
- content: "#ifndef DRAL_STM32F446_QUADSPI_H\n#define DRAL_STM32F446_QUADSPI_H\n\n\
    #include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass quadspi\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0xA0001000;\n\nprivate:\n\
    \  template <uint32_t address>\n  class CrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using prescaler = FieldModel<address, 24, 0x000000FF>;\n\
    \    using pmm = FieldModel<address, 23, 0x00000001>;\n    using apms = FieldModel<address,\
    \ 22, 0x00000001>;\n    using toie = FieldModel<address, 20, 0x00000001>;\n  \
    \  using smie = FieldModel<address, 19, 0x00000001>;\n    using ftie = FieldModel<address,\
    \ 18, 0x00000001>;\n    using tcie = FieldModel<address, 17, 0x00000001>;\n  \
    \  using teie = FieldModel<address, 16, 0x00000001>;\n    using fthres = FieldModel<address,\
    \ 8, 0x0000001F>;\n    using fsel = FieldModel<address, 7, 0x00000001>;\n    using\
    \ dfm = FieldModel<address, 6, 0x00000001>;\n    using sshift = FieldModel<address,\
    \ 4, 0x00000001>;\n    using tcen = FieldModel<address, 3, 0x00000001>;\n    using\
    \ dmaen = FieldModel<address, 2, 0x00000001>;\n    using abort = FieldModel<address,\
    \ 1, 0x00000001>;\n    using en = FieldModel<address, 0, 0x00000001>;\n  };\n\n\
    public:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class DcrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using fsize = FieldModel<address, 16, 0x0000001F>;\n    using csht = FieldModel<address,\
    \ 8, 0x00000007>;\n    using ckmode = FieldModel<address, 0, 0x00000001>;\n  };\n\
    \npublic:\n  using dcr = DcrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class SrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using flevel = FieldModel<address, 8, 0x0000007F>;\n    using busy = FieldModel<address,\
    \ 5, 0x00000001>;\n    using tof = FieldModel<address, 4, 0x00000001>;\n    using\
    \ smf = FieldModel<address, 3, 0x00000001>;\n    using ftf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using tcf = FieldModel<address, 1, 0x00000001>;\n    using\
    \ tef = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using sr = SrReg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class FcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using ctof = FieldModel<address,\
    \ 4, 0x00000001>;\n    using csmf = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ctcf = FieldModel<address, 1, 0x00000001>;\n    using ctef = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using fcr = FcrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DlrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dl = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using dlr = DlrReg<BaseAddress + 0x0010>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class CcrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ddrm = FieldModel<address, 31, 0x00000001>;\n    using dhhc = FieldModel<address,\
    \ 30, 0x00000001>;\n    using sioo = FieldModel<address, 28, 0x00000001>;\n  \
    \  using fmode = FieldModel<address, 26, 0x00000003>;\n    using dmode = FieldModel<address,\
    \ 24, 0x00000003>;\n    using dcyc = FieldModel<address, 18, 0x0000001F>;\n  \
    \  using absize = FieldModel<address, 16, 0x00000003>;\n    using abmode = FieldModel<address,\
    \ 14, 0x00000003>;\n    using adsize = FieldModel<address, 12, 0x00000003>;\n\
    \    using admode = FieldModel<address, 10, 0x00000003>;\n    using imode = FieldModel<address,\
    \ 8, 0x00000003>;\n    using instruction = FieldModel<address, 0, 0x000000FF>;\n\
    \  };\n\npublic:\n  using ccr = CcrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ArReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using address = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ ar = ArReg<BaseAddress + 0x0018>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AbrReg: public RegisterModel<address>\n  {\n  public:\n    using alternate\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using abr = AbrReg<BaseAddress\
    \ + 0x001C>;\n\nprivate:\n  template <uint32_t address>\n  class DrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using data = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0020>;\n\
    \nprivate:\n  template <uint32_t address>\n  class PsmkrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mask = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\n\
    public:\n  using psmkr = PsmkrReg<BaseAddress + 0x0024>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class PsmarReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using match = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n\
    \  using psmar = PsmarReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class PirReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using interval = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using\
    \ pir = PirReg<BaseAddress + 0x002C>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class LptrReg: public RegisterModel<address>\n  {\n  public:\n    using timeout\
    \ = FieldModel<address, 0, 0x0000FFFF>;\n  };\n\npublic:\n  using lptr = LptrReg<BaseAddress\
    \ + 0x0030>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_QUADSPI_H */\n"
  name: QUADSPI
- content: "#ifndef DRAL_STM32F446_SPDIF_RX_H\n#define DRAL_STM32F446_SPDIF_RX_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass spdif_rx\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x40004000;\n\nprivate:\n\
    \  template <uint32_t address>\n  class CrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using spdifen = FieldModel<address, 0, 0x00000003>;\n   \
    \ using rxdmaen = FieldModel<address, 2, 0x00000001>;\n    using rxsteo = FieldModel<address,\
    \ 3, 0x00000001>;\n    using drfmt = FieldModel<address, 4, 0x00000003>;\n   \
    \ using pmsk = FieldModel<address, 6, 0x00000001>;\n    using vmsk = FieldModel<address,\
    \ 7, 0x00000001>;\n    using cumsk = FieldModel<address, 8, 0x00000001>;\n   \
    \ using ptmsk = FieldModel<address, 9, 0x00000001>;\n    using cbdmaen = FieldModel<address,\
    \ 10, 0x00000001>;\n    using chsel = FieldModel<address, 11, 0x00000001>;\n \
    \   using nbtr = FieldModel<address, 12, 0x00000003>;\n    using wfa = FieldModel<address,\
    \ 14, 0x00000001>;\n    using insel = FieldModel<address, 16, 0x00000007>;\n \
    \ };\n\npublic:\n  using cr = CrReg<BaseAddress + 0x0000>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ImrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using rxneie = FieldModel<address, 0, 0x00000001>;\n    using csrneie = FieldModel<address,\
    \ 1, 0x00000001>;\n    using perrie = FieldModel<address, 2, 0x00000001>;\n  \
    \  using ovrie = FieldModel<address, 3, 0x00000001>;\n    using sblkie = FieldModel<address,\
    \ 4, 0x00000001>;\n    using syncdie = FieldModel<address, 5, 0x00000001>;\n \
    \   using ifeie = FieldModel<address, 6, 0x00000001>;\n  };\n\npublic:\n  using\
    \ imr = ImrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class SrReg: public RegisterModel<address>\n  {\n  public:\n    using rxne\
    \ = FieldModel<address, 0, 0x00000001>;\n    using csrne = FieldModel<address,\
    \ 1, 0x00000001>;\n    using perr = FieldModel<address, 2, 0x00000001>;\n    using\
    \ ovr = FieldModel<address, 3, 0x00000001>;\n    using sbd = FieldModel<address,\
    \ 4, 0x00000001>;\n    using syncd = FieldModel<address, 5, 0x00000001>;\n   \
    \ using ferr = FieldModel<address, 6, 0x00000001>;\n    using serr = FieldModel<address,\
    \ 7, 0x00000001>;\n    using terr = FieldModel<address, 8, 0x00000001>;\n    using\
    \ width5 = FieldModel<address, 16, 0x00007FFF>;\n  };\n\npublic:\n  using sr =\
    \ SrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class\
    \ IfcrReg: public RegisterModel<address>\n  {\n  public:\n    using perrcf = FieldModel<address,\
    \ 2, 0x00000001>;\n    using ovrcf = FieldModel<address, 3, 0x00000001>;\n   \
    \ using sbdcf = FieldModel<address, 4, 0x00000001>;\n    using syncdcf = FieldModel<address,\
    \ 5, 0x00000001>;\n  };\n\npublic:\n  using ifcr = IfcrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dr = FieldModel<address, 0, 0x00FFFFFF>;\n    using\
    \ pe = FieldModel<address, 24, 0x00000001>;\n    using v = FieldModel<address,\
    \ 25, 0x00000001>;\n    using u = FieldModel<address, 26, 0x00000001>;\n    using\
    \ c = FieldModel<address, 27, 0x00000001>;\n    using pt = FieldModel<address,\
    \ 28, 0x00000003>;\n  };\n\npublic:\n  using dr = DrReg<BaseAddress + 0x0010>;\n\
    \nprivate:\n  template <uint32_t address>\n  class CsrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using usr = FieldModel<address, 0, 0x0000FFFF>;\n    using\
    \ cs = FieldModel<address, 16, 0x000000FF>;\n    using sob = FieldModel<address,\
    \ 24, 0x00000001>;\n  };\n\npublic:\n  using csr = CsrReg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DirReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using thi = FieldModel<address, 0, 0x00001FFF>;\n    using\
    \ tlo = FieldModel<address, 16, 0x00001FFF>;\n  };\n\npublic:\n  using dir = DirReg<BaseAddress\
    \ + 0x0018>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_SPDIF_RX_H */\n"
  name: SPDIF_RX
- content: "#ifndef DRAL_STM32F446_HDMI_CEC_H\n#define DRAL_STM32F446_HDMI_CEC_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass hdmi_cec\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0x40006C00;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Cec_crReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using txeom = FieldModel<address, 2, 0x00000001>;\n    using\
    \ txsom = FieldModel<address, 1, 0x00000001>;\n    using cecen = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cec_cr = Cec_crReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cec_cfgrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using lstn = FieldModel<address, 31, 0x00000001>;\n    using\
    \ oar = FieldModel<address, 16, 0x00007FFF>;\n    using sftop = FieldModel<address,\
    \ 8, 0x00000001>;\n    using brdnogen = FieldModel<address, 7, 0x00000001>;\n\
    \    using lbpegen = FieldModel<address, 6, 0x00000001>;\n    using bregen = FieldModel<address,\
    \ 5, 0x00000001>;\n    using brestp = FieldModel<address, 4, 0x00000001>;\n  \
    \  using rxtol = FieldModel<address, 3, 0x00000001>;\n    using sft = FieldModel<address,\
    \ 0, 0x00000007>;\n  };\n\npublic:\n  using cec_cfgr = Cec_cfgrReg<BaseAddress\
    \ + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n  class Cec_txdrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using txd = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using cec_txdr = Cec_txdrReg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class Cec_rxdrReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using rxd = FieldModel<address,\
    \ 0, 0x000000FF>;\n  };\n\npublic:\n  using cec_rxdr = Cec_rxdrReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class Cec_isrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txacke = FieldModel<address,\
    \ 12, 0x00000001>;\n    using txerr = FieldModel<address, 11, 0x00000001>;\n \
    \   using txudr = FieldModel<address, 10, 0x00000001>;\n    using txend = FieldModel<address,\
    \ 9, 0x00000001>;\n    using txbr = FieldModel<address, 8, 0x00000001>;\n    using\
    \ arblst = FieldModel<address, 7, 0x00000001>;\n    using rxacke = FieldModel<address,\
    \ 6, 0x00000001>;\n    using lbpe = FieldModel<address, 5, 0x00000001>;\n    using\
    \ sbpe = FieldModel<address, 4, 0x00000001>;\n    using bre = FieldModel<address,\
    \ 3, 0x00000001>;\n    using rxovr = FieldModel<address, 2, 0x00000001>;\n   \
    \ using rxend = FieldModel<address, 1, 0x00000001>;\n    using rxbr = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using cec_isr = Cec_isrReg<BaseAddress +\
    \ 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class Cec_ierReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using txackie = FieldModel<address,\
    \ 12, 0x00000001>;\n    using txerrie = FieldModel<address, 11, 0x00000001>;\n\
    \    using txudrie = FieldModel<address, 10, 0x00000001>;\n    using txendie =\
    \ FieldModel<address, 9, 0x00000001>;\n    using txbrie = FieldModel<address,\
    \ 8, 0x00000001>;\n    using arblstie = FieldModel<address, 7, 0x00000001>;\n\
    \    using rxackie = FieldModel<address, 6, 0x00000001>;\n    using lbpeie = FieldModel<address,\
    \ 5, 0x00000001>;\n    using sbpeie = FieldModel<address, 4, 0x00000001>;\n  \
    \  using breie = FieldModel<address, 3, 0x00000001>;\n    using rxovrie = FieldModel<address,\
    \ 2, 0x00000001>;\n    using rxendie = FieldModel<address, 1, 0x00000001>;\n \
    \   using rxbrie = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n  using\
    \ cec_ier = Cec_ierReg<BaseAddress + 0x0014>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_HDMI_CEC_H\
    \ */\n"
  name: HDMI_CEC
- content: "#ifndef DRAL_STM32F446_FPU_H\n#define DRAL_STM32F446_FPU_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass fpu\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xE000EF34;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class FpccrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using lspact = FieldModel<address, 0, 0x00000001>;\n    using user\
    \ = FieldModel<address, 1, 0x00000001>;\n    using thread = FieldModel<address,\
    \ 3, 0x00000001>;\n    using hfrdy = FieldModel<address, 4, 0x00000001>;\n   \
    \ using mmrdy = FieldModel<address, 5, 0x00000001>;\n    using bfrdy = FieldModel<address,\
    \ 6, 0x00000001>;\n    using monrdy = FieldModel<address, 8, 0x00000001>;\n  \
    \  using lspen = FieldModel<address, 30, 0x00000001>;\n    using aspen = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using fpccr = FpccrReg<BaseAddress + 0x0000>;\n\
    \nprivate:\n  template <uint32_t address>\n  class FpcarReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using address = FieldModel<address, 3, 0x1FFFFFFF>;\n  };\n\
    \npublic:\n  using fpcar = FpcarReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class FpscrReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using ioc = FieldModel<address, 0, 0x00000001>;\n    using dzc\
    \ = FieldModel<address, 1, 0x00000001>;\n    using ofc = FieldModel<address, 2,\
    \ 0x00000001>;\n    using ufc = FieldModel<address, 3, 0x00000001>;\n    using\
    \ ixc = FieldModel<address, 4, 0x00000001>;\n    using idc = FieldModel<address,\
    \ 7, 0x00000001>;\n    using rmode = FieldModel<address, 22, 0x00000003>;\n  \
    \  using fz = FieldModel<address, 24, 0x00000001>;\n    using dn = FieldModel<address,\
    \ 25, 0x00000001>;\n    using ahp = FieldModel<address, 26, 0x00000001>;\n   \
    \ using v = FieldModel<address, 28, 0x00000001>;\n    using c = FieldModel<address,\
    \ 29, 0x00000001>;\n    using z = FieldModel<address, 30, 0x00000001>;\n    using\
    \ n = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using fpscr = FpscrReg<BaseAddress\
    \ + 0x0008>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_FPU_H */\n"
  name: FPU
- content: "#ifndef DRAL_STM32F446_MPU_H\n#define DRAL_STM32F446_MPU_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass mpu\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xE000ED90;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Mpu_typerReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using separate = FieldModel<address, 0, 0x00000001>;\n    using\
    \ dregion = FieldModel<address, 8, 0x000000FF>;\n    using iregion = FieldModel<address,\
    \ 16, 0x000000FF>;\n  };\n\npublic:\n  using mpu_typer = Mpu_typerReg<BaseAddress\
    \ + 0x0000>;\n\nprivate:\n  template <uint32_t address>\n  class Mpu_ctrlReg:\
    \ public RegisterModel<address>\n  {\n  public:\n    using enable = FieldModel<address,\
    \ 0, 0x00000001>;\n    using hfnmiena = FieldModel<address, 1, 0x00000001>;\n\
    \    using privdefena = FieldModel<address, 2, 0x00000001>;\n  };\n\npublic:\n\
    \  using mpu_ctrl = Mpu_ctrlReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Mpu_rnrReg: public RegisterModel<address>\n  {\n\
    \  public:\n    using region = FieldModel<address, 0, 0x000000FF>;\n  };\n\npublic:\n\
    \  using mpu_rnr = Mpu_rnrReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class Mpu_rbarReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using region = FieldModel<address, 0, 0x0000000F>;\n    using valid = FieldModel<address,\
    \ 4, 0x00000001>;\n    using addr = FieldModel<address, 5, 0x07FFFFFF>;\n  };\n\
    \npublic:\n  using mpu_rbar = Mpu_rbarReg<BaseAddress + 0x000C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Mpu_rasrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using enable = FieldModel<address, 0, 0x00000001>;\n    using\
    \ size = FieldModel<address, 1, 0x0000001F>;\n    using srd = FieldModel<address,\
    \ 8, 0x000000FF>;\n    using b = FieldModel<address, 16, 0x00000001>;\n    using\
    \ c = FieldModel<address, 17, 0x00000001>;\n    using s = FieldModel<address,\
    \ 18, 0x00000001>;\n    using tex = FieldModel<address, 19, 0x00000007>;\n   \
    \ using ap = FieldModel<address, 24, 0x00000007>;\n    using xn = FieldModel<address,\
    \ 28, 0x00000001>;\n  };\n\npublic:\n  using mpu_rasr = Mpu_rasrReg<BaseAddress\
    \ + 0x0010>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_MPU_H */\n"
  name: MPU
- content: "#ifndef DRAL_STM32F446_STK_H\n#define DRAL_STM32F446_STK_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass stk\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xE000E010;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CtrlReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using enable = FieldModel<address, 0, 0x00000001>;\n    using tickint = FieldModel<address,\
    \ 1, 0x00000001>;\n    using clksource = FieldModel<address, 2, 0x00000001>;\n\
    \    using countflag = FieldModel<address, 16, 0x00000001>;\n  };\n\npublic:\n\
    \  using ctrl = CtrlReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class LoadReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using reload = FieldModel<address, 0, 0x00FFFFFF>;\n  };\n\npublic:\n  using\
    \ load = LoadReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class ValReg: public RegisterModel<address>\n  {\n  public:\n    using current\
    \ = FieldModel<address, 0, 0x00FFFFFF>;\n  };\n\npublic:\n  using val = ValReg<BaseAddress\
    \ + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n  class CalibReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using tenms = FieldModel<address,\
    \ 0, 0x00FFFFFF>;\n    using skew = FieldModel<address, 30, 0x00000001>;\n   \
    \ using noref = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n  using\
    \ calib = CalibReg<BaseAddress + 0x000C>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_STK_H\
    \ */\n"
  name: STK
- content: "#ifndef DRAL_STM32F446_SCB_H\n#define DRAL_STM32F446_SCB_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass scb\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0xE000ED00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class CpuidReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using revision = FieldModel<address, 0, 0x0000000F>;\n    using\
    \ partno = FieldModel<address, 4, 0x00000FFF>;\n    using constant = FieldModel<address,\
    \ 16, 0x0000000F>;\n    using variant = FieldModel<address, 20, 0x0000000F>;\n\
    \    using implementer = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n\
    \  using cpuid = CpuidReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class IcsrReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using vectactive = FieldModel<address, 0, 0x000001FF>;\n    using rettobase\
    \ = FieldModel<address, 11, 0x00000001>;\n    using vectpending = FieldModel<address,\
    \ 12, 0x0000007F>;\n    using isrpending = FieldModel<address, 22, 0x00000001>;\n\
    \    using pendstclr = FieldModel<address, 25, 0x00000001>;\n    using pendstset\
    \ = FieldModel<address, 26, 0x00000001>;\n    using pendsvclr = FieldModel<address,\
    \ 27, 0x00000001>;\n    using pendsvset = FieldModel<address, 28, 0x00000001>;\n\
    \    using nmipendset = FieldModel<address, 31, 0x00000001>;\n  };\n\npublic:\n\
    \  using icsr = IcsrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class VtorReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using tbloff = FieldModel<address, 9, 0x001FFFFF>;\n  };\n\npublic:\n  using\
    \ vtor = VtorReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AircrReg: public RegisterModel<address>\n  {\n  public:\n    using vectreset\
    \ = FieldModel<address, 0, 0x00000001>;\n    using vectclractive = FieldModel<address,\
    \ 1, 0x00000001>;\n    using sysresetreq = FieldModel<address, 2, 0x00000001>;\n\
    \    using prigroup = FieldModel<address, 8, 0x00000007>;\n    using endianess\
    \ = FieldModel<address, 15, 0x00000001>;\n    using vectkeystat = FieldModel<address,\
    \ 16, 0x0000FFFF>;\n  };\n\npublic:\n  using aircr = AircrReg<BaseAddress + 0x000C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class ScrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using sleeponexit = FieldModel<address, 1, 0x00000001>;\n\
    \    using sleepdeep = FieldModel<address, 2, 0x00000001>;\n    using seveonpend\
    \ = FieldModel<address, 4, 0x00000001>;\n  };\n\npublic:\n  using scr = ScrReg<BaseAddress\
    \ + 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class CcrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using nonbasethrdena = FieldModel<address,\
    \ 0, 0x00000001>;\n    using usersetmpend = FieldModel<address, 1, 0x00000001>;\n\
    \    using unalign__trp = FieldModel<address, 3, 0x00000001>;\n    using div_0_trp\
    \ = FieldModel<address, 4, 0x00000001>;\n    using bfhfnmign = FieldModel<address,\
    \ 8, 0x00000001>;\n    using stkalign = FieldModel<address, 9, 0x00000001>;\n\
    \  };\n\npublic:\n  using ccr = CcrReg<BaseAddress + 0x0014>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Shpr1Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using pri_4 = FieldModel<address, 0, 0x000000FF>;\n    using pri_5\
    \ = FieldModel<address, 8, 0x000000FF>;\n    using pri_6 = FieldModel<address,\
    \ 16, 0x000000FF>;\n  };\n\npublic:\n  using shpr1 = Shpr1Reg<BaseAddress + 0x0018>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Shpr2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using pri_11 = FieldModel<address, 24, 0x000000FF>;\n  };\n\
    \npublic:\n  using shpr2 = Shpr2Reg<BaseAddress + 0x001C>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class Shpr3Reg: public RegisterModel<address>\n  {\n \
    \ public:\n    using pri_14 = FieldModel<address, 16, 0x000000FF>;\n    using\
    \ pri_15 = FieldModel<address, 24, 0x000000FF>;\n  };\n\npublic:\n  using shpr3\
    \ = Shpr3Reg<BaseAddress + 0x0020>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class ShcsrReg: public RegisterModel<address>\n  {\n  public:\n    using memfaultact\
    \ = FieldModel<address, 0, 0x00000001>;\n    using busfaultact = FieldModel<address,\
    \ 1, 0x00000001>;\n    using usgfaultact = FieldModel<address, 3, 0x00000001>;\n\
    \    using svcallact = FieldModel<address, 7, 0x00000001>;\n    using monitoract\
    \ = FieldModel<address, 8, 0x00000001>;\n    using pendsvact = FieldModel<address,\
    \ 10, 0x00000001>;\n    using systickact = FieldModel<address, 11, 0x00000001>;\n\
    \    using usgfaultpended = FieldModel<address, 12, 0x00000001>;\n    using memfaultpended\
    \ = FieldModel<address, 13, 0x00000001>;\n    using busfaultpended = FieldModel<address,\
    \ 14, 0x00000001>;\n    using svcallpended = FieldModel<address, 15, 0x00000001>;\n\
    \    using memfaultena = FieldModel<address, 16, 0x00000001>;\n    using busfaultena\
    \ = FieldModel<address, 17, 0x00000001>;\n    using usgfaultena = FieldModel<address,\
    \ 18, 0x00000001>;\n  };\n\npublic:\n  using shcsr = ShcsrReg<BaseAddress + 0x0024>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Cfsr_ufsr_bfsr_mmfsrReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using iaccviol = FieldModel<address,\
    \ 1, 0x00000001>;\n    using munstkerr = FieldModel<address, 3, 0x00000001>;\n\
    \    using mstkerr = FieldModel<address, 4, 0x00000001>;\n    using mlsperr =\
    \ FieldModel<address, 5, 0x00000001>;\n    using mmarvalid = FieldModel<address,\
    \ 7, 0x00000001>;\n    using ibuserr = FieldModel<address, 8, 0x00000001>;\n \
    \   using preciserr = FieldModel<address, 9, 0x00000001>;\n    using impreciserr\
    \ = FieldModel<address, 10, 0x00000001>;\n    using unstkerr = FieldModel<address,\
    \ 11, 0x00000001>;\n    using stkerr = FieldModel<address, 12, 0x00000001>;\n\
    \    using lsperr = FieldModel<address, 13, 0x00000001>;\n    using bfarvalid\
    \ = FieldModel<address, 15, 0x00000001>;\n    using undefinstr = FieldModel<address,\
    \ 16, 0x00000001>;\n    using invstate = FieldModel<address, 17, 0x00000001>;\n\
    \    using invpc = FieldModel<address, 18, 0x00000001>;\n    using nocp = FieldModel<address,\
    \ 19, 0x00000001>;\n    using unaligned = FieldModel<address, 24, 0x00000001>;\n\
    \    using divbyzero = FieldModel<address, 25, 0x00000001>;\n  };\n\npublic:\n\
    \  using cfsr_ufsr_bfsr_mmfsr = Cfsr_ufsr_bfsr_mmfsrReg<BaseAddress + 0x0028>;\n\
    \nprivate:\n  template <uint32_t address>\n  class HfsrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using vecttbl = FieldModel<address, 1, 0x00000001>;\n   \
    \ using forced = FieldModel<address, 30, 0x00000001>;\n    using debug_vt = FieldModel<address,\
    \ 31, 0x00000001>;\n  };\n\npublic:\n  using hfsr = HfsrReg<BaseAddress + 0x002C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class MmfarReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using mmfar = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using mmfar = MmfarReg<BaseAddress + 0x0034>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class BfarReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using bfar = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ bfar = BfarReg<BaseAddress + 0x0038>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class AfsrReg: public RegisterModel<address>\n  {\n  public:\n    using impdef\
    \ = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using afsr = AfsrReg<BaseAddress\
    \ + 0x003C>;\n\n};\n\n}\n\n#endif /* DRAL_STM32F446_SCB_H */\n"
  name: SCB
- content: "#ifndef DRAL_STM32F446_NVIC_STIR_H\n#define DRAL_STM32F446_NVIC_STIR_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass nvic_stir\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0xE000EF00;\n\nprivate:\n\
    \  template <uint32_t address>\n  class StirReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using intid = FieldModel<address, 0, 0x000001FF>;\n  };\n\
    \npublic:\n  using stir = StirReg<BaseAddress + 0x0000>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_NVIC_STIR_H */\n"
  name: NVIC_STIR
- content: "#ifndef DRAL_STM32F446_FPU_CPACR_H\n#define DRAL_STM32F446_FPU_CPACR_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass fpu_cpacr\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0xE000ED88;\n\nprivate:\n\
    \  template <uint32_t address>\n  class CpacrReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cp = FieldModel<address, 20, 0x0000000F>;\n  };\n\n\
    public:\n  using cpacr = CpacrReg<BaseAddress + 0x0000>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_FPU_CPACR_H */\n"
  name: FPU_CPACR
- content: "#ifndef DRAL_STM32F446_SCB_ACTRL_H\n#define DRAL_STM32F446_SCB_ACTRL_H\n\
    \n#include \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass scb_actrl\n\
    {\npublic:\n  static constexpr uint32_t BaseAddress = 0xE000E008;\n\nprivate:\n\
    \  template <uint32_t address>\n  class ActrlReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using dismcycint = FieldModel<address, 0, 0x00000001>;\n\
    \    using disdefwbuf = FieldModel<address, 1, 0x00000001>;\n    using disfold\
    \ = FieldModel<address, 2, 0x00000001>;\n    using disfpca = FieldModel<address,\
    \ 8, 0x00000001>;\n    using disoofp = FieldModel<address, 9, 0x00000001>;\n \
    \ };\n\npublic:\n  using actrl = ActrlReg<BaseAddress + 0x0000>;\n\n};\n\n}\n\n\
    #endif /* DRAL_STM32F446_SCB_ACTRL_H */\n"
  name: SCB_ACTRL
- content: "#ifndef DRAL_STM32F446_SDIO_H\n#define DRAL_STM32F446_SDIO_H\n\n#include\
    \ \"register_model.h\"\n\nnamespace dral::stm32f446 {\n\nclass sdio\n{\npublic:\n\
    \  static constexpr uint32_t BaseAddress = 0x40012C00;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class PowerReg: public RegisterModel<address>\n  {\n \
    \ public:\n    using pwrctrl = FieldModel<address, 0, 0x00000003>;\n  };\n\npublic:\n\
    \  using power = PowerReg<BaseAddress + 0x0000>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class ClkcrReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using hwfc_en = FieldModel<address, 14, 0x00000001>;\n    using negedge =\
    \ FieldModel<address, 13, 0x00000001>;\n    using widbus = FieldModel<address,\
    \ 11, 0x00000003>;\n    using bypass = FieldModel<address, 10, 0x00000001>;\n\
    \    using pwrsav = FieldModel<address, 9, 0x00000001>;\n    using clken = FieldModel<address,\
    \ 8, 0x00000001>;\n    using clkdiv = FieldModel<address, 0, 0x000000FF>;\n  };\n\
    \npublic:\n  using clkcr = ClkcrReg<BaseAddress + 0x0004>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class ArgReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using cmdarg = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using\
    \ arg = ArgReg<BaseAddress + 0x0008>;\n\nprivate:\n  template <uint32_t address>\n\
    \  class CmdReg: public RegisterModel<address>\n  {\n  public:\n    using ce_atacmd\
    \ = FieldModel<address, 14, 0x00000001>;\n    using nien = FieldModel<address,\
    \ 13, 0x00000001>;\n    using encmdcompl = FieldModel<address, 12, 0x00000001>;\n\
    \    using sdiosuspend = FieldModel<address, 11, 0x00000001>;\n    using cpsmen\
    \ = FieldModel<address, 10, 0x00000001>;\n    using waitpend = FieldModel<address,\
    \ 9, 0x00000001>;\n    using waitint = FieldModel<address, 8, 0x00000001>;\n \
    \   using waitresp = FieldModel<address, 6, 0x00000003>;\n    using cmdindex =\
    \ FieldModel<address, 0, 0x0000003F>;\n  };\n\npublic:\n  using cmd = CmdReg<BaseAddress\
    \ + 0x000C>;\n\nprivate:\n  template <uint32_t address>\n  class RespcmdReg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using respcmd = FieldModel<address,\
    \ 0, 0x0000003F>;\n  };\n\npublic:\n  using respcmd = RespcmdReg<BaseAddress +\
    \ 0x0010>;\n\nprivate:\n  template <uint32_t address>\n  class Resp1Reg: public\
    \ RegisterModel<address>\n  {\n  public:\n    using cardstatus1 = FieldModel<address,\
    \ 0, 0xFFFFFFFF>;\n  };\n\npublic:\n  using resp1 = Resp1Reg<BaseAddress + 0x0014>;\n\
    \nprivate:\n  template <uint32_t address>\n  class Resp2Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cardstatus2 = FieldModel<address, 0, 0xFFFFFFFF>;\n\
    \  };\n\npublic:\n  using resp2 = Resp2Reg<BaseAddress + 0x0018>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Resp3Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cardstatus3 = FieldModel<address, 0, 0xFFFFFFFF>;\n\
    \  };\n\npublic:\n  using resp3 = Resp3Reg<BaseAddress + 0x001C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class Resp4Reg: public RegisterModel<address>\n\
    \  {\n  public:\n    using cardstatus4 = FieldModel<address, 0, 0xFFFFFFFF>;\n\
    \  };\n\npublic:\n  using resp4 = Resp4Reg<BaseAddress + 0x0020>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class DtimerReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using datatime = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using dtimer = DtimerReg<BaseAddress + 0x0024>;\n\nprivate:\n  template\
    \ <uint32_t address>\n  class DlenReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using datalength = FieldModel<address, 0, 0x01FFFFFF>;\n  };\n\npublic:\n\
    \  using dlen = DlenReg<BaseAddress + 0x0028>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class DctrlReg: public RegisterModel<address>\n  {\n  public:\n\
    \    using sdioen = FieldModel<address, 11, 0x00000001>;\n    using rwmod = FieldModel<address,\
    \ 10, 0x00000001>;\n    using rwstop = FieldModel<address, 9, 0x00000001>;\n \
    \   using rwstart = FieldModel<address, 8, 0x00000001>;\n    using dblocksize\
    \ = FieldModel<address, 4, 0x0000000F>;\n    using dmaen = FieldModel<address,\
    \ 3, 0x00000001>;\n    using dtmode = FieldModel<address, 2, 0x00000001>;\n  \
    \  using dtdir = FieldModel<address, 1, 0x00000001>;\n    using dten = FieldModel<address,\
    \ 0, 0x00000001>;\n  };\n\npublic:\n  using dctrl = DctrlReg<BaseAddress + 0x002C>;\n\
    \nprivate:\n  template <uint32_t address>\n  class DcountReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using datacount = FieldModel<address, 0, 0x01FFFFFF>;\n \
    \ };\n\npublic:\n  using dcount = DcountReg<BaseAddress + 0x0030>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class StaReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using ceataend = FieldModel<address, 23, 0x00000001>;\n \
    \   using sdioit = FieldModel<address, 22, 0x00000001>;\n    using rxdavl = FieldModel<address,\
    \ 21, 0x00000001>;\n    using txdavl = FieldModel<address, 20, 0x00000001>;\n\
    \    using rxfifoe = FieldModel<address, 19, 0x00000001>;\n    using txfifoe =\
    \ FieldModel<address, 18, 0x00000001>;\n    using rxfifof = FieldModel<address,\
    \ 17, 0x00000001>;\n    using txfifof = FieldModel<address, 16, 0x00000001>;\n\
    \    using rxfifohf = FieldModel<address, 15, 0x00000001>;\n    using txfifohe\
    \ = FieldModel<address, 14, 0x00000001>;\n    using rxact = FieldModel<address,\
    \ 13, 0x00000001>;\n    using txact = FieldModel<address, 12, 0x00000001>;\n \
    \   using cmdact = FieldModel<address, 11, 0x00000001>;\n    using dbckend = FieldModel<address,\
    \ 10, 0x00000001>;\n    using stbiterr = FieldModel<address, 9, 0x00000001>;\n\
    \    using dataend = FieldModel<address, 8, 0x00000001>;\n    using cmdsent =\
    \ FieldModel<address, 7, 0x00000001>;\n    using cmdrend = FieldModel<address,\
    \ 6, 0x00000001>;\n    using rxoverr = FieldModel<address, 5, 0x00000001>;\n \
    \   using txunderr = FieldModel<address, 4, 0x00000001>;\n    using dtimeout =\
    \ FieldModel<address, 3, 0x00000001>;\n    using ctimeout = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dcrcfail = FieldModel<address, 1, 0x00000001>;\n\
    \    using ccrcfail = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n \
    \ using sta = StaReg<BaseAddress + 0x0034>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class IcrReg: public RegisterModel<address>\n  {\n  public:\n  \
    \  using ceataendc = FieldModel<address, 23, 0x00000001>;\n    using sdioitc =\
    \ FieldModel<address, 22, 0x00000001>;\n    using dbckendc = FieldModel<address,\
    \ 10, 0x00000001>;\n    using stbiterrc = FieldModel<address, 9, 0x00000001>;\n\
    \    using dataendc = FieldModel<address, 8, 0x00000001>;\n    using cmdsentc\
    \ = FieldModel<address, 7, 0x00000001>;\n    using cmdrendc = FieldModel<address,\
    \ 6, 0x00000001>;\n    using rxoverrc = FieldModel<address, 5, 0x00000001>;\n\
    \    using txunderrc = FieldModel<address, 4, 0x00000001>;\n    using dtimeoutc\
    \ = FieldModel<address, 3, 0x00000001>;\n    using ctimeoutc = FieldModel<address,\
    \ 2, 0x00000001>;\n    using dcrcfailc = FieldModel<address, 1, 0x00000001>;\n\
    \    using ccrcfailc = FieldModel<address, 0, 0x00000001>;\n  };\n\npublic:\n\
    \  using icr = IcrReg<BaseAddress + 0x0038>;\n\nprivate:\n  template <uint32_t\
    \ address>\n  class MaskReg: public RegisterModel<address>\n  {\n  public:\n \
    \   using ceataendie = FieldModel<address, 23, 0x00000001>;\n    using sdioitie\
    \ = FieldModel<address, 22, 0x00000001>;\n    using rxdavlie = FieldModel<address,\
    \ 21, 0x00000001>;\n    using txdavlie = FieldModel<address, 20, 0x00000001>;\n\
    \    using rxfifoeie = FieldModel<address, 19, 0x00000001>;\n    using txfifoeie\
    \ = FieldModel<address, 18, 0x00000001>;\n    using rxfifofie = FieldModel<address,\
    \ 17, 0x00000001>;\n    using txfifofie = FieldModel<address, 16, 0x00000001>;\n\
    \    using rxfifohfie = FieldModel<address, 15, 0x00000001>;\n    using txfifoheie\
    \ = FieldModel<address, 14, 0x00000001>;\n    using rxactie = FieldModel<address,\
    \ 13, 0x00000001>;\n    using txactie = FieldModel<address, 12, 0x00000001>;\n\
    \    using cmdactie = FieldModel<address, 11, 0x00000001>;\n    using dbckendie\
    \ = FieldModel<address, 10, 0x00000001>;\n    using stbiterrie = FieldModel<address,\
    \ 9, 0x00000001>;\n    using dataendie = FieldModel<address, 8, 0x00000001>;\n\
    \    using cmdsentie = FieldModel<address, 7, 0x00000001>;\n    using cmdrendie\
    \ = FieldModel<address, 6, 0x00000001>;\n    using rxoverrie = FieldModel<address,\
    \ 5, 0x00000001>;\n    using txunderrie = FieldModel<address, 4, 0x00000001>;\n\
    \    using dtimeoutie = FieldModel<address, 3, 0x00000001>;\n    using ctimeoutie\
    \ = FieldModel<address, 2, 0x00000001>;\n    using dcrcfailie = FieldModel<address,\
    \ 1, 0x00000001>;\n    using ccrcfailie = FieldModel<address, 0, 0x00000001>;\n\
    \  };\n\npublic:\n  using mask = MaskReg<BaseAddress + 0x003C>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class FifocntReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fifocount = FieldModel<address, 0, 0x00FFFFFF>;\n \
    \ };\n\npublic:\n  using fifocnt = FifocntReg<BaseAddress + 0x0048>;\n\nprivate:\n\
    \  template <uint32_t address>\n  class FifoReg: public RegisterModel<address>\n\
    \  {\n  public:\n    using fifodata = FieldModel<address, 0, 0xFFFFFFFF>;\n  };\n\
    \npublic:\n  using fifo = FifoReg<BaseAddress + 0x0080>;\n\n};\n\n}\n\n#endif\
    \ /* DRAL_STM32F446_SDIO_H */\n"
  name: SDIO
- content: "#ifndef DRAL_REGISTER_MODEL_H\n#define DRAL_REGISTER_MODEL_H\n\n#include\
    \ <cstdint>\n\nnamespace dral {\n\ntemplate <uint32_t address>\nclass RegisterModel\n\
    {\npublic:\n  static constexpr uint32_t Address = address;\n\npublic:\n  static\
    \ uint32_t read()\n  {\n    volatile uint32_t* reg = reinterpret_cast<volatile\
    \ uint32_t*>(address);\n    return *reg;\n  }\n\n  static void write(uint32_t\
    \ value)\n  {\n    volatile uint32_t* reg = reinterpret_cast<volatile uint32_t*>(address);\n\
    \    *reg = value;\n  }\n};\n\n\ntemplate <uint32_t address, uint32_t bankOffset>\n\
    class RegisterBankModel\n{\npublic:\n  static constexpr uint32_t Address = address;\n\
    \npublic:\n  static uint32_t read(uint32_t bank)\n  {\n    volatile uint32_t*\
    \ reg = reinterpret_cast<volatile uint32_t*>(address + (bankOffset * bank));\n\
    \    return *reg;\n  }\n\n  static void write(uint32_t bank, uint32_t value)\n\
    \  {\n    volatile uint32_t* reg = reinterpret_cast<volatile uint32_t*>(address\
    \ + (bankOffset * bank));\n    *reg = value;\n  }\n};\n\n\ntemplate <uint32_t\
    \ address, uint32_t position, uint32_t mask, uint32_t bankOffset = 0>\nclass FieldModel\n\
    {\npublic:\n  static constexpr uint32_t Mask = mask;\n  static constexpr uint32_t\
    \ Position = position;\n\npublic:\n  static void write(uint32_t bank, uint32_t\
    \ value)\n  {\n    volatile uint32_t* reg = reinterpret_cast<volatile uint32_t*>(address\
    \ + (bankOffset * bank));\n    *reg = (*reg & ~(mask << position)) | ((value &\
    \ mask) << position);\n  }\n\n  static uint32_t read(uint32_t bank)\n  {\n   \
    \ volatile uint32_t* reg = reinterpret_cast<volatile uint32_t*>(address + (bankOffset\
    \ * bank));\n    return (*reg >> position) & mask;\n  }\n\n  static uint32_t set(uint32_t\
    \ value)\n  {\n    return (value & mask) << position;\n  }\n\n  static void set(uint32_t&\
    \ reg, uint32_t value)\n  {\n    reg |= (value & mask) << position;\n  }\n\n \
    \ static uint32_t clear()\n  {\n    return ~mask;\n  }\n\n  static void clear(uint32_t&\
    \ reg)\n  {\n    reg &= ~mask;\n  }\n\n  static uint32_t getFromRegValue(uint32_t\
    \ regValue)\n  {\n    return (regValue >> position) & mask;\n  }\n};\n\n\ntemplate\
    \ <uint32_t address, uint32_t position, uint32_t mask>\nclass FieldModel<address,\
    \ position, mask, 0>\n{\npublic:\n  static constexpr uint32_t Mask = mask;\n \
    \ static constexpr uint32_t Position = position;\n\npublic:\n  static void write(uint32_t\
    \ value)\n  {\n    volatile uint32_t* reg = reinterpret_cast<volatile uint32_t*>(address);\n\
    \    *reg = (*reg & ~(mask << position)) | ((value & mask) << position);\n  }\n\
    \n  static uint32_t read()\n  {\n    volatile uint32_t* reg = reinterpret_cast<volatile\
    \ uint32_t*>(address);\n    return (*reg >> position) & mask;\n  }\n\n  static\
    \ uint32_t set(uint32_t value)\n  {\n    return (value & mask) << position;\n\
    \  }\n\n  static void set(uint32_t& reg, uint32_t value)\n  {\n    reg |= (value\
    \ & mask) << position;\n  }\n\n  static uint32_t clear()\n  {\n    return ~mask;\n\
    \  }\n\n  static void clear(uint32_t& reg)\n  {\n    reg &= ~mask;\n  }\n\n  static\
    \ uint32_t getFromRegValue(uint32_t regValue)\n  {\n    return (regValue >> position)\
    \ & mask;\n  }\n};\n\n} // namespace\n\n#endif /* DRAL_REGISTER_MODEL_H */\n"
  name: register_model
